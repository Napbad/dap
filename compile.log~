-- The C compiler identification is GNU 14.2.1
-- The CXX compiler identification is GNU 14.2.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Performing Test HAVE_FFI_CALL
-- Performing Test HAVE_FFI_CALL - Success
-- Found FFI: /usr/lib/libffi.so
-- Looking for histedit.h
-- Looking for histedit.h - found
-- Found LibEdit: /usr/include (found version "2.11")
-- Performing Test Terminfo_LINKABLE
-- Performing Test Terminfo_LINKABLE - Success
-- Found Terminfo: /usr/lib/libtinfo.so
-- Found ZLIB: /usr/lib/libz.so (found version "1.3.1")
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- Found LibXml2: /usr/lib/libxml2.so (found version "2.13.5")
-- Found CURL: /usr/lib/libcurl.so (found version "8.11.0")
-- Found LLVM 18.1.8
-- Linker detection: GNU ld
-- Configuring done (0.5s)
-- Generating done (0.0s)
-- Build files have been written to: /home/napbad/tmp/dap/build
[1/21] Building CXX object CMakeFiles/dap_main.dir/src/core/gc/DGC.cpp.o
/home/napbad/tmp/dap/src/core/gc/DGC.cpp:5:1: warning: included header DGC.h is not used directly [misc-include-cleaner]
    5 | #include "DGC.h"
      | ^~~~~~~~~~~~~~~~
[2/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/objectGen_d.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/objectGen_d.cpp:5:1: warning: included header objectGen_d.h is not used directly [misc-include-cleaner]
    5 | #include "objectGen_d.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~
[3/21] Building CXX object CMakeFiles/dap_main.dir/src/core/utilities/obj_util.cpp.o
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:7:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    7 | void obj_util::deleteDelayedObj()
      |                ^
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:9:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    9 |     while (!delayedDeleteObjVector.empty())
      |     ^
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:11:9: warning: 'const auto obj' can be declared as 'auto *const obj' [llvm-qualified-auto,readability-qualified-auto]
   11 |         const auto obj = delayedDeleteObjVector.back();
      |         ^~~~~~~~~~
      |         auto *const 
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:12:67: warning: 'operator-' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   12 |         delayedDeleteObjVector.erase(delayedDeleteObjVector.end() - 1);
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1148:7: note: resolves to this declaration
 1148 |       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:13:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
   13 |         delete obj;
      |         ^      ~~~
/home/napbad/tmp/dap/src/core/utilities/obj_util.cpp:11:9: note: variable declared here
   11 |         const auto obj = delayedDeleteObjVector.back();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[4/21] Building CXX object CMakeFiles/dap_main.dir/src/core/utilities/data_struct_util.cpp.o
/home/napbad/tmp/dap/src/core/utilities/data_struct_util.cpp:5:1: warning: included header data_struct_util.h is not used directly [misc-include-cleaner]
    5 | #include "data_struct_util.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[5/21] Building CXX object CMakeFiles/dap_main.dir/src/core/common/global.cpp.o
/home/napbad/tmp/dap/src/core/common/global.cpp:6:1: warning: included header file_util.h is not used directly [misc-include-cleaner]
    6 | #include "../utilities/file_util.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    7 | 
/home/napbad/tmp/dap/src/core/common/global.cpp:8:1: warning: system include llvm/IR/DerivedTypes.h not allowed [llvmlibc-restrict-system-libc-headers]
    8 | #include <llvm/IR/DerivedTypes.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    9 | #include <llvm/IR/LLVMContext.h>
/home/napbad/tmp/dap/src/core/common/global.cpp:9:1: warning: system include llvm/IR/LLVMContext.h not allowed [llvmlibc-restrict-system-libc-headers]
    9 | #include <llvm/IR/LLVMContext.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/common/global.cpp:9:1: warning: included header LLVMContext.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/common/global.cpp:10:1: warning: system include llvm/IR/Type.h not allowed [llvmlibc-restrict-system-libc-headers]
   10 | #include <llvm/IR/Type.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
   11 | 
/home/napbad/tmp/dap/src/core/common/global.cpp:12:9: warning: variable 'globalHeap_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   12 | heap_d *globalHeap_d = nullptr;
      |         ^
/home/napbad/tmp/dap/src/core/common/global.cpp:12:9: warning: variable 'globalHeap_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:12:9: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:14:1: warning: initializing non-owner 'std::map<Value *, AllocaInst *> *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:14:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:14:6: warning: no header providing "std::map" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
      |      ^
/home/napbad/tmp/dap/src/core/common/global.cpp:14:34: warning: initialization of 'gepMapping_d' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
      |                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:14:34: warning: variable 'gepMapping_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
      |                                  ^
/home/napbad/tmp/dap/src/core/common/global.cpp:14:34: warning: variable 'gepMapping_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:14:34: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:16:1: warning: initializing non-owner 'std::map<BasicBlock *, Value *> *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:16:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:16:10: warning: no header providing "llvm::BasicBlock" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
      |          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:16:34: warning: initialization of 'blockMappingRet_d' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
      |                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:16:34: warning: variable 'blockMappingRet_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
      |                                  ^
/home/napbad/tmp/dap/src/core/common/global.cpp:16:34: warning: variable 'blockMappingRet_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:16:34: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:18:1: warning: initializing non-owner 'std::stack<Type *> *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:18:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:18:6: warning: no header providing "std::stack" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
   17 | 
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
      |      ^
/home/napbad/tmp/dap/src/core/common/global.cpp:18:21: warning: initialization of 'expectDerefType_d' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_stack.h:162:2: note: possibly throwing constructor declared here
  162 |         stack()
      |         ^
/home/napbad/tmp/dap/src/core/common/global.cpp:18:21: warning: variable 'expectDerefType_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
      |                     ^
/home/napbad/tmp/dap/src/core/common/global.cpp:18:21: warning: variable 'expectDerefType_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:18:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:20:1: warning: initializing non-owner 'std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *' (aka 'unordered_map<basic_string<char>, dap::inter_gen::ModuleMetaData *> *') with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     new std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *>();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:20:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:20:6: warning: no header providing "std::unordered_map" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
   17 | 
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
   19 | 
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      |      ^
/home/napbad/tmp/dap/src/core/common/global.cpp:20:25: warning: no header providing "std::string" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
   17 | 
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
   19 | 
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      |                         ^
/home/napbad/tmp/dap/src/core/common/global.cpp:20:49: warning: no header providing "dap::inter_gen::ModuleMetaData" is directly included [misc-include-cleaner]
    7 | 
    8 | #include <llvm/IR/DerivedTypes.h>
    9 | #include <llvm/IR/LLVMContext.h>
   10 | #include <llvm/IR/Type.h>
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
   17 | 
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
   19 | 
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      |                                                 ^
/home/napbad/tmp/dap/src/core/common/global.cpp:20:68: warning: initialization of 'moduleMetadataMap_d' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      |                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:20:68: warning: variable 'moduleMetadataMap_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
      |                                                                    ^
/home/napbad/tmp/dap/src/core/common/global.cpp:20:68: warning: variable 'moduleMetadataMap_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:20:68: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:23:1: warning: initializing non-owner 'std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   23 | std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *programMap_d =
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     new std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *>();
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:23:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:23:60: warning: no header providing "dap::inter_gen::InterGenContext" is directly included [misc-include-cleaner]
   23 | std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *programMap_d =
      |                                                            ^
/home/napbad/tmp/dap/src/core/common/global.cpp:23:80: warning: initialization of 'programMap_d' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   23 | std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *programMap_d =
      |                                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:23:80: warning: variable 'programMap_d' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   23 | std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *programMap_d =
      |                                                                                ^
/home/napbad/tmp/dap/src/core/common/global.cpp:23:80: warning: variable 'programMap_d' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:23:80: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:26:1: warning: initializing non-owner 'std::vector<std::string> *' (aka 'vector<basic_string<char>> *') with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   26 | std::vector<std::string> *filesToCompile = new std::vector<std::string>();
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/common/global.cpp:26:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/common/global.cpp:26:6: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
   11 | 
   12 | heap_d *globalHeap_d = nullptr;
   13 | 
   14 | std::map<Value *, AllocaInst *> *gepMapping_d = new std::map<Value *, AllocaInst *>();
   15 | 
   16 | std::map<BasicBlock *, Value *> *blockMappingRet_d = new std::map<BasicBlock *, Value *>();
   17 | 
   18 | std::stack<Type *> *expectDerefType_d = new std::stack<Type *>();
   19 | 
   20 | std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *> *moduleMetadataMap_d =
   21 |     new std::unordered_map<std::string, dap::inter_gen::ModuleMetaData *>();
   22 | 
   23 | std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *> *programMap_d =
   24 |     new std::unordered_map<dap::parser::Program *, dap::inter_gen::InterGenContext *>();
   25 | 
   26 | std::vector<std::string> *filesToCompile = new std::vector<std::string>();
      |      ^
/home/napbad/tmp/dap/src/core/common/global.cpp:26:27: warning: initialization of 'filesToCompile' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   26 | std::vector<std::string> *filesToCompile = new std::vector<std::string>();
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/common/global.cpp:26:27: warning: variable 'filesToCompile' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   26 | std::vector<std::string> *filesToCompile = new std::vector<std::string>();
      |                           ^
/home/napbad/tmp/dap/src/core/common/global.cpp:26:27: warning: variable 'filesToCompile' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/common/global.cpp:26:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:28:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
   28 | std::string buildDir = "./build/";
      | ^
/home/napbad/tmp/dap/src/core/common/global.cpp:28:13: warning: initialization of 'buildDir' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   28 | std::string buildDir = "./build/";
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:7: note: possibly throwing constructor declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:28:13: warning: variable 'buildDir' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   28 | std::string buildDir = "./build/";
      |             ^
/home/napbad/tmp/dap/src/core/common/global.cpp:28:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:28:24: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   28 | std::string buildDir = "./build/";
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:30:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
   30 | std::string targetExecName = "main";
      | ^
/home/napbad/tmp/dap/src/core/common/global.cpp:30:13: warning: initialization of 'targetExecName' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   30 | std::string targetExecName = "main";
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:7: note: possibly throwing constructor declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:30:13: warning: variable 'targetExecName' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   30 | std::string targetExecName = "main";
      |             ^
/home/napbad/tmp/dap/src/core/common/global.cpp:30:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/common/global.cpp:30:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   30 | std::string targetExecName = "main";
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:32:33: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   32 | dap::inter_gen::ModuleMetaData *getModuleMetaData(const std::string &name)
      |                                 ^
/home/napbad/tmp/dap/src/core/common/global.cpp:32:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | dap::inter_gen::ModuleMetaData *getModuleMetaData(const std::string &name)
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^                                         
      | auto                                                                       -> dap::inter_gen::ModuleMetaData *
/home/napbad/tmp/dap/src/core/common/global.cpp:34:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   34 |     for (const auto&[moduleName, metaData] : *moduleMetadataMap_d)
      |     ^
/home/napbad/tmp/dap/src/core/common/global.cpp:34:44: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (const auto&[moduleName, metaData] : *moduleMetadataMap_d)
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:34:44: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (const auto&[moduleName, metaData] : *moduleMetadataMap_d)
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:34:44: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     for (const auto&[moduleName, metaData] : *moduleMetadataMap_d)
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/common/global.cpp:36:24: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   36 |         if (moduleName == name)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
[6/21] Building CXX object CMakeFiles/dap_main.dir/src/core/utilities/string_util.cpp.o
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:7:1: warning: system include numeric not allowed [llvmlibc-restrict-system-libc-headers]
    7 | #include <numeric>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:7:1: warning: included header numeric is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:8:1: warning: system include regex not allowed [llvmlibc-restrict-system-libc-headers]
    8 | #include <regex>
      | ^~~~~~~~~~~~~~~~
    9 | #include <utility>
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:9:1: warning: system include utility not allowed [llvmlibc-restrict-system-libc-headers]
    9 | #include <utility>
      | ^~~~~~~~~~~~~~~~~~
   10 | 
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:11:1: warning: #includes are not sorted properly [llvm-include-order]
   11 | #include <bits/chrono.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:11:1: warning: system include bits/chrono.h not allowed [llvmlibc-restrict-system-libc-headers]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:11:1: warning: included header chrono.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:12:1: warning: system include cstring not allowed [llvmlibc-restrict-system-libc-headers]
   12 | #include <cstring>
      | ^~~~~~~~~~~~~~~~~~
   13 | #include "string_util.h"
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:15:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
   15 | using namespace std;
      | ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:15:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   15 | using namespace std;
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:17:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   17 | namespace dap::util
      |           ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:19:1: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
   13 | #include "string_util.h"
   14 | #include "src/core/common/reserve.h"
   15 | using namespace std;
   16 | 
   17 | namespace dap::util
   18 | {
   19 | vector<string> split(const string &str, const char delimiter)
      | ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:19:8: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    9 | #include <utility>
   10 | 
   11 | #include <bits/chrono.h>
   12 | #include <cstring>
   13 | #include "string_util.h"
   14 | #include "src/core/common/reserve.h"
   15 | using namespace std;
   16 | 
   17 | namespace dap::util
   18 | {
   19 | vector<string> split(const string &str, const char delimiter)
      |        ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:19:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   19 | vector<string> split(const string &str, const char delimiter)
      | ~~~~~~~~~~~~~~ ^                                             
      | auto                                                          -> vector<string>
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:21:21: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   21 |     if (str.empty())
      |                     ^
      |                      {
   22 |         return {};
      |                   
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:24:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   24 |     auto pos = str.find(delimiter);
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:2758:24: note: default parameter was declared here
 2758 |       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
      |                        ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:28:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   28 |     while (pos != string::npos)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:28:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'pos' and may cause performance degradation [altera-id-dependent-backward-branch]
   28 |     while (pos != string::npos)
      |            ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:24:5: note: inferred assignment of ID-dependent value from ID-dependent 
   24 |     auto pos = str.find(delimiter);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:31:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |         _str = _str.substr(pos + 1);
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:858:7: note: resolves to this declaration
  858 |       operator=(basic_string&& __str)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:31:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   31 |         _str = _str.substr(pos + 1);
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3208:35: note: default parameter was declared here
 3208 |       substr(size_type __pos = 0, size_type __n = npos) const
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:32:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   32 |         pos = _str.find(delimiter);
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:2758:24: note: default parameter was declared here
 2758 |       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
      |                        ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:40:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 | bool strIsNum(const std::string &s)
      | ~~~~ ^                             
      | auto                                -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:40:34: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   40 | bool strIsNum(const std::string &s)
      |                                  ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:42:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   42 |     for (char const &ch : s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:42:22: warning: variable name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
   42 |     for (char const &ch : s)
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:42:25: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   42 |     for (char const &ch : s)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:42:25: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   42 |     for (char const &ch : s)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:42:25: warning: 'operator==<const char *, std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   42 |     for (char const &ch : s)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:44:14: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
   44 |         if (!std::isdigit(ch))
      |             ~^               
      |                               == 0
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:44:19: warning: no header providing "std::isdigit" is directly included [misc-include-cleaner]
    7 |         if (!std::isdigit(ch))
      |                   ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:44:31: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   44 |         if (!std::isdigit(ch))
      |                               ^
      |                                {
   45 |             return false;
      |                          
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:50:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   50 | bool strIsOp(const std::string &oper)
      | ~~~~ ^                               
      | auto                                  -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   52 |     for (const auto &op : ops)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:5: warning: replace loop by 'std::ranges::any_of()' [readability-use-anyofallof]
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:22: warning: variable name 'op' is too short, expected at least 3 characters [readability-identifier-length]
   52 |     for (const auto &op : ops)
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:25: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (const auto &op : ops)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:25: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (const auto &op : ops)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:52:25: warning: 'operator==<std::basic_string<char> *, std::vector<std::basic_string<char>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |     for (const auto &op : ops)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:54:16: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |         if (op == oper)
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:63:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 | bool strIsBool(const std::string &string)
      | ~~~~ ^                                   
      | auto                                      -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:65:19: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     return string == D_TRUE || string == D_FALSE;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:65:39: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |     return string == D_TRUE || string == D_FALSE;
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:68:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 | bool strIsStr(const std::string &string)
      | ~~~~ ^                                  
      | auto                                     -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:70:40: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   70 |     return string.size() >= 2 && string[0] == '"' && string[string.size() - 1] == '"';
      |                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:70:60: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   70 |     return string.size() >= 2 && string[0] == '"' && string[string.size() - 1] == '"';
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:73:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   73 | bool strIsFloat(const std::string &string)
      | ~~~~ ^                                    
      | auto                                       -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:75:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   75 |     const std::regex floatRegex("^[-+]?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][-+]?[0-9]+)?$");
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/regex.h:472:40: note: default parameter was declared here
  472 |       basic_regex(const _Ch_type* __p, flag_type __f = ECMAScript)
      |                                        ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:77:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   77 |     return std::regex_match(string, floatRegex);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/regex.h:2397:3: note: default parameter was declared here
 2397 |                 regex_constants::match_flag_type __flags
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:77:12: warning: 'regex_match<std::char_traits<char>, std::allocator<char>, char, std::regex_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     return std::regex_match(string, floatRegex);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/regex.h:2395:5: note: resolves to this declaration
 2395 |     regex_match(const basic_string<_Ch_type, _Ch_traits, _Str_allocator>& __s,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:80:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   80 | bool strIsChar(const std::string &string, char c)
      | ~~~~ ^                                           
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:80:48: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   80 | bool strIsChar(const std::string &string, char c)
      |                                                ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:84:16: warning: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr]
   82 |     if (string.size() == 1 && string.at(0) == c)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |     return string.size() == 1 && string.at(0) == c
   83 |     {
      |     ~
   84 |         return true;
      |         ~~~~~~~^~~~~
   85 |     }
      |     ~
   86 |     return false;
      |     ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:89:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   89 | bool strIsChar(const std::string &string)
      | ~~~~ ^                                   
      | auto                                      -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:94:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   94 | bool strIsIdent(const std::string &ident)
      | ~~~~ ^                                   
      | auto                                      -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:103:10: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  103 |     if (!std::isalpha(ident[0]) && ident[0] != '_')
      |         ~^
      |         (                       == 0)
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:103:15: warning: no header providing "std::isalpha" is directly included [misc-include-cleaner]
  103 |     if (!std::isalpha(ident[0]) && ident[0] != '_')
      |               ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:103:28: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |     if (!std::isalpha(ident[0]) && ident[0] != '_')
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:103:41: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |     if (!std::isalpha(ident[0]) && ident[0] != '_')
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:109:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  109 |     for (size_t i = 1; i < ident.size(); ++i)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:111:14: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  111 |         if (!std::isalnum(ident[i]) && ident[i] != '_')
      |             ~^
      |             (                       == 0)
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:111:19: warning: no header providing "std::isalnum" is directly included [misc-include-cleaner]
  111 |         if (!std::isalnum(ident[i]) && ident[i] != '_')
      |                   ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:111:32: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |         if (!std::isalnum(ident[i]) && ident[i] != '_')
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:111:45: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |         if (!std::isalnum(ident[i]) && ident[i] != '_')
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1247:7: note: resolves to this declaration
 1247 |       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:121:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  121 | bool strIsOnlyIdent(const std::string &ident)
      | ~~~~ ^                                       
      | auto                                          -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:123:12: warning: 'strIsIdent' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  123 |     return strIsIdent(ident) && !strIsOp(ident) && !strIsBool(ident) && !strIsStr(ident) &&
      |            ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:94:6: note: resolves to this declaration
   94 | bool strIsIdent(const std::string &ident)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:123:34: warning: 'strIsOp' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  123 |     return strIsIdent(ident) && !strIsOp(ident) && !strIsBool(ident) && !strIsStr(ident) &&
      |                                  ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:50:6: note: resolves to this declaration
   50 | bool strIsOp(const std::string &oper)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:123:53: warning: 'strIsBool' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  123 |     return strIsIdent(ident) && !strIsOp(ident) && !strIsBool(ident) && !strIsStr(ident) &&
      |                                                     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:63:6: note: resolves to this declaration
   63 | bool strIsBool(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:123:74: warning: 'strIsStr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  123 |     return strIsIdent(ident) && !strIsOp(ident) && !strIsBool(ident) && !strIsStr(ident) &&
      |                                                                          ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:68:6: note: resolves to this declaration
   68 | bool strIsStr(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:124:13: warning: 'strIsFloat' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |            !strIsFloat(ident) && !strIsChar(ident);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:73:6: note: resolves to this declaration
   73 | bool strIsFloat(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:124:35: warning: 'strIsChar' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |            !strIsFloat(ident) && !strIsChar(ident);
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:89:6: note: resolves to this declaration
   89 | bool strIsChar(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:127:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  127 | std::string getTextFromVec(const std::vector<std::string> &vec)
      | ~~~~~~~~~~~ ^                                                  
      | auto                                                            -> std::string
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:131:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  131 |     for (int i = 0; i < vec.size(); i++)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:133:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  133 |         res += vec[i];
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1377:7: note: resolves to this declaration
 1377 |       operator+=(const basic_string& __str)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:133:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  133 |         res += vec[i];
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:134:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  134 |         res += ((i == vec.size() - 1) ? "" : " ");
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1387:7: note: resolves to this declaration
 1387 |       operator+=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:140:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter)
      | ~~~~~~~~~~~ ^                                                                               
      | auto                                                                                         -> std::string
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:143:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  143 |     for (auto i = 0; i < vec.size(); i++)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:145:23: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         res.append(vec[i]);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:146:42: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  146 |         res.append(i == vec.size() - 1 ? "" : delimiter);
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:151:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 | std::string getLinesFromVec(const std::vector<std::string> &vector)
      | ~~~~~~~~~~~ ^                                                      
      | auto                                                                -> std::string
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:155:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  155 |     for (const auto &str : vector)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:155:26: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  155 |     for (const auto &str : vector)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:155:26: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  155 |     for (const auto &str : vector)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:155:26: warning: 'operator==<const std::basic_string<char> *, std::vector<std::basic_string<char>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  155 |     for (const auto &str : vector)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:157:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |         res += str;
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1377:7: note: resolves to this declaration
 1377 |       operator+=(const basic_string& __str)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:158:13: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  158 |         res += "\n";
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:1387:7: note: resolves to this declaration
 1387 |       operator+=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:164:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  164 | bool strIsCommonType(const std::string &type)
      | ~~~~ ^                                       
      | auto                                          -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:166:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  166 |     for (const auto &type_d : common_type_map)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:166:5: warning: replace loop by 'std::ranges::any_of()' [readability-use-anyofallof]
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:166:29: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:166:29: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:166:29: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:168:18: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 |         if (type == type_d.first)
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:168:34: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  168 |         if (type == type_d.first)
      |                                  ^
      |                                   {
  169 |             return true;
      |                         
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:175:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 | bool str_is_common_cpp_type(const std::string &type)
      | ~~~~ ^                                              
      | auto                                                 -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:177:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  177 |     for (const auto &type_d : common_type_map)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:177:5: warning: replace loop by 'std::ranges::any_of()' [readability-use-anyofallof]
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:177:29: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  177 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:177:29: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  177 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:177:29: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  177 |     for (const auto &type_d : common_type_map)
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:179:18: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |         if (type == type_d.first)
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:179:34: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  179 |         if (type == type_d.first)
      |                                  ^
      |                                   {
  180 |             return true;
      |                         
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:186:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  186 | bool strValIsCommonType(const std::string &string)
      | ~~~~ ^                                            
      | auto                                               -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:188:12: warning: 'strIsBool' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     return strIsBool(string) || strIsChar(string) || strIsFloat(string) || strIsNum(string) ||
      |            ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:63:6: note: resolves to this declaration
   63 | bool strIsBool(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:188:33: warning: 'strIsChar' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     return strIsBool(string) || strIsChar(string) || strIsFloat(string) || strIsNum(string) ||
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:89:6: note: resolves to this declaration
   89 | bool strIsChar(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:188:54: warning: 'strIsFloat' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     return strIsBool(string) || strIsChar(string) || strIsFloat(string) || strIsNum(string) ||
      |                                                      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:73:6: note: resolves to this declaration
   73 | bool strIsFloat(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:188:76: warning: 'strIsNum' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     return strIsBool(string) || strIsChar(string) || strIsFloat(string) || strIsNum(string) ||
      |                                                                            ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:40:6: note: resolves to this declaration
   40 | bool strIsNum(const std::string &s)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:189:12: warning: 'strIsStr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |            strIsStr(string);
      |            ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:68:6: note: resolves to this declaration
   68 | bool strIsStr(const std::string &string)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:192:79: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  192 | void replaceAll(std::string &str, const std::string &from, const std::string &to)
      |                                                                               ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:195:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  195 |     while (true)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:198:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  198 |         if (start_pos == std::string::npos)
      |                                            ^
      |                                             {
  199 |             break;
      |                   
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:205:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  205 | std::string genUniqueName()
      | ~~~~~~~~~~~ ^              
      | auto                        -> std::string
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:207:22: warning: 'now' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  207 |     auto timestamp = std::chrono::system_clock::now().time_since_epoch().count();
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/chrono.h:1239:7: note: resolves to this declaration
 1239 |       now() noexcept;
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:207:35: warning: no header providing "std::chrono::system_clock" is directly included [misc-include-cleaner]
    7 |     auto timestamp = std::chrono::system_clock::now().time_since_epoch().count();
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:208:23: warning: 'random' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  208 |     auto random_num = random();
      |                       ^
/usr/include/stdlib.h:521:17: note: resolves to this declaration
  521 | extern long int random (void) __THROW;
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:208:23: warning: no header providing "random" is directly included [misc-include-cleaner]
    9 |     auto random_num = random();
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:210:10: warning: no header providing "std::stringstream" is directly included [misc-include-cleaner]
    9 |     std::stringstream ss;
      |          ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:210:23: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
  210 |     std::stringstream ss;
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:211:8: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     ss << timestamp << "_" << random_num;
      |        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:174:7: note: resolves to this declaration
  174 |       operator<<(long __n)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:211:21: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     ss << timestamp << "_" << random_num;
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:211:28: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  211 |     ss << timestamp << "_" << random_num;
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:174:7: note: resolves to this declaration
  174 |       operator<<(long __n)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:216:75: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  216 | void replaceAllWithoutStr(std::string &str, const char *from, const char *to)
      |                                                                           ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:219:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  219 |     for (int i = 0; i < str.size(); i++)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:221:30: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  221 |         if (str.at(i) == '"')
      |                              ^
      |                               {
  222 |             in_str = !in_str;
      |                              
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:223:20: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  223 |         if (in_str)
      |                    ^
      |                     {
  224 |             continue;
      |                      
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:225:41: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |         if (str.substr(i, strlen(from)) == from)
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:232:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  232 | bool findExpectStr(std::string value, const std::string &basic_string)
      | ~~~~ ^                                                                
      | auto                                                                   -> bool
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:235:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  235 |     for (int i = 0; i < value.size(); i++)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:237:32: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  237 |         if (value.at(i) == '"')
      |                                ^
      |                                 {
  238 |             is_in_str = !is_in_str;
      |                                    
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:239:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  239 |         if (is_in_str)
      |                       ^
      |                        {
  240 |             continue;
      |                      
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:243:54: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |             if (value.substr(i, basic_string.size()) == basic_string)
      |                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:251:1: warning: namespace 'dap::util' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  251 | }
      | ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:17:11: note: namespace 'dap::util' starts here
   17 | namespace dap::util
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
/home/napbad/tmp/dap/src/core/utilities/string_util.h:46:6: warning: function 'dap::util::strIsOp' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name]
   46 | bool strIsOp(const std::string &string);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.cpp:50:6: note: the definition seen here
   50 | bool strIsOp(const std::string &oper)
      |      ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:46:6: note: differing parameters are named here: ('string'), in definition: ('oper')
   46 | bool strIsOp(const std::string &string);
      |      ^                          ~~~~~~
      |                                 oper
[7/21] Building CXX object CMakeFiles/dap_main.dir/src/core/utilities/file_util.cpp.o
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:5:1: warning: system include filesystem not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <filesystem>
      | ^~~~~~~~~~~~~~~~~~~~~
    6 | #include <fstream>
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:6:1: warning: system include fstream not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <fstream>
      | ^~~~~~~~~~~~~~~~~~
    7 | 
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:12:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
   12 | using namespace std;
      | ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:12:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   12 | using namespace std;
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:13:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   13 | namespace dap::util {
      |           ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:14:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   14 |     std::fstream create_file(const std::string &file_name)
      |     ~~~~~~~~~~~~ ^                                        
      |     auto                                                   -> std::fstream
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:14:41: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    7 | 
    8 | #include "file_util.h"
    9 | 
   10 | #include "src/core/common/global.h"
   11 | 
   12 | using namespace std;
   13 | namespace dap::util {
   14 |     std::fstream create_file(const std::string &file_name)
      |                                         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:16:9: warning: variable '_path' of type 'filesystem::path' can be declared 'const' [misc-const-correctness]
   16 |         filesystem::path _path(file_name);
      |         ^
      |                          const 
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:16:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   16 |         filesystem::path _path(file_name);
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:18:9: warning: variable '_parent_path' of type 'filesystem::path' can be declared 'const' [misc-const-correctness]
   18 |         filesystem::path _parent_path = _path.parent_path();
      |         ^
      |                          const 
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:20:9: warning: 'create_directories' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |         create_directories(_parent_path);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:87:8: note: resolves to this declaration
   87 |   bool create_directories(const path& __p);
      |        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:22:14: warning: 'exists' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |         if (!exists(_parent_path))
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:133:3: note: resolves to this declaration
  133 |   exists(const path& __p)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:24:24: warning: no header providing "std::runtime_error" is directly included [misc-include-cleaner]
    7 |             throw std::runtime_error("Failed to create directory: " + _parent_path.string());
      |                        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:24:69: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |             throw std::runtime_error("Failed to create directory: " + _parent_path.string());
      |                                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:28:42: warning: no header providing "std::ios" is directly included [misc-include-cleaner]
    7 |         file_stream.open(file_name, std::ios::out | std::ios::in | std::ios::trunc);
      |                                          ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:28:51: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |         file_stream.open(file_name, std::ios::out | std::ios::in | std::ios::trunc);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/ios_base.h:139:3: note: resolves to this declaration
  139 |   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:28:66: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |         file_stream.open(file_name, std::ios::out | std::ios::in | std::ios::trunc);
      |                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/ios_base.h:139:3: note: resolves to this declaration
  139 |   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:32:64: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   32 |             throw std::runtime_error("Failed to create file: " + file_name);
      |                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:41:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   41 |         pos = pkg_dir_name.find('.');
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:2758:24: note: default parameter was declared here
 2758 |       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
      |                        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:42:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   42 |         const string split = "/";
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:43:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   43 |         while (pos != string::npos)
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:43:16: warning: backward branch (while loop) is ID-dependent due to variable reference to 'pos' and may cause performance degradation [altera-id-dependent-backward-branch]
   43 |         while (pos != string::npos)
      |                ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:40:9: note: inferred assignment of ID-dependent value from ID-dependent 
   40 |         string::size_type pos = 0;
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:50:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |         pkg_dir_name = buildDir + pkg_dir_name;
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:858:7: note: resolves to this declaration
  858 |       operator=(basic_string&& __str)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:50:33: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   50 |         pkg_dir_name = buildDir + pkg_dir_name;
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3598:5: note: resolves to this declaration
 3598 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:54:18: warning: 'exists' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |             if (!std::filesystem::exists(pkg_dir_name))
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:133:3: note: resolves to this declaration
  133 |   exists(const path& __p)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:54:42: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   54 |             if (!std::filesystem::exists(pkg_dir_name))
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:56:17: warning: 'create_directories' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |                 std::filesystem::create_directories(pkg_dir_name);
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:87:8: note: resolves to this declaration
   87 |   bool create_directories(const path& __p);
      |        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:56:53: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   56 |                 std::filesystem::create_directories(pkg_dir_name);
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:61:69: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |             throw std::runtime_error("Failed to create directory: " + pkg_dir_name + ". Error: " + e.what());
      |                                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:61:84: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |             throw std::runtime_error("Failed to create directory: " + pkg_dir_name + ". Error: " + e.what());
      |                                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:61:98: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |             throw std::runtime_error("Failed to create directory: " + pkg_dir_name + ". Error: " + e.what());
      |                                                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:65:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   65 |     std::string convert_pkg_to_path(const std::string &pkg_name)
      |     ~~~~~~~~~~~ ^                                               
      |     auto                                                         -> std::string
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   69 |         for (auto &c : res)
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:20: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   69 |         for (auto &c : res)
      |                    ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:22: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |         for (auto &c : res)
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:22: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |         for (auto &c : res)
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:22: warning: 'operator==<char *, std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |         for (auto &c : res)
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:69:28: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   69 |         for (auto &c : res)
      |                            ^
      |                             {
   70 |             if (c == '.')
   71 |                 c = '/';
      |                         
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:70:26: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   70 |             if (c == '.')
      |                          ^
      |                           {
   71 |                 c = '/';
      |                         
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:73:13: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |         res = buildDir + res + "/";
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:858:7: note: resolves to this declaration
  858 |       operator=(basic_string&& __str)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:73:24: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |         res = buildDir + res + "/";
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3598:5: note: resolves to this declaration
 3598 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:73:30: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |         res = buildDir + res + "/";
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:78:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   78 |     std::string read_line(std::fstream *opened_file, string &file_name, const int line)
      |     ~~~~~~~~~~~ ^                                                                      
      |     auto                                                                                -> std::string
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:80:63: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   80 |         if (opened_file == nullptr || !opened_file->is_open())
      |                                                               ^
      |                                                                {
   81 |             return ""; // Return an empty string if the opened_file pointer is null or
      |                                                                                       
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:81:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   81 |             return ""; // Return an empty string if the opened_file pointer is null or
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:86:13: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
   86 |         int i = 0;
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:91:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   91 |         while (getline(file, temp, '\n') && i < line - 1)
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:91:16: warning: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |         while (getline(file, temp, '\n') && i < line - 1)
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4139:5: note: resolves to this declaration
 4139 |     getline(basic_istream<char>& __in, basic_string<char>& __str,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:91:16: warning: no header providing "std::getline" is directly included [misc-include-cleaner]
   91 |         while (getline(file, temp, '\n') && i < line - 1)
      |                ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:91:58: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   91 |         while (getline(file, temp, '\n') && i < line - 1)
      |                                                          ^
      |                                                           {
   92 |             i++;
      |                 
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:95:51: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         opened_file->open(file_name, std::ios::in | std::ios::out | std::ios::ate | std::ios::app);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/ios_base.h:139:3: note: resolves to this declaration
  139 |   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:95:67: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         opened_file->open(file_name, std::ios::in | std::ios::out | std::ios::ate | std::ios::app);
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/ios_base.h:139:3: note: resolves to this declaration
  139 |   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:95:83: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         opened_file->open(file_name, std::ios::in | std::ios::out | std::ios::ate | std::ios::app);
      |                                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/ios_base.h:139:3: note: resolves to this declaration
  139 |   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:99:25: warning: no header providing "std::ostream" is directly included [misc-include-cleaner]
    7 |     void dbg_print(std::ostream &stream, const std::string &message, FileColor color)
      |                         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:101:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         print(stream, "DEBUG: ", FileColor::BRIGHT_YELLOW);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:101:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  101 |         print(stream, "DEBUG: ", FileColor::BRIGHT_YELLOW);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:102:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         print(stream, message + "\n", color);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:102:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         print(stream, message + "\n", color);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:107:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  107 |         print(stream, ">>>>WARNING:\n", FileColor::YELLOW);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:107:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  107 |         print(stream, ">>>>WARNING:\n", FileColor::YELLOW);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:108:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  108 |         print(stream, message + "\n", color);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:108:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  108 |         print(stream, message + "\n", color);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:113:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  113 |         print(stream, ">>>>>>>>ERROR:\n", FileColor::BRIGHT_RED);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:113:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  113 |         print(stream, ">>>>>>>>ERROR:\n", FileColor::BRIGHT_RED);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:114:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |         print(stream, message + "\n", color);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:114:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |         print(stream, message + "\n", color);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:119:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  119 |         print(stream, "DEBUG: ", FileColor::BRIGHT_YELLOW);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:119:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  119 |         print(stream, "DEBUG: ", FileColor::BRIGHT_YELLOW);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:120:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |         print(stream, message + "\n", FileColor::WHITE);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:120:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  120 |         print(stream, message + "\n", FileColor::WHITE);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:125:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |         print(stream, ">>>>WARNING:\n", FileColor::YELLOW);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:125:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  125 |         print(stream, ">>>>WARNING:\n", FileColor::YELLOW);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:126:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |         print(stream, message + "\n", FileColor::WHITE);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:126:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |         print(stream, message + "\n", FileColor::WHITE);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:131:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |         print(stream, ">>>>>>>>ERROR:\n", FileColor::BRIGHT_RED);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:131:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  131 |         print(stream, ">>>>>>>>ERROR:\n", FileColor::BRIGHT_RED);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:132:9: warning: 'print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |         print(stream, message + "\n", FileColor::WHITE);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:118:6: note: resolves to this declaration
  118 | void print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:132:31: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |         print(stream, message + "\n", FileColor::WHITE);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:137:36: warning: no header providing "std::cout" is directly included [misc-include-cleaner]
    7 |         if (stream.rdbuf() == std::cout.rdbuf())
      |                                    ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:142:23: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |             std::cout << colorCode(color);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:142:26: warning: 'colorCode' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |             std::cout << colorCode(color);
      |                          ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:109:13: note: resolves to this declaration
  109 | std::string colorCode(FileColor color);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:145:16: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         stream << message;
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:151:13: warning: 'setColor' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  151 |             setColor(colorCode(FileColor::BLACK).c_str()); // Reset color
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:69:13: note: resolves to this declaration
   69 | inline void setColor(const char *ansiCode)
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:151:22: warning: 'colorCode' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  151 |             setColor(colorCode(FileColor::BLACK).c_str()); // Reset color
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:109:13: note: resolves to this declaration
  109 | std::string colorCode(FileColor color);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:160:14: warning: 'exists' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         if (!filesystem::exists(source_dir) || !filesystem::is_directory(source_dir))
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:133:3: note: resolves to this declaration
  133 |   exists(const path& __p)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:160:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  160 |         if (!filesystem::exists(source_dir) || !filesystem::is_directory(source_dir))
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:160:49: warning: 'is_directory' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         if (!filesystem::exists(source_dir) || !filesystem::is_directory(source_dir))
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:198:3: note: resolves to this declaration
  198 |   is_directory(const path& __p)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:160:74: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  160 |         if (!filesystem::exists(source_dir) || !filesystem::is_directory(source_dir))
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:160:86: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  160 |         if (!filesystem::exists(source_dir) || !filesystem::is_directory(source_dir))
      |                                                                                      ^
      |                                                                                       {
  161 |             throw std::runtime_error("Source directory does not exist or is not a directory: " + source_dir);
      |                                                                                                              
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:161:96: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |             throw std::runtime_error("Source directory does not exist or is not a directory: " + source_dir);
      |                                                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:163:14: warning: 'exists' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  163 |         if (!filesystem::exists(destination_dir))
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:133:3: note: resolves to this declaration
  133 |   exists(const path& __p)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:163:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  163 |         if (!filesystem::exists(destination_dir))
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:163:50: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  163 |         if (!filesystem::exists(destination_dir))
      |                                                  ^
      |                                                   {
  164 |             filesystem::create_directories(destination_dir);
      |                                                             
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:164:13: warning: 'create_directories' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |             filesystem::create_directories(destination_dir);
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:87:8: note: resolves to this declaration
   87 |   bool create_directories(const path& __p);
      |        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:164:44: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  164 |             filesystem::create_directories(destination_dir);
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:168:13: warning: 'copy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 |             filesystem::copy(source_dir, destination_dir,
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:67:8: note: resolves to this declaration
   67 |   void copy(const path& __from, const path& __to, copy_options __options);
      |        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:168:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  168 |             filesystem::copy(source_dir, destination_dir,
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:168:42: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  168 |             filesystem::copy(source_dir, destination_dir,
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:169:75: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  169 |                              filesystem::copy_options::overwrite_existing | filesystem::copy_options::recursive);
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_fwd.h:105:3: note: resolves to this declaration
  105 |   operator|(copy_options __x, copy_options __y) noexcept
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:173:67: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |             throw std::runtime_error("Failed to copy directory: " + source_dir + " to " + destination_dir +
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:173:80: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |             throw std::runtime_error("Failed to copy directory: " + source_dir + " to " + destination_dir +
      |                                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:173:89: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |             throw std::runtime_error("Failed to copy directory: " + source_dir + " to " + destination_dir +
      |                                                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:173:107: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |             throw std::runtime_error("Failed to copy directory: " + source_dir + " to " + destination_dir +
      |                                                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:174:50: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  174 |                                      ". Error: " + e.what());
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:178:68: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    7 |     void collect_files_recursive(const std::string &dir_path, std::vector<std::string> &files)
      |                                                                    ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:36: warning: 'begin' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:607:3: note: resolves to this declaration
  607 |   begin(recursive_directory_iterator __iter) noexcept
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:36: warning: 'end' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:612:3: note: resolves to this declaration
  612 |   end(recursive_directory_iterator) noexcept
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:36: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:535:28: note: resolves to this declaration
  535 |     const directory_entry& operator*() const noexcept;
      |                            ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:36: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:544:35: note: resolves to this declaration
  544 |     recursive_directory_iterator& operator++();
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:36: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:560:5: note: resolves to this declaration
  560 |     operator==(const recursive_directory_iterator& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:182:79: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  182 |             for (const auto &entry : filesystem::recursive_directory_iterator(dir_path))
      |                                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:192:18: warning: no header providing "std::cerr" is directly included [misc-include-cleaner]
  192 |             std::cerr << "Error: " << e.what() << '\n';
      |                  ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:192:23: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |             std::cerr << "Error: " << e.what() << '\n';
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:192:36: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |             std::cerr << "Error: " << e.what() << '\n';
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:192:48: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |             std::cerr << "Error: " << e.what() << '\n';
      |                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:576:5: note: resolves to this declaration
  576 |     operator<<(basic_ostream<char, _Traits>& __out, char __c)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:196:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  196 |     std::vector<std::string> get_all_files_in_dir(const std::string &dir_path)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                
      |     auto                                                                       -> std::vector<std::string>
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:199:9: warning: 'collect_files_recursive' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  199 |         collect_files_recursive(dir_path, files);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:178:10: note: resolves to this declaration
  178 |     void collect_files_recursive(const std::string &dir_path, std::vector<std::string> &files)
      |          ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:203:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  203 |     std::vector<std::string> get_file_content(const std::string &file)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^                                        
      |     auto                                                               -> std::vector<std::string>
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:205:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  205 |         std::ifstream ifstream(file);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/fstream:603:8: note: default parameter was declared here
  603 |                      ios_base::openmode __mode = ios_base::in)
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:209:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  209 |         while (std::getline(ifstream, line))
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:209:16: warning: backward branch (while loop) is ID-dependent due to variable reference to 'ifstream' and may cause performance degradation [altera-id-dependent-backward-branch]
  209 |         while (std::getline(ifstream, line))
      |                ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:205:9: note: inferred assignment of ID-dependent value from ID-dependent 
  205 |         std::ifstream ifstream(file);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:209:16: warning: 'getline<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  209 |         while (std::getline(ifstream, line))
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4117:5: note: resolves to this declaration
 4117 |     getline(basic_istream<_CharT, _Traits>& __is,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:209:21: warning: no header providing "std::getline" is directly included [misc-include-cleaner]
  209 |         while (std::getline(ifstream, line))
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:209:45: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  209 |         while (std::getline(ifstream, line))
      |                                             ^
      |                                              {
  210 |             content.push_back(line);
      |                                     
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:218:9: warning: 'remove_all' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |         std::filesystem::remove_all(dir_path);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:341:13: note: resolves to this declaration
  341 |   uintmax_t remove_all(const path& __p);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:218:37: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  218 |         std::filesystem::remove_all(dir_path);
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:221:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |     std::vector<std::filesystem::path> find_cpp_files(const std::filesystem::path &directory)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^                                                     
      |     auto                                                                                      -> std::vector<std::filesystem::path>
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:32: warning: 'begin' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:607:3: note: resolves to this declaration
  607 |   begin(recursive_directory_iterator __iter) noexcept
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:32: warning: 'end' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:612:3: note: resolves to this declaration
  612 |   end(recursive_directory_iterator) noexcept
      |   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:32: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:535:28: note: resolves to this declaration
  535 |     const directory_entry& operator*() const noexcept;
      |                            ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:32: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:544:35: note: resolves to this declaration
  544 |     recursive_directory_iterator& operator++();
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:226:32: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  226 |         for (const auto &entry : std::filesystem::recursive_directory_iterator(directory))
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_dir.h:560:5: note: resolves to this declaration
  560 |     operator==(const recursive_directory_iterator& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:229:69: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |             if (entry.is_regular_file() && entry.path().extension() == ".cpp")
      |                                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:560:17: note: resolves to this declaration
  560 |     friend bool operator==(const path& __lhs, const path& __rhs) noexcept
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:229:72: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  229 |             if (entry.is_regular_file() && entry.path().extension() == ".cpp")
      |                                                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:238:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  238 |     bool is_clang_format_available()
      |     ~~~~ ^                          
      |     auto                             -> bool
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:9: warning: variable 'result' of type 'int' can be declared 'const' [misc-const-correctness]
  245 |         int result = std::system(("clang-format --version > " + DEV_NULL + " 2>&1").c_str());
      |         ^
      |             const 
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:22: warning: calling 'system' uses a command processor [cert-env33-c]
  245 |         int result = std::system(("clang-format --version > " + DEV_NULL + " 2>&1").c_str());
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:22: warning: function is not thread safe [concurrency-mt-unsafe]
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:22: warning: 'system' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdlib.h:923:12: note: resolves to this declaration
  923 | extern int system (const char *__command) __wur;
      |            ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:27: warning: no header providing "std::system" is directly included [misc-include-cleaner]
    5 |         int result = std::system(("clang-format --version > " + DEV_NULL + " 2>&1").c_str());
      |                           ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:63: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  245 |         int result = std::system(("clang-format --version > " + DEV_NULL + " 2>&1").c_str());
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:245:74: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  245 |         int result = std::system(("clang-format --version > " + DEV_NULL + " 2>&1").c_str());
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:250:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  250 |     bool create_dir(const std::string &path)
      |     ~~~~ ^                                  
      |     auto                                     -> bool
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:255:17: warning: 'create_directories' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  255 |             if (filesystem::create_directories(path))
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_ops.h:87:8: note: resolves to this declaration
   87 |   bool create_directories(const path& __p);
      |        ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:255:48: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  255 |             if (filesystem::create_directories(path))
      |                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/fs_path.h:330:37: note: default parameter was declared here
  330 |       path(_Source const& __source, format = auto_format)
      |                                     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:52: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:60: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:63: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:63: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:257:68: warning: no header providing "std::endl" is directly included [misc-include-cleaner]
  257 |                 std::cout << "Directory created: " << path << std::endl;
      |                                                                    ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:260:13: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  260 |             else
      |             ^~~~
  261 |             {
      |             ~
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  263 |                 return false;
      |                 ~~~~~~~~~~~~~
  264 |             }
      |             ~
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:262:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:262:59: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:262:67: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:262:70: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:262:70: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  262 |                 std::cout << "Directory already exists: " << path << std::endl;
      |                                                                      ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:268:23: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             std::cerr << "Error creating directory: " << e.what() << std::endl;
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:268:55: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             std::cerr << "Error creating directory: " << e.what() << std::endl;
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:268:67: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             std::cerr << "Error creating directory: " << e.what() << std::endl;
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:268:70: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             std::cerr << "Error creating directory: " << e.what() << std::endl;
      |                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:268:70: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  268 |             std::cerr << "Error creating directory: " << e.what() << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:313:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  313 |     std::string colorCode(FileColor color)
      |     ~~~~~~~~~~~ ^                         
      |     auto                                   -> std::string
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:318:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  318 |             return "\033[32m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:320:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  320 |             return "\033[37m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:322:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  322 |             return "\033[31m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:324:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  324 |             return "\033[33m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:326:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  326 |             return "\033[34m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:328:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  328 |             return "\033[30m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:330:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  330 |             return "\033[35m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:332:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  332 |             return "\033[36m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:334:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  334 |             return "\033[92m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:336:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  336 |             return "\033[97m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:338:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  338 |             return "\033[91m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:340:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  340 |             return "\033[93m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:342:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  342 |             return "\033[94m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:344:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  344 |             return "\033[95m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:346:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  346 |             return "\033[96m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:348:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  348 |             return "\033[37m";
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:351:1: warning: namespace 'dap::util' not terminated with a closing comment [google-readability-namespace-comments,llvm-namespace-comment]
  351 | }
      | ^
/home/napbad/tmp/dap/src/core/utilities/file_util.cpp:13:11: note: namespace 'dap::util' starts here
   13 | namespace dap::util {
      |           ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
[8/21] Building CXX object CMakeFiles/dap_main.dir/src/core/parser/parser.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: note: 'codegen_inter.h' included from here
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:73:10: note: 'node.h' included from here
   73 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.h:12:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   12 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:17:10: note: 'node_meta_data.h' included from here
   17 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:73:10: note: 'node.h' included from here
   73 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:49:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   49 | #define YYBISON 30802
      | ^~~~~~~
      |                 =
   50 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:49:9: warning: macro 'YYBISON' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   49 | #define YYBISON 30802
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:49:9: warning: macro 'YYBISON' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:52:9: warning: macro 'YYBISON_VERSION' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   52 | #define YYBISON_VERSION "3.8.2"
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:55:9: warning: macro 'YYSKELETON_NAME' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   55 | #define YYSKELETON_NAME "yacc.c"
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:58:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   58 | #define YYPURE 0
      | ^~~~~~~
      |                =
   59 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:58:9: warning: macro 'YYPURE' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   58 | #define YYPURE 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:58:9: warning: macro 'YYPURE' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:61:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   61 | #define YYPUSH 0
      | ^~~~~~~
      |                =
   62 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:61:9: warning: macro 'YYPUSH' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   61 | #define YYPUSH 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:61:9: warning: macro 'YYPUSH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:64:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   64 | #define YYPULL 1
      | ^~~~~~~
      |                =
   65 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:64:9: warning: macro 'YYPULL' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
   64 | #define YYPULL 1
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:64:9: warning: macro 'YYPULL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:72:1: warning: #includes are not sorted properly [llvm-include-order]
   72 | #include <vector>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/parser.cpp:72:1: warning: system include vector not allowed [llvmlibc-restrict-system-libc-headers]
   72 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   73 | #include "node.h"
/home/napbad/tmp/dap/src/core/parser/parser.cpp:74:1: warning: system include cstdio not allowed [llvmlibc-restrict-system-libc-headers]
   74 | #include <cstdio>
      | ^~~~~~~~~~~~~~~~~
   75 | #include <cstdlib>
/home/napbad/tmp/dap/src/core/parser/parser.cpp:75:1: warning: system include cstdlib not allowed [llvmlibc-restrict-system-libc-headers]
   75 | #include <cstdlib>
      | ^~~~~~~~~~~~~~~~~~
   76 | #include <memory>
/home/napbad/tmp/dap/src/core/parser/parser.cpp:76:1: warning: system include memory not allowed [llvmlibc-restrict-system-libc-headers]
   76 | #include <memory>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/parser.cpp:76:1: warning: included header memory is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/parser.cpp:77:1: warning: included header file_util.h is not used directly [misc-include-cleaner]
   77 | #include "../utilities/file_util.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:79:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
   79 | using namespace dap::parser;
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:79:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   79 | using namespace dap::parser;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:81:10: warning: variable 'program' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   81 | Program *program; /* the top level root node of our final AST */
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:81:10: warning: variable 'program' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:81:10: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:83:12: warning: variable 'yylineno' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   83 | extern int yylineno;
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:83:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:85:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   85 | extern int yylex();
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:85:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   85 | extern int yylex();
      |        ~~~ ^      
      |        auto        -> int
/home/napbad/tmp/dap/src/core/parser/parser.cpp:86:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   86 | void yyerror(const char *s) {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:86:26: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   86 | void yyerror(const char *s) {
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:87:5: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
   87 |     std::printf("Error at line %d: %s\n", yylineno, s);
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:88:5: warning: function is not thread safe [concurrency-mt-unsafe]
   88 |     std::exit(1);
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^                        ~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:70: warning: no header providing "std::string" is directly included [misc-include-cleaner]
   49 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:86: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:112:12: warning: function-like macro 'YY_CAST' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  112 | #   define YY_CAST(Type, Val) static_cast<Type> (Val)
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:113:12: warning: function-like macro 'YY_REINTERPRET_CAST' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  113 | #   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:133:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  133 | enum yysymbol_kind_t
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:133:6: warning: enum 'yysymbol_kind_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:227:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  227 | typedef enum yysymbol_kind_t yysymbol_kind_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yysymbol_kind_t = enum yysymbol_kind_t
/home/napbad/tmp/dap/src/core/parser/parser.cpp:227:30: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  227 | typedef enum yysymbol_kind_t yysymbol_kind_t;
      |                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:254:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  254 | typedef __INT_LEAST8_TYPE__ yytype_int8;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yytype_int8 = signed char
/home/napbad/tmp/dap/src/core/parser/parser.cpp:254:29: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  254 | typedef __INT_LEAST8_TYPE__ yytype_int8;
      |                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:262:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  262 | typedef __INT_LEAST16_TYPE__ yytype_int16;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yytype_int16 = short
/home/napbad/tmp/dap/src/core/parser/parser.cpp:262:30: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  262 | typedef __INT_LEAST16_TYPE__ yytype_int16;
      |                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:282:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  282 | typedef __UINT_LEAST8_TYPE__ yytype_uint8;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yytype_uint8 = unsigned char
/home/napbad/tmp/dap/src/core/parser/parser.cpp:282:30: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  282 | typedef __UINT_LEAST8_TYPE__ yytype_uint8;
      |                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:293:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  293 | typedef __UINT_LEAST16_TYPE__ yytype_uint16;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yytype_uint16 = unsigned short
/home/napbad/tmp/dap/src/core/parser/parser.cpp:293:31: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  293 | typedef __UINT_LEAST16_TYPE__ yytype_uint16;
      |                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:338:9: warning: function-like macro 'YYSIZEOF' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  338 | #define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:342:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  342 | typedef yytype_uint8 yy_state_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yy_state_t = yytype_uint8
/home/napbad/tmp/dap/src/core/parser/parser.cpp:342:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  342 | typedef yytype_uint8 yy_state_t;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:345:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  345 | typedef int yy_state_fast_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using yy_state_fast_t = int
/home/napbad/tmp/dap/src/core/parser/parser.cpp:345:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  345 | typedef int yy_state_fast_t;
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:354:3: warning: nested redundant #ifndef; consider removing it [readability-redundant-preprocessor]
  354 | # ifndef YY_
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:347:2: note: previous #ifndef was here
  347 | #ifndef YY_
      |  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:355:11: warning: function-like macro 'YY_' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  355 | #  define YY_(Msgid) Msgid
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:378:10: warning: function-like macro 'YY_USE' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  378 | # define YY_USE(E) ((void) (E))
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:398:10: warning: function-like macro 'YY_INITIAL_VALUE' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  398 | # define YY_INITIAL_VALUE(Value) Value
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:421:9: warning: function-like macro 'YY_ASSERT' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  421 | #define YY_ASSERT(E) ((void) (0 && (E)))
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:495:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  495 | union yyalloc
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:506:10: warning: function-like macro 'YYSTACK_BYTES' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  506 | # define YYSTACK_BYTES(N) \
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:510:10: warning: macro 'YYCOPY_NEEDED' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  510 | # define YYCOPY_NEEDED 1
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:517:10: warning: function-like macro 'YYSTACK_RELOCATE' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  517 | # define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:522:9: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  522 |         Stack = &yyptr->Stack_alloc;                                    \
      |         ^
      |         (    )
/home/napbad/tmp/dap/src/core/parser/parser.cpp:523:47: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  523 |         yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
      |                                               ^    
      |                                               (    )
/home/napbad/tmp/dap/src/core/parser/parser.cpp:535:12: warning: function-like macro 'YYCOPY' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  535 | #   define YYCOPY(Dst, Src, Count) \
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:551:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  551 | #define YYFINAL  3
      | ^~~~~~~           
      |                 = ,
  552 | /* YYLAST -- Last index in YYTABLE.  */
  553 | #define YYLAST   674
      | ~~~~~~~
      |                =
  554 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:551:9: warning: macro 'YYFINAL' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  551 | #define YYFINAL  3
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:551:9: warning: macro 'YYFINAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:553:9: warning: macro 'YYLAST' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  553 | #define YYLAST   674
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:553:9: warning: macro 'YYLAST' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:556:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  556 | #define YYNTOKENS  60
      | ^~~~~~~              
      |                   =  ,
  557 | /* YYNNTS -- Number of nonterminals.  */
  558 | #define YYNNTS  30
      | ~~~~~~~           
      |                =  ,
  559 | /* YYNRULES -- Number of rules.  */
  560 | #define YYNRULES  105
      | ~~~~~~~              
      |                  =   ,
  561 | /* YYNSTATES -- Number of states.  */
  562 | #define YYNSTATES  182
      | ~~~~~~~
      |                   =
  563 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:556:9: warning: macro 'YYNTOKENS' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  556 | #define YYNTOKENS  60
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:556:9: warning: macro 'YYNTOKENS' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:558:9: warning: macro 'YYNNTS' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  558 | #define YYNNTS  30
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:558:9: warning: macro 'YYNNTS' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:560:9: warning: macro 'YYNRULES' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  560 | #define YYNRULES  105
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:560:9: warning: macro 'YYNRULES' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:562:9: warning: macro 'YYNSTATES' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  562 | #define YYNSTATES  182
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:562:9: warning: macro 'YYNSTATES' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:565:9: warning: macro 'YYMAXUTOK' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  565 | #define YYMAXUTOK   314
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:570:9: warning: function-like macro 'YYTRANSLATE' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  570 | #define YYTRANSLATE(YYX)                                \
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:577:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  577 | static const yytype_int8 yytranslate[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:577:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  577 | static const yytype_int8 yytranslate[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:632:9: warning: function-like macro 'YY_ACCESSING_SYMBOL' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  632 | #define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:670:9: warning: function-like macro 'yypact_value_is_default' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  670 | #define yypact_value_is_default(Yyn) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:673:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  673 | #define YYTABLE_NINF (-34)
      | ^~~~~~~
      |                      =
  674 | 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:673:9: warning: macro 'YYTABLE_NINF' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  673 | #define YYTABLE_NINF (-34)
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:675:9: warning: macro 'yytable_value_is_error' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  675 | #define yytable_value_is_error(Yyn) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:680:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  680 | static const yytype_int16 yypact[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:680:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  680 | static const yytype_int16 yypact[] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:706:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  706 | static const yytype_int8 yydefact[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:706:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  706 | static const yytype_int8 yydefact[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:730:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  730 | static const yytype_int8 yypgoto[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:730:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  730 | static const yytype_int8 yypgoto[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:738:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  738 | static const yytype_uint8 yydefgoto[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:738:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  738 | static const yytype_uint8 yydefgoto[] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:748:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  748 | static const yytype_int16 yytable[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:748:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  748 | static const yytype_int16 yytable[] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:820:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  820 | static const yytype_int16 yycheck[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:820:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  820 | static const yytype_int16 yycheck[] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:894:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  894 | static const yytype_int8 yystos[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:894:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  894 | static const yytype_int8 yystos[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:918:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  918 | static const yytype_int8 yyr1[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:918:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  918 | static const yytype_int8 yyr1[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:934:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  934 | static const yytype_int8 yyr2[] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:934:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  934 | static const yytype_int8 yyr2[] =
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:950:1: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  950 | enum { YYENOMEM = -2 };
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:950:1: warning: enum '(unnamed enum at ./src/core/parser/parser.cpp:950:1)' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:961:9: warning: function-like macro 'YYRECOVERING' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  961 | #define YYRECOVERING()  (!!yyerrstatus)
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:963:9: warning: function-like macro 'YYBACKUP' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  963 | #define YYBACKUP(Token, Value)                                    \
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1105:10: warning: function-like macro 'YYDPRINTF' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
 1105 | # define YYDPRINTF(Args) ((void) 0)
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1114:10: warning: macro 'YYINITDEPTH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
 1114 | # define YYINITDEPTH 200
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1125:10: warning: macro 'YYMAXDEPTH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
 1125 | # define YYMAXDEPTH 10000
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1138 | yydestruct (const char *yymsg,
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: warning: function 'yydestruct' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1142:8: warning: implicit conversion 'const char *' -> 'bool' [readability-implicit-bool-conversion]
 1142 |   if (!yymsg)
      |       ~^    
      |              == nullptr
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1142:14: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1142 |   if (!yymsg)
      |              ^
      |               {
 1143 |     yymsg = "Deleting";
      |                        
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1153:5: warning: variable 'yychar' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
 1153 | int yychar;
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1153:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1156:9: warning: variable 'yylval' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
 1156 | YYSTYPE yylval;
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1156:9: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1158:5: warning: variable 'yynerrs' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
 1158 | int yynerrs;
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1158:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1168:1: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1168 | yyparse (void)
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1168:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1167 | int
      | ~~~
      | auto
 1168 | yyparse (void)
      | ^             
      |                -> int
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1168:1: warning: function 'yyparse' has cognitive complexity of 80 (threshold 25) [readability-function-cognitive-complexity]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1211:3: note: +1
 1211 |   goto yysetstate;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1228:3: note: +1
 1228 |   YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:421:33: note: expanded from macro 'YY_ASSERT'
  421 | #define YY_ASSERT(E) ((void) (0 && (E)))
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1234:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1234 |   if (yyss + yystacksize - 1 <= yyssp)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1263:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 1263 |       if (YYMAXDEPTH <= yystacksize)
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1266:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 1266 |       if (YYMAXDEPTH < yystacksize)
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1274:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1274 |         if (! yyptr)
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1276:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1276 |         YYSTACK_RELOCATE (yyss_alloc, yyss);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1277:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1277 |         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1279:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1279 |         if (yyss1 != yyssa)
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1292:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 1292 |       if (yyss + yystacksize - 1 <= yyssp)
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1298:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1298 |   if (yystate == YYFINAL)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1301:3: note: +1
 1301 |   goto yybackup;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1313:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1313 |   if (yypact_value_is_default (yyn))
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1319:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1319 |   if (yychar == YYEMPTY)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1325:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1325 |   if (yychar <= YYEOF)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1331:8: note: +1, nesting level increased to 1
 1331 |   else if (yychar == YYerror)
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1339:7: note: +1
 1339 |       goto yyerrlab1;
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1341:3: note: +1, nesting level increased to 1
 1341 |   else
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1343:17: note: +2, including nesting penalty of 1, nesting level increased to 2
 1343 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:4: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1343:17: note: +1
 1343 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:571:15: note: expanded from macro 'YYTRANSLATE'
  571 |   (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1350:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1350 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1350:31: note: +1
 1350 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
      |                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1353:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1353 |   if (yyn <= 0)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1355:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 1355 |       if (yytable_value_is_error (yyn))
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1358:7: note: +1
 1358 |       goto yyreduce;
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1363:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1363 |   if (yyerrstatus)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1375:3: note: +1
 1375 |   goto yynewstate;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1383:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1383 |   if (yyn == 0)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1385:3: note: +1
 1385 |   goto yyreduce;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1407:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1407 |   switch (yyn)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2299:16: note: +1, including nesting penalty of 0, nesting level increased to 1
 2299 |                ? yytable[yyi]
      |                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2298:42: note: +1
 2298 |     yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2303:3: note: +1
 2303 |   goto yynewstate;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2312:31: note: +1, including nesting penalty of 0, nesting level increased to 1
 2312 |   yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
      |                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2312:52: note: +2, including nesting penalty of 1, nesting level increased to 2
 2312 |   yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:4: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2312:52: note: +1
 2312 |   yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:571:15: note: expanded from macro 'YYTRANSLATE'
  571 |   (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2314:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2314 |   if (!yyerrstatus)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2320:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2320 |   if (yyerrstatus == 3)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2325:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 2325 |       if (yychar <= YYEOF)
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2328:11: note: +3, including nesting penalty of 2, nesting level increased to 3
 2328 |           if (yychar == YYEOF)
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2331:7: note: +1, nesting level increased to 2
 2331 |       else
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2341:3: note: +1
 2341 |   goto yyerrlab1;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2350:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2350 |   if (0)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2360:3: note: +1
 2360 |   goto yyerrlab1;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2370:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2370 |   for (;;)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2373:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 2373 |       if (!yypact_value_is_default (yyn))
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2376:11: note: +3, including nesting penalty of 2, nesting level increased to 3
 2376 |           if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2376:41: note: +1
 2376 |           if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2379:15: note: +4, including nesting penalty of 3, nesting level increased to 4
 2379 |               if (0 < yyn)
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2385:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 2385 |       if (yyssp == yyss)
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2405:3: note: +1
 2405 |   goto yynewstate;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2413:3: note: +1
 2413 |   goto yyreturnlab;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2421:3: note: +1
 2421 |   goto yyreturnlab;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2430:3: note: +1
 2430 |   goto yyreturnlab;
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2437:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2437 |   if (yychar != YYEMPTY)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2441:17: note: +2, including nesting penalty of 1, nesting level increased to 2
 2441 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:4: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2441:17: note: +1
 2441 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:571:15: note: expanded from macro 'YYTRANSLATE'
  571 |   (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2449:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2449 |   while (yyssp != yyss)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2456:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2456 |   if (yyss != yyssa)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1168:10: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1168 | yyparse (void)
      |          ^~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1181:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
 1181 |     yy_state_t yyssa[YYINITDEPTH];
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1182:24: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1182 |     yy_state_t *yyss = yyssa;
      |                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1186:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
 1186 |     YYSTYPE yyvsa[YYINITDEPTH];
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1187:21: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1187 |     YYSTYPE *yyvs = yyvsa;
      |                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1190:7: warning: variable 'yyn' is not initialized [cppcoreguidelines-init-variables]
 1190 |   int yyn;
      |       ^  
      |           = 0
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1192:7: warning: variable 'yyresult' is not initialized [cppcoreguidelines-init-variables]
 1192 |   int yyresult;
      |       ^       
      |                = 0
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:9: warning: function-like macro 'YYPOPSTACK' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1211:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1211 |   goto yysetstate;
      |   ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1226:1: note: label defined here
 1226 | yysetstate:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1220:8: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1220 |   yyssp++;
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1234:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1234 |   if (yyss + yystacksize - 1 <= yyssp)
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1234:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1234 |   if (yyss + yystacksize - 1 <= yyssp)
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1263:37: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1263 |       if (YYMAXDEPTH <= yystacksize)
      |                                     ^
      |                                      {
 1264 |         YYNOMEM;
      |                 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1264:9: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1264 |         YYNOMEM;
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:958:25: note: expanded from macro 'YYNOMEM'
  958 | #define YYNOMEM         goto yyexhaustedlab
      |                         ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2427:1: note: label defined here
 2427 | yyexhaustedlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1266:36: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1266 |       if (YYMAXDEPTH < yystacksize)
      |                                    ^
      |                                     {
 1267 |         yystacksize = YYMAXDEPTH;
      |                                  
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1271:9: warning: initializing non-owner 'union yyalloc *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 1271 |         union yyalloc *yyptr =
      |         ^~~~~~~~~~~~~~~~~~~~~~
 1272 |           YY_CAST (union yyalloc *,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~
 1273 |                    YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1271:9: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 1271 |         union yyalloc *yyptr =
      |         ^~~~~~~~~~~~~
      |         auto
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1273:20: warning: do not manage memory manually; consider a container or a smart pointer [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 1273 |                    YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
      |                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:462:25: note: expanded from macro 'YYSTACK_ALLOC'
  462 | #  define YYSTACK_ALLOC YYMALLOC
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:476:21: note: expanded from macro 'YYMALLOC'
  476 | #   define YYMALLOC malloc
      |                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:112:50: note: expanded from macro 'YY_CAST'
  112 | #   define YY_CAST(Type, Val) static_cast<Type> (Val)
      |                                                  ^~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1274:15: warning: implicit conversion 'union yyalloc *' -> 'bool' [readability-implicit-bool-conversion]
 1274 |         if (! yyptr)
      |             ~ ^    
      |                     == nullptr
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1274:21: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1274 |         if (! yyptr)
      |                     ^
      |                      {
 1275 |           YYNOMEM;
      |                   
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1275:11: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1275 |           YYNOMEM;
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:958:25: note: expanded from macro 'YYNOMEM'
  958 | #define YYNOMEM         goto yyexhaustedlab
      |                         ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2427:1: note: label defined here
 2427 | yyexhaustedlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1276:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1276 |         YYSTACK_RELOCATE (yyss_alloc, yyss);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1276:9: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
 1276 |         YYSTACK_RELOCATE (yyss_alloc, yyss);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1276:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1276 |         YYSTACK_RELOCATE (yyss_alloc, yyss);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:524:15: note: expanded from macro 'YYSTACK_RELOCATE'
  524 |         yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1277:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1277 |         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1277:9: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
 1277 |         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:518:5: note: expanded from macro 'YYSTACK_RELOCATE'
  518 |     do                                                                  \
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1277:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1277 |         YYSTACK_RELOCATE (yyvs_alloc, yyvs);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:524:15: note: expanded from macro 'YYSTACK_RELOCATE'
  524 |         yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1279:22: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1279 |         if (yyss1 != yyssa)
      |                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1279:28: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1279 |         if (yyss1 != yyssa)
      |                            ^
      |                             {
 1280 |           YYSTACK_FREE (yyss1);
      |                                
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1280:11: warning: do not manage memory manually; use RAII [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 1280 |           YYSTACK_FREE (yyss1);
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:463:24: note: expanded from macro 'YYSTACK_FREE'
  463 | #  define YYSTACK_FREE YYFREE
      |                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:482:19: note: expanded from macro 'YYFREE'
  482 | #   define YYFREE free
      |                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1280:11: warning: calling legacy resource function without passing a 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 1280 |           YYSTACK_FREE (yyss1);
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:463:24: note: expanded from macro 'YYSTACK_FREE'
  463 | #  define YYSTACK_FREE YYFREE
      |                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:482:19: note: expanded from macro 'YYFREE'
  482 | #   define YYFREE free
      |                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1284:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1284 |       yyssp = yyss + yysize - 1;
      |                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1284:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1284 |       yyssp = yyss + yysize - 1;
      |                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1285:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1285 |       yyvsp = yyvs + yysize - 1;
      |                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1285:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1285 |       yyvsp = yyvs + yysize - 1;
      |                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1292:16: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1292 |       if (yyss + yystacksize - 1 <= yyssp)
      |                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1292:30: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1292 |       if (yyss + yystacksize - 1 <= yyssp)
      |                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1292:43: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1292 |       if (yyss + yystacksize - 1 <= yyssp)
      |                                           ^
      |                                            {
 1293 |         YYABORT;
      |                 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1293:9: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1293 |         YYABORT;
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:956:25: note: expanded from macro 'YYABORT'
  956 | #define YYABORT         goto yyabortlab
      |                         ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2419:1: note: label defined here
 2419 | yyabortlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1298:26: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1298 |   if (yystate == YYFINAL)
      |                          ^
      |                           {
 1299 |     YYACCEPT;
      |              
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1299:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1299 |     YYACCEPT;
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:955:25: note: expanded from macro 'YYACCEPT'
  955 | #define YYACCEPT        goto yyacceptlab
      |                         ^~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2411:1: note: label defined here
 2411 | yyacceptlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1301:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1301 |   goto yybackup;
      |   ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1307:1: note: label defined here
 1307 | yybackup:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1312:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1312 |   yyn = yypact[yystate];
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1313:37: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1313 |   if (yypact_value_is_default (yyn))
      |                                     ^
      |                                      {
 1314 |     goto yydefault;
      |                    
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1314:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1314 |     goto yydefault;
      |     ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1381:1: note: label defined here
 1381 | yydefault:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1322:16: warning: 'yylex' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1322 |       yychar = yylex ();
      |                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:85:12: note: resolves to this declaration
   85 | extern int yylex();
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1339:7: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1339 |       goto yyerrlab1;
      |       ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2366:1: note: label defined here
 2366 | yyerrlab1:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1343:17: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1343 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:32: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1350:34: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1350 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1350:58: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1350 |   if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
      |                                                          ^
      |                                                           {
 1351 |     goto yydefault;
      |                    
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1351:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1351 |     goto yydefault;
      |     ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1381:1: note: label defined here
 1381 | yydefault:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1352:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1352 |   yyn = yytable[yyn];
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1355:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1355 |       if (yytable_value_is_error (yyn))
      |                                        ^
      |                                         {
 1356 |         goto yyerrlab;
      |                       
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1356:9: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1356 |         goto yyerrlab;
      |         ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2309:1: note: label defined here
 2309 | yyerrlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1358:7: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1358 |       goto yyreduce;
      |       ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1391:1: note: label defined here
 1391 | yyreduce:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1363:7: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1363 |   if (yyerrstatus)
      |       ^          
      |                   != 0
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1363:19: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1363 |   if (yyerrstatus)
      |                   ^
      |                    {
 1364 |     yyerrstatus--;
      |                   
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1370:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1370 |   *++yyvsp = yylval;
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1370:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1370 |   *++yyvsp = yylval;
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:120:7: note: resolves to this declaration
  120 | union YYSTYPE
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1375:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1375 |   goto yynewstate;
      |   ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1217:1: note: label defined here
 1217 | yynewstate:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1382:9: warning: 'signed char' to 'int' conversion; consider casting to 'unsigned char' first. [bugprone-signed-char-misuse,cert-str34-c]
 1382 |   yyn = yydefact[yystate];
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1382:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1383:16: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1383 |   if (yyn == 0)
      |                ^
      |                 {
 1384 |     goto yyerrlab;
      |                   
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1384:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1384 |     goto yyerrlab;
      |     ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2309:1: note: label defined here
 2309 | yyerrlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1385:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1385 |   goto yyreduce;
      |   ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1391:1: note: label defined here
 1391 | yyreduce:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1393:11: warning: 'signed char' to 'int' conversion; consider casting to 'unsigned char' first. [bugprone-signed-char-misuse,cert-str34-c]
 1393 |   yylen = yyr2[yyn];
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1393:11: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1403:9: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1403 |   yyval = yyvsp[1-yylen];
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:120:7: note: resolves to this declaration
  120 | union YYSTYPE
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1403:11: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1403 |   yyval = yyvsp[1-yylen];
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1412:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'Program *' [cppcoreguidelines-owning-memory]
 1412 |         program = new Program(new BlockStmt(*(yyvsp[0].stmtvec)));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1412:47: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1412 |         program = new Program(new BlockStmt(*(yyvsp[0].stmtvec)));
      |                                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1413:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1413 |         printParseInfo("program", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1413:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1413 |         printParseInfo("program", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1421:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::Stmt *> *' [cppcoreguidelines-owning-memory]
 1421 |         (yyval.stmtvec) = new std::vector<Stmt*>();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1422:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1422 |         printParseInfo("stmt_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1422:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1422 |         printParseInfo("stmt_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1430:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1430 |         (yyvsp[-1].stmtvec)->push_back((yyvsp[0].stmt));
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1430:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1430 |         (yyvsp[-1].stmtvec)->push_back((yyvsp[0].stmt));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1431:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1431 |         (yyval.stmtvec) = (yyvsp[-1].stmtvec);
      |                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1432:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1432 |         printParseInfo("stmt_list", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1432:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1432 |         printParseInfo("stmt_list", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1437:8: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1437 |   case 5: /* stmt: expression SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1440:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1440 |         (yyval.stmt) = new ExprStmt((yyvsp[-1].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1440:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1440 |         (yyval.stmt) = new ExprStmt((yyvsp[-1].expr));
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1441:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1441 |         printParseInfo("stmt (expression SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1441:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1441 |         printParseInfo("stmt (expression SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1446:8: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1446 |   case 6: /* stmt: var_decl SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1449:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1449 |         (yyval.stmt) = (yyvsp[-1].var_decl);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1450:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1450 |         printParseInfo("stmt (var_decl SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1450:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1450 |         printParseInfo("stmt (var_decl SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1455:8: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1455 |   case 7: /* stmt: RETURN expression SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1458:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1458 |         (yyval.stmt) = new ReturnStmt((yyvsp[-1].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1458:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1458 |         (yyval.stmt) = new ReturnStmt((yyvsp[-1].expr));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1459:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1459 |         printParseInfo("stmt (RETURN expression SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1459:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1459 |         printParseInfo("stmt (RETURN expression SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1464:8: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1464 |   case 8: /* stmt: RETURN SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1467:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1467 |         (yyval.stmt) = new ReturnStmt(nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1468:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1468 |         printParseInfo("stmt (RETURN void SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1468:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1468 |         printParseInfo("stmt (RETURN void SEMICOLON)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1473:8: warning: 9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1473 |   case 9: /* stmt: if_statement  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1476:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1476 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1477:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1477 |         printParseInfo("stmt (if_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1477:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1477 |         printParseInfo("stmt (if_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1482:8: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1482 |   case 10: /* stmt: elif_statement  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1485:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1485 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1486:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1486 |         printParseInfo("stmt (elif_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1486:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1486 |         printParseInfo("stmt (elif_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1491:8: warning: 11 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1491 |   case 11: /* stmt: for_statement  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1494:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1494 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1495:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1495 |         printParseInfo("stmt (for_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1495:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1495 |         printParseInfo("stmt (for_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1500:8: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1500 |   case 12: /* stmt: function_declaration  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1503:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1503 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1504:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1504 |         printParseInfo("stmt (function_declaration)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1504:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1504 |         printParseInfo("stmt (function_declaration)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1509:8: warning: 13 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1509 |   case 13: /* stmt: assign_expr SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1512:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1512 |         (yyval.stmt) = (yyvsp[-1].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1513:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1513 |         printParseInfo("stmt (assignment)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1513:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1513 |         printParseInfo("stmt (assignment)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1518:8: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1518 |   case 14: /* stmt: array_assign_stmt  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1521:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1521 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1522:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1522 |         printParseInfo("stmt (array_assign_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1522:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1522 |         printParseInfo("stmt (array_assign_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1527:8: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1527 |   case 15: /* stmt: extern_decl  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1530:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1530 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1531:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1531 |         printParseInfo("stmt (extern_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1531:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1531 |         printParseInfo("stmt (extern_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1536:8: warning: 16 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1536 |   case 16: /* stmt: break_statement SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1539:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1539 |         (yyval.stmt) = (yyvsp[-1].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1540:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1540 |         printParseInfo("stmt (break_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1540:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1540 |         printParseInfo("stmt (break_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1545:8: warning: 17 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1545 |   case 17: /* stmt: block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1548:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1548 |         (yyval.stmt) = (yyvsp[0].block);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1549:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1549 |         printParseInfo("stmt (block)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1549:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1549 |         printParseInfo("stmt (block)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1554:8: warning: 18 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1554 |   case 18: /* stmt: struct_decl  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1557:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1557 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1558:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1558 |         printParseInfo("stmt (struct_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1558:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1558 |         printParseInfo("stmt (struct_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1563:8: warning: 19 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1563 |   case 19: /* stmt: include_stmt  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1566:22: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1566 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1567:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1567 |         printParseInfo("stmmt (include_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1567:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1567 |         printParseInfo("stmmt (include_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1572:8: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1572 |   case 20: /* stmt: package_stmt  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1575:22: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1575 |         (yyval.stmt) = (yyvsp[0].stmt);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1576:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1576 |         printParseInfo("stmt (package_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1576:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1576 |         printParseInfo("stmt (package_stmt)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1581:8: warning: 21 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1581 |   case 21: /* include_stmt: INCLUDE qualified_name SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1584:2: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1584 |         (yyval.stmt) = new IncludeStmt((yyvsp[-1].ident));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1584:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1584 |         (yyval.stmt) = new IncludeStmt((yyvsp[-1].ident));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1585:2: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1585 |         printParseInfo("include_stmt", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1585:2: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1585 |         printParseInfo("include_stmt", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1590:8: warning: 22 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1590 |   case 22: /* package_stmt: PACKAGE qualified_name SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1593:2: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1593 |         (yyval.stmt) = new PackageStmt((yyvsp[-1].ident));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1593:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1593 |         (yyval.stmt) = new PackageStmt((yyvsp[-1].ident));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1594:2: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1594 |         printParseInfo("package_stmt", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1594:2: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1594 |         printParseInfo("package_stmt", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1599:8: warning: 23 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1599 |   case 23: /* block: LBRACE stmt_list RBRACE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1602:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::BlockStmt *' [cppcoreguidelines-owning-memory]
 1602 |         (yyval.block) = new BlockStmt(*(yyvsp[-1].stmtvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1602:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1602 |         (yyval.block) = new BlockStmt(*(yyvsp[-1].stmtvec));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1603:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1603 |         delete (yyvsp[-1].stmtvec);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1603:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1603 |         delete (yyvsp[-1].stmtvec);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1604:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1604 |         printParseInfo("block", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1604:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1604 |         printParseInfo("block", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1609:8: warning: 24 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1609 |   case 24: /* var_decl: var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:132: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:139: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:153: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1612:174: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1612 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-5].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1613:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1613 |         delete (yyvsp[-3].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1613:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1613 |         delete (yyvsp[-3].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1614:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1614 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1614:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1614 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1619:8: warning: 25 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1619 |   case 25: /* var_decl: var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:132: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1622:153: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1622 |         (yyval.var_decl) = new VarDecl((yyvsp[-2].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-3].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1623:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1623 |         delete (yyvsp[-1].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1623:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1623 |         delete (yyvsp[-1].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1624:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1624 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1624:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1624 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1629:8: warning: 26 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1629 |   case 26: /* var_decl: var_mutable_flag qualified_name TIMES IDENTIFIER assign_nullable_flag ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1632:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1632 |         (yyvsp[-5].ident)->name_parts->push_back("*");
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1632:14: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1632 |         (yyvsp[-5].ident)->name_parts->push_back("*");
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1632:37: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
 1632 |         (yyvsp[-5].ident)->name_parts->push_back("*");
      |                                        ^~~~~~~~~~
      |                                        emplace_back(
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1632:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1632 |         (yyvsp[-5].ident)->name_parts->push_back("*");
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:48: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:132: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:139: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:153: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1633:174: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1633 |         (yyval.var_decl) = new VarDecl((yyvsp[-5].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-6].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                                                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1634:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1634 |         delete (yyvsp[-3].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1634:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1634 |         delete (yyvsp[-3].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1635:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1635 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1635:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1635 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1640:8: warning: 27 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1640 |   case 27: /* var_decl: var_mutable_flag qualified_name TIMES IDENTIFIER assign_nullable_flag  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1643:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1643 |         (yyvsp[-3].ident)->name_parts->push_back("*");
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1643:37: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
 1643 |         (yyvsp[-3].ident)->name_parts->push_back("*");
      |                                        ^~~~~~~~~~
      |                                        emplace_back(
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1643:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1643 |         (yyvsp[-3].ident)->name_parts->push_back("*");
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:132: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1644:153: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1644 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)})), (yyvsp[-4].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1645:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1645 |         delete (yyvsp[-1].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1645:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1645 |         delete (yyvsp[-1].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1646:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1646 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1646:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1646 |         printParseInfo("var_decl (var_mutable_flag qualified_name IDENTIFIER assign_nullable_flag)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1651:8: warning: 28 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1651 |   case 28: /* var_decl: var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign_nullable_flag  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1654:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1654 |         (yyvsp[-4].ident)->name_parts->push_back("[]");
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1654:37: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
 1654 |         (yyvsp[-4].ident)->name_parts->push_back("[]");
      |                                        ^~~~~~~~~~
      |                                        emplace_back(
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1654:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1654 |         (yyvsp[-4].ident)->name_parts->push_back("[]");
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1655:9: warning: use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 1655 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)}));
      |         ^~~~~~~~~~~~~
      |         auto
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1655:53: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1655 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)}));
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1655:81: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1655 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-1].string)}));
      |                                                                                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:6: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:63: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:70: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1656:84: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1656 |         (yyval.var_decl) = new VarDecl((yyvsp[-4].ident), name, (yyvsp[-5].boolval), (yyvsp[0].boolval), nullptr);
      |                                                                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1657:6: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1657 |         delete (yyvsp[-1].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1657:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1657 |         delete (yyvsp[-1].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1658:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1658 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1658:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1658 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1663:8: warning: 29 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1663 |   case 29: /* var_decl: var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign_nullable_flag ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1666:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1666 |         (yyvsp[-6].ident)->name_parts->push_back("[]");
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1666:14: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1666 |         (yyvsp[-6].ident)->name_parts->push_back("[]");
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1666:37: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
 1666 |         (yyvsp[-6].ident)->name_parts->push_back("[]");
      |                                        ^~~~~~~~~~
      |                                        emplace_back(
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1666:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1666 |         (yyvsp[-6].ident)->name_parts->push_back("[]");
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1667:9: warning: use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 1667 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)}));
      |         ^~~~~~~~~~~~~
      |         auto
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1667:53: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1667 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)}));
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1667:81: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1667 |         QualifiedName *name = new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)}));
      |                                                                                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:6: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:45: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:63: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:70: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:84: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1668:105: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1668 |         (yyval.var_decl) = new VarDecl((yyvsp[-6].ident), name, (yyvsp[-7].boolval), (yyvsp[-2].boolval), (yyvsp[0].expr));
      |                                                                                                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1669:6: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1669 |         delete (yyvsp[-3].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1669:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1669 |         delete (yyvsp[-3].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1670:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1670 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1670:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1670 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1675:8: warning: 30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1675 |   case 30: /* var_decl: var_mutable_flag qualified_name LBRACKET expression RBRACKET IDENTIFIER assign_nullable_flag ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1678:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1678 |         (yyvsp[-7].ident)->name_parts->push_back("[]");
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1678:14: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1678 |         (yyvsp[-7].ident)->name_parts->push_back("[]");
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1678:37: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
 1678 |         (yyvsp[-7].ident)->name_parts->push_back("[]");
      |                                        ^~~~~~~~~~
      |                                        emplace_back(
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1678:47: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1678 |         (yyvsp[-7].ident)->name_parts->push_back("[]");
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:6: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:45: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:78: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:106: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:129: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:136: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:149: warning: implicit conversion 'std::string *' (aka 'basic_string<char> *') -> 'bool' [readability-implicit-bool-conversion]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                                        ^                 
      |                                                                                                                                                                           != nullptr
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:150: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:170: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:187: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1679:194: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1679 |         (yyval.var_decl) = new VarDecl((yyvsp[-7].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-3].string)})), (yyvsp[-8].boolval), (yyvsp[-3].string), (yyvsp[0].expr), (yyvsp[-5].expr));
      |                                                                                                                                                                                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1680:32: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1680 |         (yyval.var_decl)->size = (yyvsp[-5].expr);
      |                                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1680:39: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1680 |         (yyval.var_decl)->size = (yyvsp[-5].expr);
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1681:6: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1681 |         delete (yyvsp[-3].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1681:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1681 |         delete (yyvsp[-3].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1682:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1682 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1682:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1682 |         printParseInfo("var_decl (array) (var_mutable_flag qualified_name LBRACKET RBRACKET IDENTIFIER assign", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1687:8: warning: 31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1687 |   case 31: /* var_mutable_flag: VAR  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1693:3: warning: switch has 2 consecutive identical branches [bugprone-branch-clone]
 1693 |   case 32: /* var_mutable_flag: IMT  */
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1703:10: note: last of these clones ends here
 1703 |     break;
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1693:8: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1693 |   case 32: /* var_mutable_flag: IMT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1699:8: warning: 33 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1699 |   case 33: /* var_mutable_flag: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1705:8: warning: 34 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1705 |   case 34: /* assign_nullable_flag: NULLABLE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1711:3: warning: switch has 2 consecutive identical branches [bugprone-branch-clone]
 1711 |   case 35: /* assign_nullable_flag: NON_NULLABLE  */
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1721:10: note: last of these clones ends here
 1721 |     break;
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1711:8: warning: 35 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1711 |   case 35: /* assign_nullable_flag: NON_NULLABLE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1717:8: warning: 36 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1717 |   case 36: /* assign_nullable_flag: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1723:8: warning: 37 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1723 |   case 37: /* extern_decl: EXTERN FUN qualified_name LPAREN var_decl_list RPAREN qualified_name SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1726:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1726 |         (yyval.stmt) = new ProtoDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1726:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1726 |         (yyval.stmt) = new ProtoDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec));
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1726:58: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1726 |         (yyval.stmt) = new ProtoDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec));
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1726:65: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1726 |         (yyval.stmt) = new ProtoDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec));
      |                                                                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1726:78: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1726 |         (yyval.stmt) = new ProtoDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec));
      |                                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1727:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1727 |         delete (yyvsp[-3].varvec);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1727:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1727 |         delete (yyvsp[-3].varvec);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1728:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1728 |         printParseInfo("extern_decl", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1728:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1728 |         printParseInfo("extern_decl", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1733:8: warning: 38 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1733 |   case 38: /* function_declaration: FUN qualified_name LPAREN var_decl_list RPAREN block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1736:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1736 |         (yyval.stmt) = new FuncDecl(new QualifiedName(), (yyvsp[-4].ident), *(yyvsp[-2].varvec), (yyvsp[0].block));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1736:59: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1736 |         (yyval.stmt) = new FuncDecl(new QualifiedName(), (yyvsp[-4].ident), *(yyvsp[-2].varvec), (yyvsp[0].block));
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1736:79: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1736 |         (yyval.stmt) = new FuncDecl(new QualifiedName(), (yyvsp[-4].ident), *(yyvsp[-2].varvec), (yyvsp[0].block));
      |                                                                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1736:99: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1736 |         (yyval.stmt) = new FuncDecl(new QualifiedName(), (yyvsp[-4].ident), *(yyvsp[-2].varvec), (yyvsp[0].block));
      |                                                                                                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1737:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1737 |         delete (yyvsp[-2].varvec);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1737:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1737 |         delete (yyvsp[-2].varvec);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1738:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1738 |         printParseInfo("function_declaration (without return type)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1738:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1738 |         printParseInfo("function_declaration (without return type)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1743:8: warning: 39 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1743 |   case 39: /* function_declaration: FUN qualified_name LPAREN var_decl_list RPAREN qualified_name block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:57: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:64: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |                                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:77: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1746:97: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1746 |         (yyval.stmt) = new FuncDecl((yyvsp[-1].ident), (yyvsp[-5].ident), *(yyvsp[-3].varvec), (yyvsp[0].block));
      |                                                                                                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1747:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1747 |         delete (yyvsp[-3].varvec);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1747:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1747 |         delete (yyvsp[-3].varvec);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1748:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1748 |         printParseInfo("function_declaration (with return type)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1748:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1748 |         printParseInfo("function_declaration (with return type)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1753:8: warning: 40 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1753 |   case 40: /* var_decl_list: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1756:6: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::VarDecl *> *' [cppcoreguidelines-owning-memory]
 1756 |         (yyval.varvec) = new std::vector<VarDecl*>();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1757:6: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1757 |         printParseInfo("var_decl_list (empty list)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1757:6: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1757 |         printParseInfo("var_decl_list (empty list)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1762:8: warning: 41 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1762 |   case 41: /* var_decl_list: var_decl  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1765:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::VarDecl *> *' [cppcoreguidelines-owning-memory]
 1765 |         (yyval.varvec) = new std::vector<VarDecl*>{(yyvsp[0].var_decl)};
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1765:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1765 |         (yyval.varvec) = new std::vector<VarDecl*>{(yyvsp[0].var_decl)};
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1765:53: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1765 |         (yyval.varvec) = new std::vector<VarDecl*>{(yyvsp[0].var_decl)};
      |                                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1766:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1766 |         printParseInfo("var_decl_list (single var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1766:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1766 |         printParseInfo("var_decl_list (single var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1771:8: warning: 42 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1771 |   case 42: /* var_decl_list: var_decl_list COMMA var_decl  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1774:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1774 |         (yyvsp[-2].varvec)->push_back((yyvsp[0].var_decl));
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1774:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1774 |         (yyvsp[-2].varvec)->push_back((yyvsp[0].var_decl));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1775:27: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1775 |         (yyval.varvec) = (yyvsp[-2].varvec);
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1776:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1776 |         printParseInfo("var_decl_list (multiple var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1776:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1776 |         printParseInfo("var_decl_list (multiple var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1781:8: warning: 43 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1781 |   case 43: /* qualified_name: IDENTIFIER  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1784:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::QualifiedName *' [cppcoreguidelines-owning-memory]
 1784 |         (yyval.ident) = new QualifiedName({*(yyvsp[0].string)});
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1784:46: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1784 |         (yyval.ident) = new QualifiedName({*(yyvsp[0].string)});
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1785:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1785 |         delete (yyvsp[0].string); // Clean up the string
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1785:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1785 |         delete (yyvsp[0].string); // Clean up the string
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1786:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1786 |         printParseInfo("qualified_name (single IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1786:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1786 |         printParseInfo("qualified_name (single IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1791:8: warning: 44 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1791 |   case 44: /* qualified_name: qualified_name DOT IDENTIFIER  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1794:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1794 |         (yyval.ident) = (yyvsp[-2].ident);
      |                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1795:48: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1795 |         (yyval.ident)->name_parts->push_back(*(yyvsp[0].string));
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1796:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1796 |         delete (yyvsp[0].string); // Clean up the string
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1796:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1796 |         delete (yyvsp[0].string); // Clean up the string
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1797:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1797 |         printParseInfo("qualified_name (nested)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1797:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1797 |         printParseInfo("qualified_name (nested)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1802:8: warning: 45 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1802 |   case 45: /* binary_expression: expression binary_operator expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1805:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1805 |         (yyval.expr) = new BinaryExpr((yyvsp[-1].token), (yyvsp[-2].expr), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1805:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1805 |         (yyval.expr) = new BinaryExpr((yyvsp[-1].token), (yyvsp[-2].expr), (yyvsp[0].expr));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1805:59: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1805 |         (yyval.expr) = new BinaryExpr((yyvsp[-1].token), (yyvsp[-2].expr), (yyvsp[0].expr));
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1805:77: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1805 |         (yyval.expr) = new BinaryExpr((yyvsp[-1].token), (yyvsp[-2].expr), (yyvsp[0].expr));
      |                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1806:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1806 |         printParseInfo("binary_expression", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1806:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1806 |         printParseInfo("binary_expression", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1811:8: warning: 46 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1811 |   case 46: /* expression: INT_TOKEN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1814:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1814 |         (yyval.expr) = new IntegerExpr(atol((yyvsp[0].string)->c_str()));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1814:40: warning: 'atol' used to convert a string to an integer value, but function will not report conversion errors; consider using 'strtol' instead [cert-err34-c]
 1814 |         (yyval.expr) = new IntegerExpr(atol((yyvsp[0].string)->c_str()));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1814:40: warning: 'atol' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdlib.h:108:17: note: resolves to this declaration
  108 | extern long int atol (const char *__nptr)
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1814:46: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1814 |         (yyval.expr) = new IntegerExpr(atol((yyvsp[0].string)->c_str()));
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1815:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1815 |         printParseInfo("expression (INT_TOKEN)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1815:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1815 |         printParseInfo("expression (INT_TOKEN)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1820:8: warning: 47 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1820 |   case 47: /* expression: DOUBLE_TOKEN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1823:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1823 |         (yyval.expr) = new DoubleExpr(atof((yyvsp[0].string)->c_str()));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1823:39: warning: 'atof' used to convert a string to a floating-point value, but function will not report conversion errors; consider using 'strtod' instead [cert-err34-c]
 1823 |         (yyval.expr) = new DoubleExpr(atof((yyvsp[0].string)->c_str()));
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1823:39: warning: 'atof' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdlib.h:102:15: note: resolves to this declaration
  102 | extern double atof (const char *__nptr)
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1823:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1823 |         (yyval.expr) = new DoubleExpr(atof((yyvsp[0].string)->c_str()));
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1824:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1824 |         printParseInfo("expression (DOUBLE_TOKEN)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1824:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1824 |         printParseInfo("expression (DOUBLE_TOKEN)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1829:8: warning: 48 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1829 |   case 48: /* expression: STRING_LITERAL  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1832:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1832 |         (yyval.expr) = new StringExpr((yyvsp[0].string)->substr(1, (yyvsp[0].string)->length() - 2));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1832:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1832 |         (yyval.expr) = new StringExpr((yyvsp[0].string)->substr(1, (yyvsp[0].string)->length() - 2));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1832:69: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1832 |         (yyval.expr) = new StringExpr((yyvsp[0].string)->substr(1, (yyvsp[0].string)->length() - 2));
      |                                                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1833:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 1833 |         delete (yyvsp[0].string); // Clean up the string
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1833:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1833 |         delete (yyvsp[0].string); // Clean up the string
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1834:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1834 |         printParseInfo("expression (STRING_LITERAL)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1834:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1834 |         printParseInfo("expression (STRING_LITERAL)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1839:8: warning: 49 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1839 |   case 49: /* expression: qualified_name  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1842:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1842 |         (yyval.expr) = new VarExpr((yyvsp[0].ident));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1842:37: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1842 |         (yyval.expr) = new VarExpr((yyvsp[0].ident));
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1843:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1843 |         printParseInfo("expression (qualified_name)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1843:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1843 |         printParseInfo("expression (qualified_name)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1848:8: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1848 |   case 50: /* expression: LPAREN expression RPAREN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1851:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1851 |         (yyval.expr) = (yyvsp[-1].expr);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1852:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1852 |         printParseInfo("expression (parenthesized)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1852:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1852 |         printParseInfo("expression (parenthesized)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1857:8: warning: 51 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1857 |   case 51: /* expression: qualified_name LPAREN expr_list RPAREN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1860:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1860 |         (yyval.expr) = new CallExpr((yyvsp[-3].ident), *(yyvsp[-1].exprvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1860:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1860 |         (yyval.expr) = new CallExpr((yyvsp[-3].ident), *(yyvsp[-1].exprvec));
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1860:58: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1860 |         (yyval.expr) = new CallExpr((yyvsp[-3].ident), *(yyvsp[-1].exprvec));
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1861:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1861 |         printParseInfo("expression (function call)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1861:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1861 |         printParseInfo("expression (function call)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1866:8: warning: 52 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1866 |   case 52: /* expression: binary_expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1869:18: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1869 |         (yyval.expr) = (yyvsp[0].expr);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1870:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1870 |         printParseInfo("expression (binary_expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1870:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1870 |         printParseInfo("expression (binary_expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1875:8: warning: 53 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1875 |   case 53: /* expression: unary_expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1878:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1878 |         (yyval.expr) = (yyvsp[0].expr);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1879:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1879 |         printParseInfo("expression (unary_expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1879:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1879 |         printParseInfo("expression (unary_expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1884:8: warning: 54 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1884 |   case 54: /* expression: LBRACKET expr_list RBRACKET  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1887:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1887 |         (yyval.expr) = new ListExpr((yyvsp[-1].exprvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1887:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1887 |         (yyval.expr) = new ListExpr((yyvsp[-1].exprvec));
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1888:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1888 |         printParseInfo("expression (list)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1888:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1888 |         printParseInfo("expression (list)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1893:8: warning: 55 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1893 |   case 55: /* expression: qualified_name LBRACKET expression RBRACKET  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1896:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1896 |         (yyval.expr) = new ArrayExpr((yyvsp[-1].expr), (yyvsp[-3].ident));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1896:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1896 |         (yyval.expr) = new ArrayExpr((yyvsp[-1].expr), (yyvsp[-3].ident));
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1896:57: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1896 |         (yyval.expr) = new ArrayExpr((yyvsp[-1].expr), (yyvsp[-3].ident));
      |                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1897:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1897 |         printParseInfo("expression (array access)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1897:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1897 |         printParseInfo("expression (array access)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1902:8: warning: 56 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1902 |   case 56: /* unary_expression: unary_operator expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1905:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Expr *' [cppcoreguidelines-owning-memory]
 1905 |         (yyval.expr) = new UnaryExpr((yyvsp[-1].token), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1905:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1905 |         (yyval.expr) = new UnaryExpr((yyvsp[-1].token), (yyvsp[0].expr));
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1905:58: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1905 |         (yyval.expr) = new UnaryExpr((yyvsp[-1].token), (yyvsp[0].expr));
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1906:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1906 |         printParseInfo("unary_expression", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1906:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1906 |         printParseInfo("unary_expression", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1911:8: warning: 57 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1911 |   case 57: /* binary_operator: PLUS  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1917:8: warning: 58 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1917 |   case 58: /* binary_operator: MINUS  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1923:8: warning: 59 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1923 |   case 59: /* binary_operator: TIMES  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1929:8: warning: 60 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1929 |   case 60: /* binary_operator: DIVIDE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1935:8: warning: 61 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1935 |   case 61: /* binary_operator: MOD  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1941:8: warning: 62 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1941 |   case 62: /* binary_operator: LT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1947:8: warning: 63 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1947 |   case 63: /* binary_operator: LE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1953:8: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1953 |   case 64: /* binary_operator: GT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1959:8: warning: 65 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1959 |   case 65: /* binary_operator: GE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1965:8: warning: 66 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1965 |   case 66: /* binary_operator: EQ  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1971:8: warning: 67 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1971 |   case 67: /* binary_operator: NE  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1977:8: warning: 68 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1977 |   case 68: /* binary_operator: AND  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1983:8: warning: 69 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1983 |   case 69: /* binary_operator: OR  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1989:8: warning: 70 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1989 |   case 70: /* binary_operator: PLUS_ASSIGN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1995:8: warning: 71 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1995 |   case 71: /* binary_operator: MINUS_ASSIGN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2001:8: warning: 72 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2001 |   case 72: /* binary_operator: TIMES_ASSIGN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2007:8: warning: 73 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2007 |   case 73: /* binary_operator: DIVIDE_ASSIGN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2013:8: warning: 74 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2013 |   case 74: /* binary_operator: MOD_ASSIGN  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2019:8: warning: 75 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2019 |   case 75: /* binary_operator: LSHIFT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2025:8: warning: 76 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2025 |   case 76: /* binary_operator: RSHIFT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2031:8: warning: 77 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2031 |   case 77: /* binary_operator: URSHIFT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2037:8: warning: 78 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2037 |   case 78: /* binary_operator: XOR  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2043:8: warning: 79 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2043 |   case 79: /* unary_operator: MINUS  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2049:8: warning: 80 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2049 |   case 80: /* unary_operator: PLUS  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2055:8: warning: 81 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2055 |   case 81: /* unary_operator: NOT  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2061:8: warning: 82 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2061 |   case 82: /* unary_operator: INC  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2067:8: warning: 83 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2067 |   case 83: /* unary_operator: DEC  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2073:8: warning: 84 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2073 |   case 84: /* unary_operator: TIMES  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2079:8: warning: 85 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2079 |   case 85: /* unary_operator: BIT_AND  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2085:8: warning: 86 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2085 |   case 86: /* expr_list: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2088:2: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::Expr *> *' [cppcoreguidelines-owning-memory]
 2088 |         (yyval.exprvec) = new std::vector<Expr*>();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2089:2: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2089 |         printParseInfo("expr_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2089:2: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2089 |         printParseInfo("expr_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2094:8: warning: 87 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2094 |   case 87: /* expr_list: expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2097:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::Expr *> *' [cppcoreguidelines-owning-memory]
 2097 |         (yyval.exprvec) = new std::vector<Expr*>{(yyvsp[0].expr)};
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2097:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2097 |         (yyval.exprvec) = new std::vector<Expr*>{(yyvsp[0].expr)};
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2097:51: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2097 |         (yyval.exprvec) = new std::vector<Expr*>{(yyvsp[0].expr)};
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2098:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2098 |         printParseInfo("expr_list (singleexpression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2098:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2098 |         printParseInfo("expr_list (singleexpression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2103:8: warning: 88 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2103 |   case 88: /* expr_list: expr_list COMMA expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2106:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2106 |         (yyvsp[-2].exprvec)->push_back((yyvsp[0].expr));
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2106:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2106 |         (yyvsp[-2].exprvec)->push_back((yyvsp[0].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2107:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2107 |         (yyval.exprvec) = (yyvsp[-2].exprvec);
      |                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2108:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2108 |         printParseInfo("expr_list (multipleexpressions)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2108:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2108 |         printParseInfo("expr_list (multipleexpressions)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2113:8: warning: 89 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2113 |   case 89: /* if_statement: IF expression block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2116:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2116 |         (yyval.stmt) = new IfStmt((yyvsp[-1].expr), (yyvsp[0].block), nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2116:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2116 |         (yyval.stmt) = new IfStmt((yyvsp[-1].expr), (yyvsp[0].block), nullptr);
      |                            ^
/home/napbad/tmp/dap/src/core/parser/node.h:541:73: note: default parameter was declared here
  541 |     IfStmt(Expr *cond, BlockStmt *body, BlockStmt *else_body = nullptr, std::vector<Stmt *> *elif_stmts = {})
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2116:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2116 |         (yyval.stmt) = new IfStmt((yyvsp[-1].expr), (yyvsp[0].block), nullptr);
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2116:54: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2116 |         (yyval.stmt) = new IfStmt((yyvsp[-1].expr), (yyvsp[0].block), nullptr);
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2117:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2117 |         printParseInfo("if_statement (no else)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2117:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2117 |         printParseInfo("if_statement (no else)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2122:8: warning: 90 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2122 |   case 90: /* if_statement: IF expression block ELSE block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2125:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2125 |         (yyval.stmt) = new IfStmt((yyvsp[-3].expr), (yyvsp[-2].block), (yyvsp[0].block));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2125:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2125 |         (yyval.stmt) = new IfStmt((yyvsp[-3].expr), (yyvsp[-2].block), (yyvsp[0].block));
      |                            ^
/home/napbad/tmp/dap/src/core/parser/node.h:541:73: note: default parameter was declared here
  541 |     IfStmt(Expr *cond, BlockStmt *body, BlockStmt *else_body = nullptr, std::vector<Stmt *> *elif_stmts = {})
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2125:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2125 |         (yyval.stmt) = new IfStmt((yyvsp[-3].expr), (yyvsp[-2].block), (yyvsp[0].block));
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2125:54: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2125 |         (yyval.stmt) = new IfStmt((yyvsp[-3].expr), (yyvsp[-2].block), (yyvsp[0].block));
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2125:73: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2125 |         (yyval.stmt) = new IfStmt((yyvsp[-3].expr), (yyvsp[-2].block), (yyvsp[0].block));
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2126:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2126 |         printParseInfo("if_statement (with else)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2126:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2126 |         printParseInfo("if_statement (with else)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2131:8: warning: 91 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2131 |   case 91: /* if_statement: IF expression block elif_stmts  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2134:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2134 |         (yyval.stmt) = new IfStmt((yyvsp[-2].expr), (yyvsp[-1].block), nullptr, (yyvsp[0].stmtvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2134:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2134 |         (yyval.stmt) = new IfStmt((yyvsp[-2].expr), (yyvsp[-1].block), nullptr, (yyvsp[0].stmtvec));
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2134:54: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2134 |         (yyval.stmt) = new IfStmt((yyvsp[-2].expr), (yyvsp[-1].block), nullptr, (yyvsp[0].stmtvec));
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2134:82: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2134 |         (yyval.stmt) = new IfStmt((yyvsp[-2].expr), (yyvsp[-1].block), nullptr, (yyvsp[0].stmtvec));
      |                                                                                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2135:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2135 |         printParseInfo("if_statement (with elif_stmts)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2135:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2135 |         printParseInfo("if_statement (with elif_stmts)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2140:8: warning: 92 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2140 |   case 92: /* if_statement: IF expression block elif_stmts ELSE block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2143:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2143 |         (yyval.stmt) = new IfStmt((yyvsp[-4].expr), (yyvsp[-3].block), (yyvsp[0].block), (yyvsp[-2].stmtvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2143:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2143 |         (yyval.stmt) = new IfStmt((yyvsp[-4].expr), (yyvsp[-3].block), (yyvsp[0].block), (yyvsp[-2].stmtvec));
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2143:54: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2143 |         (yyval.stmt) = new IfStmt((yyvsp[-4].expr), (yyvsp[-3].block), (yyvsp[0].block), (yyvsp[-2].stmtvec));
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2143:73: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2143 |         (yyval.stmt) = new IfStmt((yyvsp[-4].expr), (yyvsp[-3].block), (yyvsp[0].block), (yyvsp[-2].stmtvec));
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2143:91: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2143 |         (yyval.stmt) = new IfStmt((yyvsp[-4].expr), (yyvsp[-3].block), (yyvsp[0].block), (yyvsp[-2].stmtvec));
      |                                                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2144:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2144 |         printParseInfo("if_statement (with elif_stmts)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2144:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2144 |         printParseInfo("if_statement (with elif_stmts)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2149:8: warning: 93 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2149 |   case 93: /* elif_stmts: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2152:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::Stmt *> *' [cppcoreguidelines-owning-memory]
 2152 |         (yyval.stmtvec) = new std::vector<Stmt*>();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2153:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2153 |         printParseInfo("elif_stmts (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2153:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2153 |         printParseInfo("elif_stmts (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2158:8: warning: 94 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2158 |   case 94: /* elif_stmts: elif_statement elif_stmts  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2161:37: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2161 |         (yyval.stmtvec)->push_back((yyvsp[-1].stmt));
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2162:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2162 |         printParseInfo("elif_stmts (with elif_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2162:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2162 |         printParseInfo("elif_stmts (with elif_statement)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2167:8: warning: 95 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2167 |   case 95: /* elif_statement: ELIF expression block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2170:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2170 |         (yyval.stmt) = new ElifStmt((yyvsp[-1].expr), (yyvsp[0].block));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2170:38: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2170 |         (yyval.stmt) = new ElifStmt((yyvsp[-1].expr), (yyvsp[0].block));
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2170:56: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2170 |         (yyval.stmt) = new ElifStmt((yyvsp[-1].expr), (yyvsp[0].block));
      |                                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2171:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2171 |         printParseInfo("elif_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2171:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2171 |         printParseInfo("elif_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2176:8: warning: 96 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2176 |   case 96: /* for_statement: FOR for_var_decl SEMICOLON expression SEMICOLON expression block  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:37: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:44: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:59: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:77: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2179:95: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2179 |         (yyval.stmt) = new ForStmt((yyvsp[-5].var_decl), (yyvsp[-3].expr), (yyvsp[-1].expr), (yyvsp[0].block));
      |                                                                                               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2180:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2180 |         printParseInfo("for_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2180:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2180 |         printParseInfo("for_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2185:8: warning: 97 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2185 |   case 97: /* break_statement: BREAK  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2188:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2188 |         (yyval.stmt) = new BreakStmt();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2189:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2189 |         printParseInfo("break_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2189:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2189 |         printParseInfo("break_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2194:8: warning: 98 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2194 |   case 98: /* break_statement: BREAK expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2197:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2197 |         (yyval.stmt) = new BreakStmt((yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2197:39: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2197 |         (yyval.stmt) = new BreakStmt((yyvsp[0].expr));
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2198:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2198 |         printParseInfo("break_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2198:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2198 |         printParseInfo("break_statement", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2203:8: warning: 99 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2203 |   case 99: /* for_var_decl: qualified_name IDENTIFIER ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2206:144: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2206 |         (yyval.var_decl) = new VarDecl((yyvsp[-3].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[-2].string)})), true, true, (yyvsp[0].expr));
      |                                                                                                                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2207:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2207 |         printParseInfo("for_var_decl (qualified_name qualified_name IDENTIFIER ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2207:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2207 |         printParseInfo("for_var_decl (qualified_name qualified_name IDENTIFIER ASSIGN expression)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2212:8: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2212 |   case 100: /* for_var_decl: qualified_name IDENTIFIER  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2215:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::VarDecl *' [cppcoreguidelines-owning-memory]
 2215 |         (yyval.var_decl) = new VarDecl((yyvsp[-1].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[0].string)})), true, true, nullptr);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2215:32: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2215 |         (yyval.var_decl) = new VarDecl((yyvsp[-1].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[0].string)})), true, true, nullptr);
      |                                ^
/home/napbad/tmp/dap/src/core/parser/node.h:429:13: note: default parameter was declared here
  429 |             Expr *size = nullptr)
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2215:41: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2215 |         (yyval.var_decl) = new VarDecl((yyvsp[-1].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[0].string)})), true, true, nullptr);
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2215:81: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2215 |         (yyval.var_decl) = new VarDecl((yyvsp[-1].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[0].string)})), true, true, nullptr);
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2215:109: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2215 |         (yyval.var_decl) = new VarDecl((yyvsp[-1].ident), new QualifiedName(new std::vector<std::string>({*(yyvsp[0].string)})), true, true, nullptr);
      |                                                                                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2216:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2216 |         printParseInfo("for_var_decl (qualified_name qualified_name IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2216:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2216 |         printParseInfo("for_var_decl (qualified_name qualified_name IDENTIFIER)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2221:8: warning: 101 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2221 |   case 101: /* struct_decl: STRUCT IDENTIFIER LBRACE struct_field_list RBRACE SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2224:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2224 |         (yyval.stmt) = new StructDecl(new QualifiedName({*(yyvsp[-4].string)}), *(yyvsp[-2].varvec));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2224:60: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2224 |         (yyval.stmt) = new StructDecl(new QualifiedName({*(yyvsp[-4].string)}), *(yyvsp[-2].varvec));
      |                                                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2224:83: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2224 |         (yyval.stmt) = new StructDecl(new QualifiedName({*(yyvsp[-4].string)}), *(yyvsp[-2].varvec));
      |                                                                                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2225:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 2225 |         delete (yyvsp[-4].string);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2225:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2225 |         delete (yyvsp[-4].string);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2226:9: warning: deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead [cppcoreguidelines-owning-memory]
 2226 |         delete (yyvsp[-2].varvec);
      |         ^       ~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1188:5: note: variable declared here
 1188 |     YYSTYPE *yyvsp = yyvs;
      |     ^~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2226:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2226 |         delete (yyvsp[-2].varvec);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2227:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2227 |         printParseInfo("struct_decl", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2227:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2227 |         printParseInfo("struct_decl", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2232:8: warning: 102 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2232 |   case 102: /* struct_field_list: %empty  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2235:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::vector<dap::parser::VarDecl *> *' [cppcoreguidelines-owning-memory]
 2235 |         (yyval.varvec) = new std::vector<VarDecl*>();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2236:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2236 |         printParseInfo("struct_field_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2236:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2236 |         printParseInfo("struct_field_list (empty)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2241:8: warning: 103 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2241 |   case 103: /* struct_field_list: struct_field_list var_decl SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2244:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2244 |         (yyvsp[-2].varvec)->push_back((yyvsp[-1].var_decl));
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2244:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2244 |         (yyvsp[-2].varvec)->push_back((yyvsp[-1].var_decl));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2245:27: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2245 |         (yyval.varvec) = (yyvsp[-2].varvec);
      |                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2246:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2246 |         printParseInfo("struct_field_list (with var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2246:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2246 |         printParseInfo("struct_field_list (with var_decl)", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2251:8: warning: 104 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2251 |   case 104: /* assign_expr: qualified_name ASSIGN expression  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2254:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2254 |         (yyval.stmt) = new AssignExpr((yyvsp[-2].ident), (yyvsp[0].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2254:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2254 |         (yyval.stmt) = new AssignExpr((yyvsp[-2].ident), (yyvsp[0].expr));
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2254:59: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2254 |         (yyval.stmt) = new AssignExpr((yyvsp[-2].ident), (yyvsp[0].expr));
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2255:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2255 |         printParseInfo("assignment", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2255:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2255 |         printParseInfo("assignment", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2260:8: warning: 105 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2260 |   case 105: /* array_assign_stmt: qualified_name LBRACKET expression RBRACKET ASSIGN expression SEMICOLON  */
      |        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2263:9: warning: assigning newly created 'gsl::owner<>' to non-owner 'dap::parser::Stmt *' [cppcoreguidelines-owning-memory]
 2263 |         (yyval.stmt) = new ArrayAssignExpr((yyvsp[-6].ident), (yyvsp[-4].expr), (yyvsp[-1].expr));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2263:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2263 |         (yyval.stmt) = new ArrayAssignExpr((yyvsp[-6].ident), (yyvsp[-4].expr), (yyvsp[-1].expr));
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2263:52: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 2263 |         (yyval.stmt) = new ArrayAssignExpr((yyvsp[-6].ident), (yyvsp[-4].expr), (yyvsp[-1].expr));
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2263:64: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2263 |         (yyval.stmt) = new ArrayAssignExpr((yyvsp[-6].ident), (yyvsp[-4].expr), (yyvsp[-1].expr));
      |                                                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2263:82: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2263 |         (yyval.stmt) = new ArrayAssignExpr((yyvsp[-6].ident), (yyvsp[-4].expr), (yyvsp[-1].expr));
      |                                                                                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2264:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 2264 |         printParseInfo("array_assign_expr", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:59: note: default parameter was declared here
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |                                                           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2264:9: warning: 'printParseInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2264 |         printParseInfo("array_assign_expr", yylineno);
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:92:6: note: resolves to this declaration
   92 | void printParseInfo(const char* ruleName, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2287:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2287 |   YYPOPSTACK (yylen);
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:32: note: expanded from macro 'YYPOPSTACK'
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2290:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2290 |   *++yyvsp = yyval;
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2290:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2290 |   *++yyvsp = yyval;
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:120:7: note: resolves to this declaration
  120 | union YYSTYPE
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2296:23: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2296 |     const int yylhs = yyr1[yyn] - YYNTOKENS;
      |                       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2297:21: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2297 |     const int yyi = yypgoto[yylhs] + *yyssp;
      |                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2298:45: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2298 |     yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2299:18: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2299 |                ? yytable[yyi]
      |                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2300:18: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2300 |                : yydefgoto[yylhs]);
      |                  ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2303:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2303 |   goto yynewstate;
      |   ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1217:1: note: label defined here
 1217 | yynewstate:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2312:52: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2312 |   yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:32: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2314:8: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 2314 |   if (!yyerrstatus)
      |       ~^          
      |                    == 0
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2317:7: warning: 'yyerror' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2317 |       yyerror (YY_("syntax error"));
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:86:6: note: resolves to this declaration
   86 | void yyerror(const char *s) {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2328:31: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2328 |           if (yychar == YYEOF)
      |                               ^
      |                                {
 2329 |             YYABORT;
      |                     
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2329:13: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2329 |             YYABORT;
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:956:25: note: expanded from macro 'YYABORT'
  956 | #define YYABORT         goto yyabortlab
      |                         ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2419:1: note: label defined here
 2419 | yyabortlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2333:11: warning: 'yydestruct' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2333 |           yydestruct ("Error: discarding",
      |           ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: note: resolves to this declaration
 1138 | yydestruct (const char *yymsg,
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2341:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2341 |   goto yyerrlab1;
      |   ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2366:1: note: label defined here
 2366 | yyerrlab1:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2350:7: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
 2350 |   if (0)
      |       ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2350:7: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2350:9: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2350 |   if (0)
      |         ^
      |          {
 2351 |     YYERROR;
      |             
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2351:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2351 |     YYERROR;
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:957:25: note: expanded from macro 'YYERROR'
  957 | #define YYERROR         goto yyerrorlab
      |                         ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2347:1: note: label defined here
 2347 | yyerrorlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2356:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2356 |   YYPOPSTACK (yylen);
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:32: note: expanded from macro 'YYPOPSTACK'
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2360:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2360 |   goto yyerrlab1;
      |   ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2366:1: note: label defined here
 2366 | yyerrlab1:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2370:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 2370 |   for (;;)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2372:13: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2372 |       yyn = yypact[yystate];
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2376:44: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2376 |           if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2378:21: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2378 |               yyn = yytable[yyn];
      |                     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2379:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2379 |               if (0 < yyn)
      |                           ^
      |                            {
 2380 |                 break;
      |                       
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2385:25: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2385 |       if (yyssp == yyss)
      |                         ^
      |                          {
 2386 |         YYABORT;
      |                 
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2386:9: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2386 |         YYABORT;
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:956:25: note: expanded from macro 'YYABORT'
  956 | #define YYABORT         goto yyabortlab
      |                         ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2419:1: note: label defined here
 2419 | yyabortlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2389:7: warning: 'yydestruct' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2389 |       yydestruct ("Error: popping",
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: note: resolves to this declaration
 1138 | yydestruct (const char *yymsg,
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2390:19: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2390 |                   YY_ACCESSING_SYMBOL (yystate), yyvsp);
      |                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:632:62: note: expanded from macro 'YY_ACCESSING_SYMBOL'
  632 | #define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])
      |                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2391:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2391 |       YYPOPSTACK (1);
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:32: note: expanded from macro 'YYPOPSTACK'
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2397:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2397 |   *++yyvsp = yylval;
      |    ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2397:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2397 |   *++yyvsp = yylval;
      |            ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:120:7: note: resolves to this declaration
  120 | union YYSTYPE
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2405:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2405 |   goto yynewstate;
      |   ^~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1217:1: note: label defined here
 1217 | yynewstate:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2413:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2413 |   goto yyreturnlab;
      |   ^~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2436:1: note: label defined here
 2436 | yyreturnlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2421:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2421 |   goto yyreturnlab;
      |   ^~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2436:1: note: label defined here
 2436 | yyreturnlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2428:3: warning: 'yyerror' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2428 |   yyerror (YY_("memory exhausted"));
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:86:6: note: resolves to this declaration
   86 | void yyerror(const char *s) {
      |      ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2430:3: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 2430 |   goto yyreturnlab;
      |   ^~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2436:1: note: label defined here
 2436 | yyreturnlab:
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2441:17: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2441 |       yytoken = YYTRANSLATE (yychar);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:572:32: note: expanded from macro 'YYTRANSLATE'
  572 |    ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2442:7: warning: 'yydestruct' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2442 |       yydestruct ("Cleanup: discarding lookahead",
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: note: resolves to this declaration
 1138 | yydestruct (const char *yymsg,
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2447:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2447 |   YYPOPSTACK (yylen);
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:32: note: expanded from macro 'YYPOPSTACK'
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2449:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 2449 |   while (yyssp != yyss)
      |   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2449:10: warning: backward branch (while loop) is ID-dependent due to variable reference to 'yyssp' and may cause performance degradation [altera-id-dependent-backward-branch]
 2449 |   while (yyssp != yyss)
      |          ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1183:5: note: inferred assignment of ID-dependent value from ID-dependent variable yyss
 1183 |     yy_state_t *yyssp = yyss;
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2451:7: warning: 'yydestruct' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2451 |       yydestruct ("Cleanup: popping",
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1138:1: note: resolves to this declaration
 1138 | yydestruct (const char *yymsg,
      | ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2452:19: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 2452 |                   YY_ACCESSING_SYMBOL (+*yyssp), yyvsp);
      |                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:632:62: note: expanded from macro 'YY_ACCESSING_SYMBOL'
  632 | #define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])
      |                                                              ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2453:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2453 |       YYPOPSTACK (1);
      |       ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:1201:32: note: expanded from macro 'YYPOPSTACK'
 1201 | #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
      |                                ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2456:15: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 2456 |   if (yyss != yyssa)
      |               ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2456:21: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2456 |   if (yyss != yyssa)
      |                     ^
      |                      {
 2457 |     YYSTACK_FREE (yyss);
      |                         
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2457:5: warning: do not manage memory manually; use RAII [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 2457 |     YYSTACK_FREE (yyss);
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:463:24: note: expanded from macro 'YYSTACK_FREE'
  463 | #  define YYSTACK_FREE YYFREE
      |                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:482:19: note: expanded from macro 'YYFREE'
  482 | #   define YYFREE free
      |                   ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:2457:5: warning: calling legacy resource function without passing a 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 2457 |     YYSTACK_FREE (yyss);
      |     ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:463:24: note: expanded from macro 'YYSTACK_FREE'
  463 | #  define YYSTACK_FREE YYFREE
      |                        ^
/home/napbad/tmp/dap/src/core/parser/parser.cpp:482:19: note: expanded from macro 'YYFREE'
  482 | #   define YYFREE free
      |                   ^
[9/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/funGen_sys.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:5:1: warning: system include llvm/ADT/StringExtras.h not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <llvm/ADT/StringExtras.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:5:1: warning: included header StringExtras.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:6:1: warning: system include llvm/IR/Verifier.h not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <llvm/IR/Verifier.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    7 | 
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:12:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   12 | namespace dap::inter_gen
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:14:22: warning: no header providing "dap::inter_gen::InterGenContext" is directly included [misc-include-cleaner]
    9 | #include "src/core/utilities/file_util.h"
   10 | 
   11 | 
   12 | namespace dap::inter_gen
   13 | {
   14 | void genSysFun(const InterGenContext *ctx)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:16:15: warning: Value stored to 'writeFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   16 |     Function *writeFunc = genSysWrite(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:16:15: note: Value stored to 'writeFunc' during its initialization is never read
   16 |     Function *writeFunc = genSysWrite(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:16:27: warning: 'genSysWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   16 |     Function *writeFunc = genSysWrite(ctx);
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:21:11: note: resolves to this declaration
   21 | Function *genSysWrite(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:17:15: warning: Value stored to 'fsyncFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   17 |     Function *fsyncFunc = genSysFSync(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:17:15: note: Value stored to 'fsyncFunc' during its initialization is never read
   17 |     Function *fsyncFunc = genSysFSync(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:17:27: warning: 'genSysFSync' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |     Function *fsyncFunc = genSysFSync(ctx);
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:31:11: note: resolves to this declaration
   31 | Function *genSysFSync(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:18:15: warning: Value stored to 'readFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   18 |     Function *readFunc = genSysRead(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:18:15: note: Value stored to 'readFunc' during its initialization is never read
   18 |     Function *readFunc = genSysRead(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:18:26: warning: 'genSysRead' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     Function *readFunc = genSysRead(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:41:11: note: resolves to this declaration
   41 | Function *genSysRead(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:19:15: warning: Value stored to 'openFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   19 |     Function *openFunc = genSysOpen(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:19:15: note: Value stored to 'openFunc' during its initialization is never read
   19 |     Function *openFunc = genSysOpen(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:19:26: warning: 'genSysOpen' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   19 |     Function *openFunc = genSysOpen(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:52:11: note: resolves to this declaration
   52 | Function *genSysOpen(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:20:15: warning: Value stored to 'closeFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   20 |     Function *closeFunc = genSysClose(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:20:15: note: Value stored to 'closeFunc' during its initialization is never read
   20 |     Function *closeFunc = genSysClose(ctx);
      |               ^~~~~~~~~   ~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:20:27: warning: 'genSysClose' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |     Function *closeFunc = genSysClose(ctx);
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:62:11: note: resolves to this declaration
   62 | Function *genSysClose(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:22:15: warning: Value stored to 'forkFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   22 |     Function *forkFunc = genSysFork(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:22:15: note: Value stored to 'forkFunc' during its initialization is never read
   22 |     Function *forkFunc = genSysFork(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:22:26: warning: 'genSysFork' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |     Function *forkFunc = genSysFork(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:72:11: note: resolves to this declaration
   72 | Function *genSysFork(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:23:15: warning: Value stored to 'execveFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   23 |     Function *execveFunc = genSysExecve(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:23:15: note: Value stored to 'execveFunc' during its initialization is never read
   23 |     Function *execveFunc = genSysExecve(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:23:28: warning: 'genSysExecve' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     Function *execveFunc = genSysExecve(ctx);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:83:11: note: resolves to this declaration
   83 | Function *genSysExecve(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:24:15: warning: Value stored to 'waitFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   24 |     Function *waitFunc = genSysWait(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:24:15: note: Value stored to 'waitFunc' during its initialization is never read
   24 |     Function *waitFunc = genSysWait(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:24:26: warning: 'genSysWait' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     Function *waitFunc = genSysWait(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:93:11: note: resolves to this declaration
   93 | Function *genSysWait(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:25:15: warning: Value stored to 'listenFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   25 |     Function *listenFunc = genSysListen(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:25:15: note: Value stored to 'listenFunc' during its initialization is never read
   25 |     Function *listenFunc = genSysListen(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:25:28: warning: 'genSysListen' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   25 |     Function *listenFunc = genSysListen(ctx);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:145:11: note: resolves to this declaration
  145 | Function *genSysListen(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:26:15: warning: Value stored to 'mmapFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   26 |     Function *mmapFunc = genSysMmap(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:26:15: note: Value stored to 'mmapFunc' during its initialization is never read
   26 |     Function *mmapFunc = genSysMmap(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:26:26: warning: 'genSysMmap' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |     Function *mmapFunc = genSysMmap(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:104:11: note: resolves to this declaration
  104 | Function *genSysMmap(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:28:15: warning: Value stored to 'munmapFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   28 |     Function *munmapFunc = genSysMunmap(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:28:15: note: Value stored to 'munmapFunc' during its initialization is never read
   28 |     Function *munmapFunc = genSysMunmap(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:28:28: warning: 'genSysMunmap' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |     Function *munmapFunc = genSysMunmap(ctx);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:114:11: note: resolves to this declaration
  114 | Function *genSysMunmap(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:29:15: warning: Value stored to 'sbrkFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   29 |     Function *sbrkFunc = genSysSbrk(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:29:15: note: Value stored to 'sbrkFunc' during its initialization is never read
   29 |     Function *sbrkFunc = genSysSbrk(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:29:26: warning: 'genSysSbrk' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |     Function *sbrkFunc = genSysSbrk(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:187:11: note: resolves to this declaration
  187 | Function *genSysSbrk(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:30:15: warning: Value stored to 'brkFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   30 |     Function *brkFunc = genSysBrk(ctx);
      |               ^~~~~~~   ~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:30:15: note: Value stored to 'brkFunc' during its initialization is never read
   30 |     Function *brkFunc = genSysBrk(ctx);
      |               ^~~~~~~   ~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:30:25: warning: 'genSysBrk' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   30 |     Function *brkFunc = genSysBrk(ctx);
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:177:11: note: resolves to this declaration
  177 | Function *genSysBrk(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:31:15: warning: Value stored to 'acceptFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   31 |     Function *acceptFunc = genSysAccept(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:31:15: note: Value stored to 'acceptFunc' during its initialization is never read
   31 |     Function *acceptFunc = genSysAccept(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:31:28: warning: 'genSysAccept' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |     Function *acceptFunc = genSysAccept(ctx);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:156:11: note: resolves to this declaration
  156 | Function *genSysAccept(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:32:15: warning: Value stored to 'bindFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   32 |     Function *bindFunc = genSysBind(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:32:15: note: Value stored to 'bindFunc' during its initialization is never read
   32 |     Function *bindFunc = genSysBind(ctx);
      |               ^~~~~~~~   ~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:32:26: warning: 'genSysBind' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   32 |     Function *bindFunc = genSysBind(ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:135:11: note: resolves to this declaration
  135 | Function *genSysBind(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:34:15: warning: Value stored to 'socketFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   34 |     Function *socketFunc = genSysSocket(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:34:15: note: Value stored to 'socketFunc' during its initialization is never read
   34 |     Function *socketFunc = genSysSocket(ctx);
      |               ^~~~~~~~~~   ~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:34:28: warning: 'genSysSocket' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     Function *socketFunc = genSysSocket(ctx);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:124:11: note: resolves to this declaration
  124 | Function *genSysSocket(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:35:15: warning: Value stored to 'connectFunc' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   35 |     Function *connectFunc = genSysConnect(ctx);
      |               ^~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:35:15: note: Value stored to 'connectFunc' during its initialization is never read
   35 |     Function *connectFunc = genSysConnect(ctx);
      |               ^~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:35:29: warning: 'genSysConnect' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |     Function *connectFunc = genSysConnect(ctx);
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:167:11: note: resolves to this declaration
  167 | Function *genSysConnect(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:37:16: warning: Value stored to 'init' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   37 |     Function * init = genInit(ctx);
      |                ^~~~   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:37:16: note: Value stored to 'init' during its initialization is never read
   37 |     Function * init = genInit(ctx);
      |                ^~~~   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:37:23: warning: 'genInit' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   37 |     Function * init = genInit(ctx);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:198:11: note: resolves to this declaration
  198 | Function *genInit(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:38:15: warning: Value stored to 'exit' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   38 |     Function *exit = genExit(ctx);
      |               ^~~~   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:38:15: note: Value stored to 'exit' during its initialization is never read
   38 |     Function *exit = genExit(ctx);
      |               ^~~~   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:38:22: warning: 'genExit' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   38 |     Function *exit = genExit(ctx);
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:218:11: note: resolves to this declaration
  218 | Function *genExit(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:39:15: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   39 |     Function *f = genFini(ctx);
      |               ^   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:39:15: note: Value stored to 'f' during its initialization is never read
   39 |     Function *f = genFini(ctx);
      |               ^   ~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:39:15: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
   39 |     Function *f = genFini(ctx);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:39:19: warning: 'genFini' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   39 |     Function *f = genFini(ctx);
      |                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:208:11: note: resolves to this declaration
  208 | Function *genFini(const InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:44:12: warning: accessing fields in struct 'SysFunctionMetadata' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
   44 |     struct SysFunctionMetadata
      |            ^
   45 |     {
   46 |         std::string name;
   47 |         FunctionType *type;
   48 |     };
      |      
      |       __attribute__((aligned(64)))
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:44:12: note: use "__attribute__((aligned(64)))" to align struct 'SysFunctionMetadata' to 64 bytes
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:46:14: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    7 |         std::string name;
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:47:9: warning: no header providing "llvm::FunctionType" is directly included [misc-include-cleaner]
    6 |         FunctionType *type;
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:50:5: warning: variable 'sysFunctions' of type 'std::vector<SysFunctionMetadata>' can be declared 'const' [misc-const-correctness]
   50 |     std::vector<SysFunctionMetadata> sysFunctions = {
      |     ^
      |                                      const 
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:50:10: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    7 |     std::vector<SysFunctionMetadata> sysFunctions = {
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:50:53: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   50 |     std::vector<SysFunctionMetadata> sysFunctions = {
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:51:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   51 |         {"write", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:51:19: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |         {"write", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                   ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:51:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |         {"write", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:51:37: warning: no header providing "llvm::Type" is directly included [misc-include-cleaner]
    6 |         {"write", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:51:54: warning: no header providing "LLVMCTX" is directly included [misc-include-cleaner]
   51 |         {"write", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:52:38: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |                                     {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                      ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:52:65: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |                                     {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                 ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:52:65: warning: no header providing "llvm::PointerType" is directly included [misc-include-cleaner]
   52 |                                     {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:52:82: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |                                     {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                  ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:52:82: warning: no header providing "llvm::IntegerType" is directly included [misc-include-cleaner]
   52 |                                     {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:53:38: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |                                      Type::getInt32Ty(LLVMCTX)},
      |                                      ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:55:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   55 |         {"fsync", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:55:19: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |         {"fsync", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                   ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:55:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |         {"fsync", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:55:65: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   55 |         {"fsync", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:56:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   56 |         {"read", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:56:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         {"read", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:56:36: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |         {"read", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                    ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:57:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   57 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:57:64: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   57 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:57:81: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   57 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                 ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:58:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |                                     Type::getInt32Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:60:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   60 |         {"open", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:60:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |         {"open", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:60:36: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |         {"open", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                    ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:61:37: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX),
      |                                     ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:61:54: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX),
      |                                                      ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:61:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX),
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:62:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |                                     Type::getInt32Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:64:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   64 |         {"close", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:64:19: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |         {"close", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                   ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:64:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |         {"close", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:64:65: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |         {"close", FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:65:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   65 |         {"fork", FunctionType::get(Type::getInt32Ty(LLVMCTX), {}, false)},
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:65:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |         {"fork", FunctionType::get(Type::getInt32Ty(LLVMCTX), {}, false)},
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:65:36: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   65 |         {"fork", FunctionType::get(Type::getInt32Ty(LLVMCTX), {}, false)},
      |                                    ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:66:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   66 |         {"execve", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:66:20: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |         {"execve", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                    ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:66:38: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   66 |         {"execve", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                      ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:67:39: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |                                      {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:67:56: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |                                      {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                        ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:68:39: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:68:56: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                                                        ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:68:73: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                                                                         ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:69:39: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:69:56: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                                                        ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:69:73: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |                                       PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                                                                         ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:71:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   71 |         {"wait", FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false)},
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:71:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         {"wait", FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false)},
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:71:36: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         {"wait", FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false)},
      |                                    ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:71:64: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         {"wait", FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false)},
      |                                                                ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:71:81: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |         {"wait", FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false)},
      |                                                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:72:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   72 |         {"mmap", FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:72:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |         {"mmap", FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:72:36: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |         {"mmap", FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                    ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:72:53: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |         {"mmap", FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                     ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:73:37: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX),
      |                                     ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:73:54: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX),
      |                                                      ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:73:91: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |                                    {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX),
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:74:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |                                     Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:74:64: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |                                     Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                                                                ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:74:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |                                     Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:75:37: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |                                     Type::getInt64Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:77:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   77 |         {"munmap",
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:78:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |          FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:78:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |          FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:79:29: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |                            {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false)},
      |                             ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:79:46: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |                            {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false)},
      |                                              ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:79:83: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |                            {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false)},
      |                                                                                   ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:80:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   80 |         {"socket",
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:81:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |          FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:81:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |          FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:82:29: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |                            {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                             ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:82:56: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |                            {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:82:83: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |                            {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                                                   ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:83:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   83 |         {"bind", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:83:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         {"bind", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:83:36: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   83 |         {"bind", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                    ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:84:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:84:64: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:84:81: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |                                    {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                 ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:85:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   85 |                                     Type::getInt32Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:87:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   87 |         {"listen",
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:88:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:88:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:88:56: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:88:83: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false)},
      |                                                                                   ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:89:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   89 |         {"accept", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:89:20: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |         {"accept", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                    ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:89:38: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |         {"accept", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                      ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:90:39: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |                                      {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                       ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:90:66: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |                                      {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                  ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:90:83: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |                                      {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                   ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:91:39: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |                                       PointerType::get(Type::getInt32Ty(LLVMCTX), 0)},
      |                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:91:56: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   91 |                                       PointerType::get(Type::getInt32Ty(LLVMCTX), 0)},
      |                                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:93:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   93 |         {"connect", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:93:21: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |         {"connect", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                     ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:93:39: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |         {"connect", FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                                       ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:94:40: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |                                       {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:94:67: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |                                       {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                   ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:94:84: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |                                       {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                                    ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:95:40: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |                                        Type::getInt32Ty(LLVMCTX)},
      |                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:97:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   97 |         {"brk",
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:98:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false)},
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:98:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false)},
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:98:56: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false)},
      |                                                        ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:98:73: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |          FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false)},
      |                                                                         ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:99:10: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   99 |         {"sbrk",
      |          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:100:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |          FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false)}};
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:100:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |          FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false)}};
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:100:45: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |          FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false)}};
      |                                             ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:100:83: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |          FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false)}};
      |                                                                                   ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:102:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  102 |     for (const auto &[name, type] : sysFunctions)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:102:35: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     for (const auto &[name, type] : sysFunctions)
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:102:35: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     for (const auto &[name, type] : sysFunctions)
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:102:35: warning: 'operator==<SysFunctionMetadata *, std::vector<SysFunctionMetadata>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |     for (const auto &[name, type] : sysFunctions)
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:104:19: warning: Value stored to 'func' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  104 |         Function *func = Function::Create(type, Function::ExternalLinkage, name, ctx->module);
      |                   ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:104:19: note: Value stored to 'func' during its initialization is never read
  104 |         Function *func = Function::Create(type, Function::ExternalLinkage, name, ctx->module);
      |                   ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:104:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |         Function *func = Function::Create(type, Function::ExternalLinkage, name, ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:108:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  108 | Function *genSysWrite(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                      
      | auto                                              -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:111:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |     PointerType *i8PtrType = PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0);
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:111:47: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |     PointerType *i8PtrType = PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0);
      |                                               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:114:31: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     FunctionType *writeType = FunctionType::get(
      |                               ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:115:9: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |         Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), i8PtrType, Type::getInt32Ty(LLVMCTX)}, false);
      |         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:115:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |         Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), i8PtrType, Type::getInt32Ty(LLVMCTX)}, false);
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:115:75: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |         Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), i8PtrType, Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:118:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  118 |     Function *writeFunc = Function::Create(writeType, Function::ExternalLinkage, "write", ctx->module);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:123:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 | Function *genSysFSync(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                      
      | auto                                              -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:126:31: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |     FunctionType *fsyncType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                               ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:126:49: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |     FunctionType *fsyncType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:126:77: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |     FunctionType *fsyncType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                             ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:129:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  129 |     Function *fsyncFunc = Function::Create(fsyncType, Function::ExternalLinkage, "fsync", ctx->module);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:134:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  134 | Function *genSysRead(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:137:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  137 |     FunctionType *readType = FunctionType::get(
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:138:9: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  138 |         Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:139:10: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  139 |         {Type::getInt32Ty(LLVMCTX), PointerType::getInt8Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:139:37: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  139 |         {Type::getInt32Ty(LLVMCTX), PointerType::getInt8Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                     ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:139:70: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  139 |         {Type::getInt32Ty(LLVMCTX), PointerType::getInt8Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                      ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:142:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |     Function *readFunc = Function::Create(readType, Function::ExternalLinkage, "read", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:147:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 | Function *genSysOpen(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:150:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  150 |     FunctionType *openType = FunctionType::get(
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:151:9: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  151 |         Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:152:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)},
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:152:27: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)},
      |                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:152:64: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)},
      |                                                                ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:152:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  152 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)},
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:156:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  156 |     Function *openFunc = Function::Create(openType, Function::ExternalLinkage, "open", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:161:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 | Function *genSysClose(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                      
      | auto                                              -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:164:31: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     FunctionType *closeType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                               ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:164:49: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     FunctionType *closeType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:164:77: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  164 |     FunctionType *closeType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                             ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:167:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  167 |     Function *closeFunc = Function::Create(closeType, Function::ExternalLinkage, "close", ctx->module);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:172:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 | Function *genSysFork(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:175:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  175 |     FunctionType *forkType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {}, false);
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:175:48: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  175 |     FunctionType *forkType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {}, false);
      |                                                ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:178:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  178 |     Function *forkFunc = Function::Create(forkType, Function::ExternalLinkage, "fork", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:183:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  183 | Function *genSysExecve(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                       
      | auto                                               -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:187:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  187 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:187:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  187 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:188:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |                           {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:188:45: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |                           {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                             ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:189:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:189:45: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                                             ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:189:62: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  189 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0),
      |                                                              ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:190:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:190:45: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                                             ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:190:62: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  190 |                            PointerType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), 0)},
      |                                                              ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:194:28: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |     Function *execveFunc = Function::Create(execveType, Function::ExternalLinkage, "execve", ctx->module);
      |                            ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:199:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 | Function *genSysWait(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:203:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false);
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:203:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false);
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:203:55: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false);
      |                                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:203:72: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(Type::getInt32Ty(LLVMCTX), 0)}, false);
      |                                                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:206:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  206 |     Function *waitFunc = Function::Create(waitType, Function::ExternalLinkage, "wait", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:211:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  211 | Function *genSysMmap(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:214:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  214 |     FunctionType *mmapType = FunctionType::get(
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:215:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |         PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:215:26: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |         PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                          ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:216:10: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |          ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:216:27: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:216:64: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                                                                ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:216:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX),
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:217:10: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |          Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt64Ty(LLVMCTX)},
      |          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:217:37: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |          Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt64Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:217:64: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  217 |          Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt64Ty(LLVMCTX)},
      |                                                                ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:221:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  221 |     Function *mmapFunc = Function::Create(mmapType, Function::ExternalLinkage, "mmap", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:226:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 | Function *genSysMunmap(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                       
      | auto                                               -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:230:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  230 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:230:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  230 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:231:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  231 |                           {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false);
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:231:45: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  231 |                           {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false);
      |                                             ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:231:82: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  231 |                           {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt64Ty(LLVMCTX)}, false);
      |                                                                                  ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:234:28: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  234 |     Function *munmapFunc = Function::Create(munmapType, Function::ExternalLinkage, "munmap", ctx->module);
      |                            ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:239:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  239 | Function *genSysSocket(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                       
      | auto                                               -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:243:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:243:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:244:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |                           {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:244:55: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |                           {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                                       ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:244:82: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  244 |                           {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                                  ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:247:28: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  247 |     Function *socketFunc = Function::Create(socketType, Function::ExternalLinkage, "socket", ctx->module);
      |                            ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:252:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  252 | Function *genSysBind(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:255:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  255 |     FunctionType *bindType = FunctionType::get(
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:256:9: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  256 |         Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:257:10: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:257:37: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:257:54: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                                      ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:257:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  257 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:261:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  261 |     Function *bindFunc = Function::Create(bindType, Function::ExternalLinkage, "bind", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:266:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  266 | Function *genSysListen(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                       
      | auto                                               -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:270:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:270:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:270:55: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                                       ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:270:82: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX), Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                                  ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:273:28: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  273 |     Function *listenFunc = Function::Create(listenType, Function::ExternalLinkage, "listen", ctx->module);
      |                            ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:278:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  278 | Function *genSysAccept(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                       
      | auto                                               -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:282:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  282 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:282:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  282 |         FunctionType::get(Type::getInt32Ty(LLVMCTX),
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:283:28: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  283 |                           {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:283:55: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  283 |                           {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:283:72: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  283 |                           {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0),
      |                                                                        ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:284:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |                            PointerType::get(Type::getInt32Ty(LLVMCTX), 0)},
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:284:45: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |                            PointerType::get(Type::getInt32Ty(LLVMCTX), 0)},
      |                                             ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:288:28: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  288 |     Function *acceptFunc = Function::Create(acceptType, Function::ExternalLinkage, "accept", ctx->module);
      |                            ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:293:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  293 | Function *genSysConnect(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                        
      | auto                                                -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:296:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  296 |     FunctionType *connectType = FunctionType::get(
      |                                 ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:297:9: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  297 |         Type::getInt32Ty(LLVMCTX),
      |         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:298:10: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:298:37: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                     ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:298:54: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                                      ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:298:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |         {Type::getInt32Ty(LLVMCTX), PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), Type::getInt32Ty(LLVMCTX)},
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:302:29: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  302 |     Function *connectFunc = Function::Create(connectType, Function::ExternalLinkage, "connect", ctx->module);
      |                             ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:307:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  307 | Function *genSysBrk(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                    
      | auto                                            -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:311:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false);
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:311:27: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false);
      |                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:311:55: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false);
      |                                                       ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:311:72: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  311 |         FunctionType::get(Type::getInt32Ty(LLVMCTX), {PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0)}, false);
      |                                                                        ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:314:25: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  314 |     Function *brkFunc = Function::Create(brkType, Function::ExternalLinkage, "brk", ctx->module);
      |                         ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:319:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  319 | Function *genSysSbrk(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                     
      | auto                                             -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:323:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false);
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:323:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false);
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:323:44: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                            ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:323:82: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         FunctionType::get(PointerType::get(IntegerType::getInt8Ty(LLVMCTX), 0), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                                  ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:326:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  326 |     Function *sbrkFunc = Function::Create(sbrkType, Function::ExternalLinkage, "sbrk", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:331:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  331 | Function *genInit(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                  
      | auto                                          -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:334:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  334 |     FunctionType *initType = FunctionType::get(Type::getVoidTy(LLVMCTX), {}, false);
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:334:48: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  334 |     FunctionType *initType = FunctionType::get(Type::getVoidTy(LLVMCTX), {}, false);
      |                                                ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:337:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  337 |     Function *initFunc = Function::Create(initType, Function::ExternalLinkage, "init", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:342:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  342 | Function *genFini(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                  
      | auto                                          -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:345:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FunctionType *finiType = FunctionType::get(Type::getVoidTy(LLVMCTX), {}, false);
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:345:48: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |     FunctionType *finiType = FunctionType::get(Type::getVoidTy(LLVMCTX), {}, false);
      |                                                ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:348:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  348 |     Function *finiFunc = Function::Create(finiType, Function::ExternalLinkage, "fini", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:353:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 | Function *genExit(const InterGenContext *ctx)
      | ~~~~~~~~~~^                                  
      | auto                                          -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:356:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  356 |     FunctionType *exitType = FunctionType::get(Type::getVoidTy(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                              ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:356:48: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  356 |     FunctionType *exitType = FunctionType::get(Type::getVoidTy(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:356:75: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  356 |     FunctionType *exitType = FunctionType::get(Type::getVoidTy(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:359:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  359 |     Function *exitFunc = Function::Create(exitType, Function::ExternalLinkage, "exit", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:365:1: warning: no header providing "llvm::CallInst" is directly included [misc-include-cleaner]
    6 | CallInst *handleSys(const parser::CallExpr *call, InterGenContext *ctx, Function *fun)
      | ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:365:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  365 | CallInst *handleSys(const parser::CallExpr *call, InterGenContext *ctx, Function *fun)
      | ~~~~~~~~~~^                                                                           
      | auto                                                                                   -> CallInst *
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:365:11: warning: function 'handleSys' has cognitive complexity of 204 (threshold 25) [readability-function-cognitive-complexity]
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:367:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  367 |     if (fun->getName() == "write")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:372:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  372 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:376:14: note: +1, nesting level increased to 2
  376 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:378:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  378 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:380:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  380 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:384:17: note: +1, nesting level increased to 4
  384 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:390:13: note: +1, nesting level increased to 3
  390 |             else
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:397:9: note: +1, nesting level increased to 2
  397 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:403:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  403 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:408:14: note: +1, nesting level increased to 2
  408 |         else if (auto *expr = dynamic_cast<parser::Expr *>(call->args[1]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:412:9: note: +1, nesting level increased to 2
  412 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:418:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  418 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:422:14: note: +1, nesting level increased to 2
  422 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[2]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:424:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  424 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:426:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  426 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:430:17: note: +1, nesting level increased to 4
  430 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:436:13: note: +1, nesting level increased to 3
  436 |             else
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:443:14: note: +1, nesting level increased to 2
  443 |         else if (Value *size = call->args[2]->codeGen(ctx); isa<IntegerType>(size->getType()))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:447:9: note: +1, nesting level increased to 2
  447 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:456:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  456 |     if (fun->getName() == "fsync")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:459:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  459 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:463:9: note: +1, nesting level increased to 2
  463 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:473:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  473 |     if (fun->getName() == "read")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:476:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  476 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:480:14: note: +1, nesting level increased to 2
  480 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:482:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  482 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:484:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  484 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:488:17: note: +1, nesting level increased to 4
  488 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:493:13: note: +1, nesting level increased to 3
  493 |             else
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:499:9: note: +1, nesting level increased to 2
  499 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:505:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  505 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:509:9: note: +1, nesting level increased to 2
  509 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:515:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  515 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:519:14: note: +1, nesting level increased to 2
  519 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[2]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:521:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  521 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:523:17: note: +4, including nesting penalty of 3, nesting level increased to 4
  523 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:527:17: note: +1, nesting level increased to 4
  527 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:532:13: note: +1, nesting level increased to 3
  532 |             else
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:538:9: note: +1, nesting level increased to 2
  538 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:547:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  547 |     if (fun->getName() == "open")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:550:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  550 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:555:9: note: +1, nesting level increased to 2
  555 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:561:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  561 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:565:9: note: +1, nesting level increased to 2
  565 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:571:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  571 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:575:9: note: +1, nesting level increased to 2
  575 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:584:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  584 |     if (fun->getName() == "close")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:587:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  587 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:591:9: note: +1, nesting level increased to 2
  591 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:600:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  600 |     if (fun->getName() == "fork")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:605:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  605 |     if (fun->getName() == "execve")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:608:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  608 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:613:9: note: +1, nesting level increased to 2
  613 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:619:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  619 |         if (auto *arrExpr = dynamic_cast<parser::ArrayExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:623:9: note: +1, nesting level increased to 2
  623 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:629:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  629 |         if (auto *arrExpr = dynamic_cast<parser::ArrayExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:633:9: note: +1, nesting level increased to 2
  633 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:642:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  642 |     if (fun->getName() == "wait")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:645:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  645 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:649:9: note: +1, nesting level increased to 2
  649 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:658:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  658 |     if (fun->getName() == "mmap")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:661:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  661 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:665:9: note: +1, nesting level increased to 2
  665 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:671:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  671 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:675:9: note: +1, nesting level increased to 2
  675 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:681:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  681 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:685:9: note: +1, nesting level increased to 2
  685 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:691:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  691 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:695:9: note: +1, nesting level increased to 2
  695 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:701:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  701 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[4]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:705:9: note: +1, nesting level increased to 2
  705 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:711:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  711 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[5]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:715:9: note: +1, nesting level increased to 2
  715 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:724:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  724 |     if (fun->getName() == "munmap")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:727:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  727 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:731:9: note: +1, nesting level increased to 2
  731 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:737:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  737 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:741:9: note: +1, nesting level increased to 2
  741 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:750:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  750 |     if (fun->getName() == "socket")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:753:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  753 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:757:9: note: +1, nesting level increased to 2
  757 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:763:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  763 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:767:9: note: +1, nesting level increased to 2
  767 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:773:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  773 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:777:9: note: +1, nesting level increased to 2
  777 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:786:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  786 |     if (fun->getName() == "bind")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:789:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  789 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:793:9: note: +1, nesting level increased to 2
  793 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:799:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  799 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:803:9: note: +1, nesting level increased to 2
  803 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:809:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  809 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:813:9: note: +1, nesting level increased to 2
  813 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:822:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  822 |     if (fun->getName() == "listen")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:825:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  825 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:829:9: note: +1, nesting level increased to 2
  829 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:838:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  838 |     if (fun->getName() == "accept")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:841:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  841 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:845:9: note: +1, nesting level increased to 2
  845 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:851:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  851 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:855:9: note: +1, nesting level increased to 2
  855 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:861:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  861 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:865:9: note: +1, nesting level increased to 2
  865 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:874:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  874 |     if (fun->getName() == "connect")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:877:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  877 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:881:9: note: +1, nesting level increased to 2
  881 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:887:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  887 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:891:9: note: +1, nesting level increased to 2
  891 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:897:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  897 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:901:9: note: +1, nesting level increased to 2
  901 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:910:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  910 |     if (fun->getName() == "send")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:913:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  913 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:917:9: note: +1, nesting level increased to 2
  917 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:923:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  923 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:927:9: note: +1, nesting level increased to 2
  927 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:933:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  933 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:937:9: note: +1, nesting level increased to 2
  937 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:943:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  943 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:947:9: note: +1, nesting level increased to 2
  947 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:956:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  956 |     if (fun->getName() == "recv")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:959:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  959 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:963:9: note: +1, nesting level increased to 2
  963 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:969:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  969 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:973:9: note: +1, nesting level increased to 2
  973 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:979:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  979 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:983:9: note: +1, nesting level increased to 2
  983 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:989:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  989 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:993:9: note: +1, nesting level increased to 2
  993 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1002:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1002 |     if (fun->getName() == "sbrk")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1005:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1005 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1009:14: note: +1, nesting level increased to 2
 1009 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1011:13: note: +3, including nesting penalty of 2, nesting level increased to 3
 1011 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<IntegerType>(codeGen->getType()))
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1015:13: note: +1, nesting level increased to 3
 1015 |             else
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1023:9: note: +1, nesting level increased to 2
 1023 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1033:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1033 |     if (fun->getName() == "brk")
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1036:9: note: +2, including nesting penalty of 1, nesting level increased to 2
 1036 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1040:9: note: +1, nesting level increased to 2
 1040 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:365:35: warning: no header providing "dap::parser::CallExpr" is directly included [misc-include-cleaner]
    9 | CallInst *handleSys(const parser::CallExpr *call, InterGenContext *ctx, Function *fun)
      |                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:367:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  367 |     if (fun->getName() == "write")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:369:21: warning: no header providing "llvm::Value" is directly included [misc-include-cleaner]
    6 |         std::vector<Value *> writeArgs;
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:372:50: warning: no header providing "dap::parser::IntegerExpr" is directly included [misc-include-cleaner]
  372 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:372:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  372 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:374:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  374 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                 ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:374:33: warning: no header providing "llvm::ConstantInt" is directly included [misc-include-cleaner]
    6 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:374:50: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  374 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                  ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:374:77: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  374 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                             ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:374:83: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  374 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:376:55: warning: no header providing "dap::parser::VarExpr" is directly included [misc-include-cleaner]
  376 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |                                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:376:76: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  376 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:378:57: warning: 'isa<llvm::ConstantInt, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  378 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |                                                         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:378:57: warning: no header providing "llvm::isa" is directly included [misc-include-cleaner]
    7 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |                                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:380:41: warning: 'dyn_cast<llvm::ConstantInt, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  380 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                         ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:380:41: warning: no header providing "llvm::dyn_cast" is directly included [misc-include-cleaner]
  380 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:380:103: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  380 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                                                                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:387:25: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  387 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                         ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:387:42: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  387 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:387:69: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  387 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                                                     ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:387:75: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  387 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                                                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:392:22: warning: no header providing "std::stringstream" is directly included [misc-include-cleaner]
    7 |                 std::stringstream ss;
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:392:35: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
  392 |                 std::stringstream ss;
      |                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:393:20: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  393 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:393:71: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  393 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:394:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  394 |                 util::err_print(std::cerr, ss.str());
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:163:6: note: resolves to this declaration
  163 | void err_print(std::ostream &stream, const std::string &message);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:394:38: warning: no header providing "std::cerr" is directly included [misc-include-cleaner]
    5 |                 util::err_print(std::cerr, ss.str());
      |                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:399:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  399 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:399:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:399:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:399:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:403:50: warning: no header providing "dap::parser::StringExpr" is directly included [misc-include-cleaner]
  403 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[1]))
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:403:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  403 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[1]))
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:405:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  405 |             auto *strPtr = BUILDER.CreateGlobalStringPtr(strExpr->value);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1992:50: note: default parameter was declared here
 1992 |   Constant *CreateGlobalStringPtr(StringRef Str, const Twine &Name = "",
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:405:28: warning: no header providing "BUILDER" is directly included [misc-include-cleaner]
  405 |             auto *strPtr = BUILDER.CreateGlobalStringPtr(strExpr->value);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:408:52: warning: no header providing "dap::parser::Expr" is directly included [misc-include-cleaner]
  408 |         else if (auto *expr = dynamic_cast<parser::Expr *>(call->args[1]))
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:408:70: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |         else if (auto *expr = dynamic_cast<parser::Expr *>(call->args[1]))
      |                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:414:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  414 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:414:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:414:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:414:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:418:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  418 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:420:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  420 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                 ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:420:50: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  420 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                  ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:420:77: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  420 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                             ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:420:83: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  420 |             writeArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:422:76: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  422 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[2]))
      |                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:424:57: warning: 'isa<llvm::ConstantInt, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  424 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |                                                         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:426:41: warning: 'dyn_cast<llvm::ConstantInt, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                         ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:426:103: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  426 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                                                                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:433:25: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                         ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:433:42: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:433:69: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  433 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                                                     ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:433:75: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  433 |                         ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, constantInt->getSExtValue())));
      |                                                                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:438:35: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
  438 |                 std::stringstream ss;
      |                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:439:20: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  439 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:439:71: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  439 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:440:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  440 |                 util::err_print(std::cerr, ss.str());
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:163:6: note: resolves to this declaration
  163 | void err_print(std::ostream &stream, const std::string &message);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:443:42: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  443 |         else if (Value *size = call->args[2]->codeGen(ctx); isa<IntegerType>(size->getType()))
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:443:61: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  443 |         else if (Value *size = call->args[2]->codeGen(ctx); isa<IntegerType>(size->getType()))
      |                                                             ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:449:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  449 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:449:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:449:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:449:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  449 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:453:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  453 |         return BUILDER.CreateCall(fun, writeArgs, "write_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:456:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  456 |     if (fun->getName() == "fsync")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:459:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  459 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:461:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  461 |             fsyncArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                 ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:461:59: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  461 |             fsyncArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                           ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:461:65: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  461 |             fsyncArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:465:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  465 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:465:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  465 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:465:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  465 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:465:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  465 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:470:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  470 |         return BUILDER.CreateCall(fun, fsyncArgs, "fsync_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:473:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  473 |     if (fun->getName() == "read")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:476:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:478:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  478 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:478:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  478 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:478:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  478 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:480:76: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  480 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:482:57: warning: 'isa<llvm::ConstantInt, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  482 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |                                                         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:484:41: warning: 'dyn_cast<llvm::ConstantInt, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  484 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                         ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:484:103: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  484 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                                                                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:490:40: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  490 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                        ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:490:66: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  490 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                                                  ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:490:72: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  490 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:495:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  495 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:495:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  495 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:495:17: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  495 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:495:17: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  495 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:501:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  501 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:501:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  501 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:501:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  501 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:501:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  501 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:505:50: warning: no header providing "dap::parser::PointerExpr" is directly included [misc-include-cleaner]
  505 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:505:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  505 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:511:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  511 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:511:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  511 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:511:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  511 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:511:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  511 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:515:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  515 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:517:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  517 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:517:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  517 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:517:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  517 |             readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:519:76: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  519 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[2]))
      |                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:521:57: warning: 'isa<llvm::ConstantInt, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  521 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<ConstantInt>(codeGen))
      |                                                         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:523:41: warning: 'dyn_cast<llvm::ConstantInt, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  523 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                         ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:523:103: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  523 |                 if (auto *constantInt = dyn_cast<ConstantInt>(codeGen); constantInt->getBitWidth() != 32)
      |                                                                                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:529:40: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  529 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                        ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:529:66: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  529 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                                                  ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:529:72: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  529 |                     readArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, constantInt->getSExtValue())));
      |                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:534:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  534 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:534:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:534:17: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:534:17: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  534 |                 REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:540:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  540 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:540:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  540 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:540:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  540 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:540:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  540 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:544:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  544 |         return BUILDER.CreateCall(fun, readArgs, "read_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:547:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  547 |     if (fun->getName() == "open")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:550:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  550 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[0]))
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:552:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  552 |             auto *strPtr = BUILDER.CreateGlobalStringPtr(strExpr->value);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1992:50: note: default parameter was declared here
 1992 |   Constant *CreateGlobalStringPtr(StringRef Str, const Twine &Name = "",
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:557:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  557 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:557:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:557:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:557:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:561:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  561 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:563:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  563 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:563:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  563 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:563:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  563 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:567:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  567 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:567:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  567 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:567:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  567 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:567:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  567 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:571:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  571 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:573:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  573 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:573:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  573 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:573:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  573 |             openArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:577:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  577 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:577:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:577:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:577:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:581:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  581 |         return BUILDER.CreateCall(fun, openArgs, "open_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:584:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  584 |     if (fun->getName() == "close")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:587:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  587 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:589:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  589 |             closeArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                 ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:589:59: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  589 |             closeArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                           ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:589:65: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  589 |             closeArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:593:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  593 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:593:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  593 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:593:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  593 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:593:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  593 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:597:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  597 |         return BUILDER.CreateCall(fun, closeArgs, "close_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:600:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  600 |     if (fun->getName() == "fork")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:602:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  602 |         return BUILDER.CreateCall(fun, {}, "fork_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:605:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  605 |     if (fun->getName() == "execve")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:608:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  608 |         if (auto *strExpr = dynamic_cast<parser::StringExpr *>(call->args[0]))
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:610:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  610 |             auto *strPtr = BUILDER.CreateGlobalStringPtr(strExpr->value);
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1992:50: note: default parameter was declared here
 1992 |   Constant *CreateGlobalStringPtr(StringRef Str, const Twine &Name = "",
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:615:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  615 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:615:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:615:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:615:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("invalid arg type: expect String, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:619:50: warning: no header providing "dap::parser::ArrayExpr" is directly included [misc-include-cleaner]
  619 |         if (auto *arrExpr = dynamic_cast<parser::ArrayExpr *>(call->args[1]))
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:619:73: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  619 |         if (auto *arrExpr = dynamic_cast<parser::ArrayExpr *>(call->args[1]))
      |                                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:625:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  625 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:625:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  625 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:625:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  625 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:625:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  625 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:629:73: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  629 |         if (auto *arrExpr = dynamic_cast<parser::ArrayExpr *>(call->args[2]))
      |                                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:635:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  635 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:635:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  635 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:635:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  635 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:635:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  635 |             REPORT_ERROR("invalid arg type: expect Array, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:639:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  639 |         return BUILDER.CreateCall(fun, execveArgs, "execve_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:642:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  642 |     if (fun->getName() == "wait")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:645:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  645 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:651:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  651 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:651:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  651 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:651:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  651 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:651:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  651 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:655:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  655 |         return BUILDER.CreateCall(fun, waitArgs, "wait_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:658:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  658 |     if (fun->getName() == "mmap")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:661:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:667:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  667 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:667:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  667 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:667:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  667 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:667:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  667 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:671:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:673:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:673:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  673 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:673:64: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  673 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:677:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  677 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:677:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  677 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:677:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  677 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:677:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  677 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:681:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  681 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:683:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  683 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:683:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  683 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:683:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  683 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:687:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  687 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:687:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  687 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:687:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  687 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:687:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  687 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:691:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  691 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:693:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  693 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:693:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  693 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:693:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  693 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:697:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  697 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:697:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  697 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:697:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  697 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:697:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  697 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:701:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  701 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[4]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:703:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  703 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:703:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  703 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:703:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  703 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:707:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  707 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:707:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  707 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:707:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  707 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:707:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  707 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:711:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  711 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[5]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:711:76: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  711 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[5]))
      |                                                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:713:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  713 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:713:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  713 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:713:64: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  713 |             mmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:717:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  717 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:717:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  717 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:717:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  717 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:717:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  717 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:721:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  721 |         return BUILDER.CreateCall(fun, mmapArgs, "mmap_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:724:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  724 |     if (fun->getName() == "munmap")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:727:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  727 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:733:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  733 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:733:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  733 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:733:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  733 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:733:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  733 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:737:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  737 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:739:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  739 |             munmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:739:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  739 |             munmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:739:66: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  739 |             munmapArgs.push_back(ConstantInt::get(LLVMCTX, APInt(64, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:743:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  743 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:743:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  743 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:743:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  743 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:743:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  743 |             REPORT_ERROR("invalid arg type: expect Integer64, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:747:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  747 |         return BUILDER.CreateCall(fun, munmapArgs, "munmap_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:750:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     if (fun->getName() == "socket")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:753:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  753 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:755:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  755 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:755:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  755 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:755:66: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  755 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:759:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  759 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:759:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  759 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:759:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  759 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:759:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  759 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:763:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  763 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:765:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  765 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:765:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  765 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:765:66: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  765 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:769:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  769 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:769:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  769 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:769:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  769 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:769:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  769 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:773:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  773 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:775:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  775 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:775:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  775 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:775:66: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  775 |             socketArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:779:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  779 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:779:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  779 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:779:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  779 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:779:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  779 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:783:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  783 |         return BUILDER.CreateCall(fun, socketArgs, "socket_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:786:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  786 |     if (fun->getName() == "bind")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:789:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  789 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:791:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  791 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:791:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  791 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:791:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  791 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:795:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  795 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:795:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:795:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:795:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:799:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  799 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:805:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  805 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:805:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  805 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:805:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  805 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:805:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  805 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:809:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  809 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:811:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  811 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:811:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  811 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:811:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  811 |             bindArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:815:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  815 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:815:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  815 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:815:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  815 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:815:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  815 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:819:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  819 |         return BUILDER.CreateCall(fun, bindArgs, "bind_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:822:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  822 |     if (fun->getName() == "listen")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:825:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  825 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:827:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  827 |             listenArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:827:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  827 |             listenArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:827:66: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  827 |             listenArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:831:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  831 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:831:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  831 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:831:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  831 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:831:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  831 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:835:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  835 |         return BUILDER.CreateCall(fun, listenArgs, "listen_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:838:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  838 |     if (fun->getName() == "accept")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:841:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  841 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:843:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  843 |             acceptArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:843:60: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  843 |             acceptArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:843:66: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  843 |             acceptArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:847:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  847 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:847:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  847 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:847:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  847 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:847:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  847 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:851:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  851 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:857:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  857 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:857:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  857 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:857:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  857 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:857:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  857 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:861:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  861 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:867:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  867 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:867:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  867 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:867:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  867 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:867:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  867 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:871:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  871 |         return BUILDER.CreateCall(fun, acceptArgs, "accept_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:874:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  874 |     if (fun->getName() == "connect")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:877:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  877 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:879:35: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  879 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                   ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:879:61: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  879 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                             ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:879:67: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  879 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:883:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  883 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:883:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:883:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:883:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:887:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  887 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:893:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  893 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:893:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  893 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:893:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  893 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:893:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  893 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:897:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  897 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:899:35: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  899 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                   ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:899:61: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  899 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                             ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:899:67: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  899 |             connectArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:903:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  903 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:903:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  903 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:903:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  903 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:903:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  903 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:907:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  907 |         return BUILDER.CreateCall(fun, connectArgs, "connect_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:910:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  910 |     if (fun->getName() == "send")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:913:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  913 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:915:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  915 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:915:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  915 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:915:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  915 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:919:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  919 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:919:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  919 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:919:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  919 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:919:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  919 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:923:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  923 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:929:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  929 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:929:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  929 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:929:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  929 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:929:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  929 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:933:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  933 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:935:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  935 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:935:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  935 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:935:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  935 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:939:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  939 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:939:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:939:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:939:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:943:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  943 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:945:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  945 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:945:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  945 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:945:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  945 |             sendArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:949:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  949 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:949:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  949 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:949:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  949 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:949:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  949 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:953:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  953 |         return BUILDER.CreateCall(fun, sendArgs, "send_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:956:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  956 |     if (fun->getName() == "recv")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:959:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  959 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:961:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  961 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:961:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  961 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:961:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  961 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:965:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  965 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:965:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  965 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:965:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  965 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:965:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  965 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:969:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  969 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[1]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:975:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  975 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:975:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  975 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:975:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  975 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:975:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  975 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:979:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  979 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[2]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:981:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  981 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:981:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  981 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:981:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  981 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:985:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  985 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:985:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  985 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:985:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  985 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:985:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  985 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:989:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  989 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[3]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:991:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  991 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:991:58: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  991 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:991:64: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  991 |             recvArgs.push_back(ConstantInt::get(LLVMCTX, APInt(32, intExpr->value)));
      |                                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:995:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  995 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:995:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  995 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:995:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  995 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:995:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  995 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:999:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  999 |         return BUILDER.CreateCall(fun, recvArgs, "recv_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1002:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1002 |     if (fun->getName() == "sbrk")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1005:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1005 |         if (auto *intExpr = dynamic_cast<parser::IntegerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1007:32: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1007 |             sbrkArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1007:49: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1007 |             sbrkArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1007:76: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1007 |             sbrkArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1007:82: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1007 |             sbrkArgs.push_back(ConstantInt::get(Type::getInt32Ty(LLVMCTX), APInt(32, intExpr->value)));
      |                                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1009:76: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1009 |         else if (auto *varExpr = dynamic_cast<parser::VarExpr *>(call->args[0]))
      |                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1011:57: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1011 |             if (Value *codeGen = varExpr->codeGen(ctx); isa<IntegerType>(codeGen->getType()))
      |                                                         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1017:35: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
 1017 |                 std::stringstream ss;
      |                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1018:20: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1018 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1018:71: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1018 |                 ss << "invalid arg type: expect Integer32, but get: " << codeGen->getType()->getTypeID();
      |                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1019:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1019 |                 util::err_print(std::cerr, ss.str());
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:163:6: note: resolves to this declaration
  163 | void err_print(std::ostream &stream, const std::string &message);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1025:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1025 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1025:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1025 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1025:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1025 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1025:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1025 |             REPORT_ERROR("invalid arg type: expect Integer32, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1030:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1030 |         return BUILDER.CreateCall(fun, sbrkArgs, "sbrk_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1033:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1033 |     if (fun->getName() == "brk")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1036:75: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1036 |         if (auto *ptrExpr = dynamic_cast<parser::PointerExpr *>(call->args[0]))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1042:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1042 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1042:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1042 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1042:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1042 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1042:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1042 |             REPORT_ERROR("invalid arg type: expect Pointer, but get: unknown", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.cpp:1047:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1047 |         return BUILDER.CreateCall(fun, brkArgs, "brk_calltmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
[10/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/metadata.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:8:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
    8 | namespace dap::inter_gen
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:10:63: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    7 | 
    8 | namespace dap::inter_gen
    9 | {
   10 | StructMetaData::StructMetaData(InterGenContext *context, std::string name) :
      |                                                               ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:11:30: warning: no header providing "std::move" is directly included [misc-include-cleaner]
    7 | 
    8 | namespace dap::inter_gen
    9 | {
   10 | StructMetaData::StructMetaData(InterGenContext *context, std::string name) :
   11 |     ctx(context), name_(std::move(name))
      |                              ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:15:67: warning: no header providing "llvm::Type" is directly included [misc-include-cleaner]
    7 | 
    8 | namespace dap::inter_gen
    9 | {
   10 | StructMetaData::StructMetaData(InterGenContext *context, std::string name) :
   11 |     ctx(context), name_(std::move(name))
   12 | {
   13 | }
   14 | 
   15 | void StructMetaData::addField(const std::string &fieldName, llvm::Type *fieldType)
      |                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:17:12: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |     fields_[fieldName] = fieldType;
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:987:7: note: resolves to this declaration
  987 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:18:19: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     fieldIndexMap_[fieldName] = fields_.size() - 1;
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:987:7: note: resolves to this declaration
  987 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:21:1: warning: no header providing "llvm::StructType" is directly included [misc-include-cleaner]
    7 | 
    8 | namespace dap::inter_gen
    9 | {
   10 | StructMetaData::StructMetaData(InterGenContext *context, std::string name) :
   11 |     ctx(context), name_(std::move(name))
   12 | {
   13 | }
   14 | 
   15 | void StructMetaData::addField(const std::string &fieldName, llvm::Type *fieldType)
   16 | {
   17 |     fields_[fieldName] = fieldType;
   18 |     fieldIndexMap_[fieldName] = fields_.size() - 1;
   19 | }
   20 | 
   21 | StructType *StructMetaData::getStructType() const
      | ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:21:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   21 | StructType *StructMetaData::getStructType() const
      | ~~~~~~~~~~~~                ^                    
      | auto                                              -> StructType *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:23:10: warning: implicit conversion 'StructType *' -> 'bool' [readability-implicit-bool-conversion]
   23 |     if (!structType_)
      |         ~^          
      |                      == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:25:14: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    7 |         std::vector<Type *> fieldTypes;
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:27:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   27 |         for (const auto &[fst, snd] : fields_)
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:27:37: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |         for (const auto &[fst, snd] : fields_)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:497:7: note: resolves to this declaration
  497 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:27:37: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |         for (const auto &[fst, snd] : fields_)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:505:7: note: resolves to this declaration
  505 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:27:37: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |         for (const auto &[fst, snd] : fields_)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:31:23: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   31 |         structType_ = StructType::create(LLVMCTX, fieldTypes, name_);
      |                       ^
/usr/include/llvm/IR/DerivedTypes.h:247:45: note: default parameter was declared here
  247 |                             StringRef Name, bool isPacked = false);
      |                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:31:23: warning: 'create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |         structType_ = StructType::create(LLVMCTX, fieldTypes, name_);
      |                       ^
/usr/include/llvm/IR/DerivedTypes.h:246:22: note: resolves to this declaration
  246 |   static StructType *create(LLVMContext &Context, ArrayRef<Type *> Elements,
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:36:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   36 | unsigned StructMetaData::getFieldIndex(const std::string &fieldName) const
      | ~~~~~~~~                 ^                                                
      | auto                                                                       -> unsigned
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:38:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   38 |     auto it = fieldIndexMap_.find(fieldName);
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:39:12: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   39 |     if (it == fieldIndexMap_.end())
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:41:20: warning: no header providing "std::runtime_error" is directly included [misc-include-cleaner]
    7 |         throw std::runtime_error("Field '" + fieldName + "' not found");
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:41:44: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   41 |         throw std::runtime_error("Field '" + fieldName + "' not found");
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:41:56: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   41 |         throw std::runtime_error("Field '" + fieldName + "' not found");
      |                                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:43:14: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |     return it->second;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:501:7: note: resolves to this declaration
  501 |       operator->() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:51:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   51 | Type *StructMetaData::getFieldType(const std::string &string) const
      | ~~~~~~                ^                                            
      | auto                                                                -> Type *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:56:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   56 | std::string StructMetaData::getName() const
      | ~~~~~~~~~~~                 ^              
      | auto                                        -> std::string
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:63:5: warning: no header providing "llvm::Function" is directly included [misc-include-cleaner]
    7 |     Function *fun = Function::Create(funType, GlobalValue::ExternalLinkage, name_, MODULE);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:63:21: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |     Function *fun = Function::Create(funType, GlobalValue::ExternalLinkage, name_, MODULE);
      |                     ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:63:47: warning: no header providing "llvm::GlobalValue" is directly included [misc-include-cleaner]
    7 |     Function *fun = Function::Create(funType, GlobalValue::ExternalLinkage, name_, MODULE);
      |                                               ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:65:5: warning: no header providing "size_t" is directly included [misc-include-cleaner]
    7 |     size_t idx = 0;
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:66:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   66 |     for (auto &arg : fun->args())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:66:34: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
   66 |     for (auto &arg : fun->args())
      |                                  ^
      |                                   {
   67 |         arg.setName(get<0>(args[idx++]));
      |                                          
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:67:21: warning: 'get<0UL, std::basic_string<char>, llvm::Value *, llvm::Type *, dap::inter_gen::VariableMetaData *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |         arg.setName(get<0>(args[idx++]));
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/tuple:2449:5: note: resolves to this declaration
 2449 |     get(const tuple<_Elements...>& __t) noexcept
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:67:32: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   67 |         arg.setName(get<0>(args[idx++]));
      |                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1147:7: note: resolves to this declaration
 1147 |       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:70:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   70 | VariableMetaData *FunctionMetaData::getReturnMetaData() const
      | ~~~~~~~~~~~~~~~~~~                  ^                        
      | auto                                                          -> VariableMetaData *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:72:12: warning: 'get<1UL, llvm::Value *, dap::inter_gen::VariableMetaData *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   72 |     return get<1>(returnVal);
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/tuple:2449:5: note: resolves to this declaration
 2449 |     get(const tuple<_Elements...>& __t) noexcept
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:75:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   75 | VariableMetaData *FunctionMetaData::getArgMetaData(const std::string &name)
      | ~~~~~~~~~~~~~~~~~~                  ^                                      
      | auto                                                                        -> VariableMetaData *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:77:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   77 |     for (auto val : args)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:77:19: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     for (auto val : args)
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:77:19: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     for (auto val : args)
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:77:19: warning: 'operator==<std::tuple<std::basic_string<char>, llvm::Value *, llvm::Type *, dap::inter_gen::VariableMetaData *> *, std::vector<std::tuple<std::basic_string<char>, llvm::Value *, llvm::Type *, dap::inter_gen::VariableMetaData *>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     for (auto val : args)
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:79:13: warning: 'get<0UL, std::basic_string<char>, llvm::Value *, llvm::Type *, dap::inter_gen::VariableMetaData *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |         if (get<0>(val) == name)
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/tuple:2443:5: note: resolves to this declaration
 2443 |     get(tuple<_Elements...>& __t) noexcept
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:79:25: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |         if (get<0>(val) == name)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:81:20: warning: 'get<3UL, std::basic_string<char>, llvm::Value *, llvm::Type *, dap::inter_gen::VariableMetaData *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |             return get<3>(val);
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/tuple:2443:5: note: resolves to this declaration
 2443 |     get(tuple<_Elements...>& __t) noexcept
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:88:42: warning: no header providing "llvm::Value" is directly included [misc-include-cleaner]
    7 | void FunctionMetaData::setReturnMetaData(Value *value, VariableMetaData *variableMetaData)
      |                                          ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:90:15: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |     returnVal = {value, variableMetaData};
      |               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/tuple:1721:7: note: resolves to this declaration
 1721 |       operator=(tuple&& __u)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:98:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   98 | VariableMetaData *ModuleMetaData::getGlobalValMetaData(const std::string &name)
      | ~~~~~~~~~~~~~~~~~~                ^                                            
      | auto                                                                            -> VariableMetaData *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:104:29: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |     return globalMetaDataMap[name];
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:987:7: note: resolves to this declaration
  987 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:107:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 | bool VariableMetaData::isMutable() const
      | ~~~~                   ^                
      | auto                                     -> bool
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:112:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 | bool VariableMetaData::isNullable() const
      | ~~~~                   ^                 
      | auto                                      -> bool
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:117:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 | std::string VariableMetaData::getName() const
      | ~~~~~~~~~~~                   ^              
      | auto                                          -> std::string
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:122:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  122 | Type * VariableMetaData::getType() const
      | ~~~~~~                   ^              
      | auto                                     -> Type *
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:139:44: warning: parameter 'voidArg' is unused [misc-unused-parameters]
  139 | void VariableMetaData::enterNewScope(void *voidArg, bool newNullable)
      |                                            ^~~~~~~
      |                                             /*voidArg*/
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:145:43: warning: parameter 'newMutable' is unused [misc-unused-parameters]
  145 | void VariableMetaData::enterNewScope(bool newMutable, bool newNullable)
      |                                           ^~~~~~~~~~
      |                                            /*newMutable*/
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:155:5: warning: 'name_' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
  153 |     )
      |      
      |       : name_(std::move(name))
  154 | {
  155 |     name_ = std::move(name);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:155:11: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  155 |     name_ = std::move(name);
      |           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:858:7: note: resolves to this declaration
  858 |       operator=(basic_string&& __str)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:156:5: warning: 'type_' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
  153 |     )
      |      
      |      , type_(type)
  154 | {
  155 |     name_ = std::move(name);
  156 |     type_ = type;
      |     ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: warning: circular header file dependency detected while including 'codegen_inter.h', please check the include path [misc-header-include-cycle]
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: note: 'node.h' included from here
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.cpp:6:10: note: 'codegen_inter.h' included from here
    6 | #include "codegen_inter.h"
      |          ^
[11/21] Building CXX object CMakeFiles/dap_main.dir/src/core/parser/node.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: note: 'codegen_inter.h' included from here
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.cpp:1:10: note: 'node.h' included from here
    1 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.cpp:3:1: warning: included header file_util.h is not used directly [misc-include-cleaner]
    3 | #include "src/core/utilities/file_util.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    4 | 
/home/napbad/tmp/dap/src/core/parser/node.cpp:5:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
    5 | namespace dap::parser
      |           ^
/home/napbad/tmp/dap/src/core/parser/node.cpp:7:6: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    4 | 
    5 | namespace dap::parser
    6 | {
    7 | std::string VarDecl::getName() const
      |      ^
/home/napbad/tmp/dap/src/core/parser/node.cpp:7:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    7 | std::string VarDecl::getName() const
      | ~~~~~~~~~~~          ^              
      | auto                                 -> std::string
/home/napbad/tmp/dap/src/core/parser/node.cpp:12:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   12 | const QualifiedName *VarDecl::getQualifiedName() const
      | ~~~~~~~~~~~~~~~~~~~~~         ^                       
      | auto                                                   -> const QualifiedName *
/home/napbad/tmp/dap/src/core/parser/node.cpp:17:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   17 | const QualifiedName *VarDecl::getType() const
      | ~~~~~~~~~~~~~~~~~~~~~         ^              
      | auto                                          -> const QualifiedName *
/home/napbad/tmp/dap/src/core/parser/node.cpp:22:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   22 | bool Node::isa(const NodeMetaDataType type)
      | ~~~~       ^                               
      | auto                                        -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:27:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   27 | bool QualifiedName::isa(const NodeMetaDataType type)
      | ~~~~                ^                               
      | auto                                                 -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:32:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | bool DoubleExpr::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:37:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   37 | bool IntegerExpr::isa(const NodeMetaDataType type)
      | ~~~~              ^                               
      | auto                                               -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:42:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   42 | bool StringExpr::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:47:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 | bool VarExpr::isa(const NodeMetaDataType type)
      | ~~~~          ^                               
      | auto                                           -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:52:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   52 | bool BinaryExpr::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:57:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   57 | bool UnaryExpr::isa(const NodeMetaDataType type)
      | ~~~~            ^                               
      | auto                                             -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:62:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   62 | bool ListExpr::isa(const NodeMetaDataType type)
      | ~~~~           ^                               
      | auto                                            -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:67:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   67 | bool PointerExpr::isa(const NodeMetaDataType type)
      | ~~~~              ^                               
      | auto                                               -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:72:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   72 | bool ArrayExpr::isa(const NodeMetaDataType type)
      | ~~~~            ^                               
      | auto                                             -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:77:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   77 | bool CallExpr::isa(const NodeMetaDataType type)
      | ~~~~           ^                               
      | auto                                            -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:82:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   82 | bool AssignExpr::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:87:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 | bool ArrayAssignExpr::isa(const NodeMetaDataType type)
      | ~~~~                  ^                               
      | auto                                                   -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:92:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   92 | bool BlockStmt::isa(const NodeMetaDataType type)
      | ~~~~            ^                               
      | auto                                             -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:97:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   97 | bool IncludeStmt::isa(const NodeMetaDataType type)
      | ~~~~              ^                               
      | auto                                               -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:102:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  102 | bool PackageStmt::isa(const NodeMetaDataType type)
      | ~~~~              ^                               
      | auto                                               -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:107:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  107 | bool ExprStmt::isa(const NodeMetaDataType type)
      | ~~~~           ^                               
      | auto                                            -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:112:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  112 | bool ReturnStmt::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:117:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  117 | bool BreakStmt::isa(const NodeMetaDataType type)
      | ~~~~            ^                               
      | auto                                             -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:122:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  122 | bool VarDecl::isa(const NodeMetaDataType type)
      | ~~~~          ^                               
      | auto                                           -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:127:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  127 | bool ProtoDecl::isa(const NodeMetaDataType type)
      | ~~~~            ^                               
      | auto                                             -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:132:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  132 | bool FuncDecl::isa(const NodeMetaDataType type)
      | ~~~~           ^                               
      | auto                                            -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:137:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 | bool ExternDecl::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:142:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  142 | bool Program::isa(const NodeMetaDataType type)
      | ~~~~          ^                               
      | auto                                           -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:147:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 | bool IfStmt::isa(const NodeMetaDataType type)
      | ~~~~         ^                               
      | auto                                          -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:152:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  152 | bool ElifStmt::isa(const NodeMetaDataType type)
      | ~~~~           ^                               
      | auto                                            -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:157:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  157 | bool ForStmt::isa(const NodeMetaDataType type)
      | ~~~~          ^                               
      | auto                                           -> bool
/home/napbad/tmp/dap/src/core/parser/node.cpp:162:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  162 | bool StructDecl::isa(const NodeMetaDataType type)
      | ~~~~             ^                               
      | auto                                              -> bool
/home/napbad/tmp/dap/src/core/parser/node_meta_data.h:12:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   12 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:17:10: note: 'node_meta_data.h' included from here
   17 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.cpp:1:10: note: 'node.h' included from here
    1 | #include "node.h"
      |          ^
[12/21] Building CXX object CMakeFiles/dap_main.dir/src/core/mechine_code_gen/codeGen_mechine.cpp.o
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:6:1: warning: system include string not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <string>
      | ^~~~~~~~~~~~~~~~~
    7 | #include <unordered_map>
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:7:1: warning: system include unordered_map not allowed [llvmlibc-restrict-system-libc-headers]
    7 | #include <unordered_map>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
    8 | #include <unordered_set>
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:8:1: warning: system include unordered_set not allowed [llvmlibc-restrict-system-libc-headers]
    8 | #include <unordered_set>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
    9 | 
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:18:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   18 | void dap::mech_gen::execGen(const std::set<inter_gen::IncludeGraphNode *>& map)
      |                     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:18:40: warning: no header providing "std::set" is directly included [misc-include-cleaner]
    6 | #include <string>
    7 | #include <unordered_map>
    8 | #include <unordered_set>
    9 | 
   10 | #include "src/core/common/global.h"
   11 | #include "codeGen_mechine.h"
   12 | 
   13 | #include "src/core/inter_gen/codegen_inter.h"
   14 | #include "src/core/inter_gen/preprocessing/includeAnaylize.h"
   15 | #include "src/core/utilities/string_util.h"
   16 | 
   17 | 
   18 | void dap::mech_gen::execGen(const std::set<inter_gen::IncludeGraphNode *>& map)
      |                                        ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:24:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   24 |     for (auto &node : map)
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:24:10: warning: 'auto &node' can be declared as 'const auto &node' [readability-qualified-auto]
   24 |     for (auto &node : map)
      |          ^
      |          const 
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:24:21: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:354:7: note: resolves to this declaration
  354 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:24:21: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:362:7: note: resolves to this declaration
  362 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:24:21: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:392:7: note: resolves to this declaration
  392 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:31:14: warning: 'auto &node' can be declared as 'const auto &node' [readability-qualified-auto]
   31 |         for (auto &node : level)
      |              ^
      |              const 
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:31:25: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:31:25: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:31:25: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:33:13: warning: variable 'basic_string' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
   33 |             std::string basic_string = node->getName();
      |             ^
      |                         const 
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:33:25: warning: unused local variable 'basic_string' of type 'std::string' (aka 'basic_string<char>') [bugprone-unused-local-non-trivial-variable]
   33 |             std::string basic_string = node->getName();
      |                         ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:40:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   40 |             for (auto includeBy : node->getIncludedBy())
      |             ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:40:18: warning: 'auto includeBy' can be declared as 'auto *includeBy' [llvm-qualified-auto,readability-qualified-auto]
   40 |             for (auto includeBy : node->getIncludedBy())
      |                  ^~~~
      |                  auto *
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:40:33: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:40:33: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:40:33: warning: 'operator==<dap::inter_gen::IncludeGraphNode **, std::vector<dap::inter_gen::IncludeGraphNode *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:46:9: warning: 'swap<dap::inter_gen::IncludeGraphNode *, std::hash<dap::inter_gen::IncludeGraphNode *>, std::equal_to<dap::inter_gen::IncludeGraphNode *>, std::allocator<dap::inter_gen::IncludeGraphNode *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |         std::swap(level, nextLevel);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_set.h:1799:5: note: resolves to this declaration
 1799 |     swap(unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:46:14: warning: no header providing "std::swap" is directly included [misc-include-cleaner]
    9 |         std::swap(level, nextLevel);
      |              ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:49:25: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   49 |     std::string files = util::getStrFromVec(*filesToCompile, " ");
      |                         ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:49:62: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   49 |     std::string files = util::getStrFromVec(*filesToCompile, " ");
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:5: warning: calling 'system' uses a command processor [cert-env33-c]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:5: warning: function is not thread safe [concurrency-mt-unsafe]
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:5: warning: 'system' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdlib.h:923:12: note: resolves to this declaration
  923 | extern int system (const char *__command) __wur;
      |            ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:5: warning: no header providing "system" is directly included [misc-include-cleaner]
    6 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:19: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:33: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:42: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:53:59: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   53 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:57:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   57 | void dap::mech_gen::execGen_singleFile(inter_gen::InterGenContext *ctx, dap::parser::Program *program)
      |                     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:60:25: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |     std::string files = util::getStrFromVec(*filesToCompile, " ");
      |                         ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:60:62: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   60 |     std::string files = util::getStrFromVec(*filesToCompile, " ");
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:5: warning: calling 'system' uses a command processor [cert-env33-c]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:5: warning: function is not thread safe [concurrency-mt-unsafe]
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:5: warning: 'system' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdlib.h:923:12: note: resolves to this declaration
  923 | extern int system (const char *__command) __wur;
      |            ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:19: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:33: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:42: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:64:59: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     system(("ld " + files + arg + " -o " + targetExecName + " ").c_str());
      |                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: warning: circular header file dependency detected while including 'codegen_inter.h', please check the include path [misc-header-include-cycle]
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: note: 'node.h' included from here
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.cpp:13:10: note: 'codegen_inter.h' included from here
   13 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
[13/21] Building CXX object CMakeFiles/dap_main.dir/src/core/main.cpp.o
/home/napbad/tmp/dap/src/core/main.cpp:3:1: warning: #includes are not sorted properly [llvm-include-order]
    3 | #include <llvm/Pass.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:3:1: warning: system include llvm/Pass.h not allowed [llvmlibc-restrict-system-libc-headers]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:3:1: warning: included header Pass.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:4:1: warning: system include llvm/Bitstream/BitstreamReader.h not allowed [llvmlibc-restrict-system-libc-headers]
    4 | #include <llvm/Bitstream/BitstreamReader.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:4:1: warning: included header BitstreamReader.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:5:1: warning: system include llvm/Support/TargetSelect.h not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <llvm/Support/TargetSelect.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    6 | #include <getopt.h>
/home/napbad/tmp/dap/src/core/main.cpp:6:1: warning: system include getopt.h not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <getopt.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:6:1: warning: included header getopt.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/main.cpp:7:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    7 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
    8 | 
/home/napbad/tmp/dap/src/core/main.cpp:9:1: warning: #includes are not sorted properly [llvm-include-order]
    9 | #include "src/core/inter_gen/codegen_inter.h"
      | ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/common/define_d.h"
   10 | #include "src/core/inter_gen/preprocessing/includeAnaylize.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/common/global.h"
   11 | #include "src/core/mechine_code_gen/codeGen_mechine.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/inter_gen/codegen_inter.h"
   12 | #include "src/core/parser/node.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/inter_gen/preprocessing/includeAnaylize.h"
   13 | #include "src/core/parser/parser.hpp"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/mechine_code_gen/codeGen_mechine.h"
   14 | #include "src/core/utilities/file_util.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/parser/node.h"
   15 | #include "src/core/utilities/obj_util.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/parser/parser.hpp"
   16 | #include "src/core/common/define_d.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/utilities/file_util.h"
   17 | #include "src/core/common/global.h"
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          "src/core/utilities/obj_util.h"
/home/napbad/tmp/dap/src/core/main.cpp:19:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
   19 | using namespace std;
      | ^
/home/napbad/tmp/dap/src/core/main.cpp:19:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   19 | using namespace std;
      |                 ^
/home/napbad/tmp/dap/src/core/main.cpp:20:30: warning: variable 'program' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   20 | extern dap::parser::Program *program;
      |                              ^
/home/napbad/tmp/dap/src/core/main.cpp:20:30: warning: variable 'program' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/main.cpp:20:30: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/main.cpp:21:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
   21 | using namespace dap;
      | ^
/home/napbad/tmp/dap/src/core/main.cpp:21:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   21 | using namespace dap;
      |                 ^
/home/napbad/tmp/dap/src/core/main.cpp:23:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   23 | void openFile(const char *filename)
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:25:5: warning: the value returned by this function should not be disregarded; neglecting it may lead to errors [cert-err33-c]
   25 |     freopen(filename, "r", stdin);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/main.cpp:25:5: note: cast the expression to void to silence this warning
/home/napbad/tmp/dap/src/core/main.cpp:25:5: warning: calling legacy resource function without passing a 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   25 |     freopen(filename, "r", stdin);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/main.cpp:25:5: warning: 'freopen' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/stdio.h:271:14: note: resolves to this declaration
  271 | extern FILE *freopen (const char *__restrict __filename,
      |              ^
/home/napbad/tmp/dap/src/core/main.cpp:25:5: warning: no header providing "freopen" is directly included [misc-include-cleaner]
    3 |     freopen(filename, "r", stdin);
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:28:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   28 | extern void yyrestart(FILE *input_file);
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:28:23: warning: no header providing "FILE" is directly included [misc-include-cleaner]
   28 | extern void yyrestart(FILE *input_file);
      |                       ^
/home/napbad/tmp/dap/src/core/main.cpp:30:12: warning: variable 'yylineno' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   30 | extern int yylineno;
      |            ^
/home/napbad/tmp/dap/src/core/main.cpp:30:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/main.cpp:32:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   32 | int main(const int argc, char **argv)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:32:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | int main(const int argc, char **argv)
      | ~~~ ^                                
      | auto                                  -> int
/home/napbad/tmp/dap/src/core/main.cpp:32:5: warning: function 'main' has cognitive complexity of 28 (threshold 25) [readability-function-cognitive-complexity]
/home/napbad/tmp/dap/src/core/main.cpp:53:5: note: +1, including nesting penalty of 0, nesting level increased to 1
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:55:9: note: +2, including nesting penalty of 1, nesting level increased to 2
   55 |         switch (opt)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:78:13: note: +3, including nesting penalty of 2, nesting level increased to 3
   78 |             if (!buildDir.ends_with("/"))
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:93:5: note: +1, including nesting penalty of 0, nesting level increased to 1
   93 |     if (helpRequested)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:108:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  108 |     if (debugMode)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:115:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  115 |     if (optind < argc)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:119:10: note: +1, nesting level increased to 1
  119 |     else if (inputPath.empty())
      |          ^
/home/napbad/tmp/dap/src/core/main.cpp:130:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  130 |     if (!inputPath.empty())
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:134:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  134 |         if (!infileOrDir.is_open())
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:143:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  143 |     if (compileDir)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:146:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  146 |         for (const auto &file : files)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:148:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  148 |             if (!file.ends_with(".dap"))
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:170:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  170 |         if (genIR)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:174:9: note: +1, nesting level increased to 2
  174 |         else
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:179:5: note: +1, nesting level increased to 1
  179 |     else
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:181:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  181 |         if (argc > 1)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:190:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  190 |         if (genIR)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:192:9: note: +1, nesting level increased to 2
  192 |         else
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:34:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     buildDir = "./build/";
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:35:9: warning: variable 'opt' is not initialized [cppcoreguidelines-init-variables]
   35 |     int opt;
      |         ^  
      |             = 0
/home/napbad/tmp/dap/src/core/main.cpp:43:12: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   43 |     static option long_options[] = {{"help", no_argument, nullptr, 'h'},
      |            ^
/home/napbad/tmp/dap/src/core/main.cpp:43:12: warning: no header providing "option" is directly included [misc-include-cleaner]
    3 |     static option long_options[] = {{"help", no_argument, nullptr, 'h'},
      |            ^
/home/napbad/tmp/dap/src/core/main.cpp:43:46: warning: no header providing "no_argument" is directly included [misc-include-cleaner]
   43 |     static option long_options[] = {{"help", no_argument, nullptr, 'h'},
      |                                              ^
/home/napbad/tmp/dap/src/core/main.cpp:44:51: warning: no header providing "required_argument" is directly included [misc-include-cleaner]
   44 |                                     {"directory", required_argument, nullptr, 'd'},
      |                                                   ^
/home/napbad/tmp/dap/src/core/main.cpp:53:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:53:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'opt' and may cause performance degradation [altera-id-dependent-backward-branch]
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |            ^
/home/napbad/tmp/dap/src/core/main.cpp:35:5: note: inferred assignment of ID-dependent value from ID-dependent 
   35 |     int opt;
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:53:19: warning: function is not thread safe [concurrency-mt-unsafe]
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |                   ^
/home/napbad/tmp/dap/src/core/main.cpp:53:19: warning: 'getopt_long' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/bits/getopt_ext.h:66:12: note: resolves to this declaration
   66 | extern int getopt_long (int ___argc, char *__getopt_argv_const *___argv,
      |            ^
/home/napbad/tmp/dap/src/core/main.cpp:53:19: warning: no header providing "getopt_long" is directly included [misc-include-cleaner]
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |                   ^
/home/napbad/tmp/dap/src/core/main.cpp:53:58: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
   53 |     while ((opt = getopt_long(argc, argv, "n:d:o:ievhD", long_options, nullptr)) != -1)
      |                                                          ^
/home/napbad/tmp/dap/src/core/main.cpp:61:23: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |             inputPath = optarg;
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:61:25: warning: no header providing "optarg" is directly included [misc-include-cleaner]
    3 |             inputPath = optarg;
      |                         ^
/home/napbad/tmp/dap/src/core/main.cpp:71:13: warning: Value stored to 'genExec' is never read [clang-analyzer-deadcode.DeadStores]
   71 |             genExec = true;
      |             ^         ~~~~
/home/napbad/tmp/dap/src/core/main.cpp:71:13: note: Value stored to 'genExec' is never read
   71 |             genExec = true;
      |             ^         ~~~~
/home/napbad/tmp/dap/src/core/main.cpp:74:18: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |             cout << "dap version: " << D_VERSION << endl;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:74:37: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |             cout << "dap version: " << D_VERSION << endl;
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:74:50: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |             cout << "dap version: " << D_VERSION << endl;
      |                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:74:53: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |             cout << "dap version: " << D_VERSION << endl;
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:74:53: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   74 |             cout << "dap version: " << D_VERSION << endl;
      |                                                     ^~~~
      |                                                     '\n'
/home/napbad/tmp/dap/src/core/main.cpp:77:22: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |             buildDir = optarg;
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:84:28: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |             targetExecName = optarg;
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:87:18: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |             cerr << "Invalid option: " << static_cast<char>(opt) << endl;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:87:40: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |             cerr << "Invalid option: " << static_cast<char>(opt) << endl;
      |                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:576:5: note: resolves to this declaration
  576 |     operator<<(basic_ostream<char, _Traits>& __out, char __c)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:87:66: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |             cerr << "Invalid option: " << static_cast<char>(opt) << endl;
      |                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:87:69: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   87 |             cerr << "Invalid option: " << static_cast<char>(opt) << endl;
      |                                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:87:69: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   87 |             cerr << "Invalid option: " << static_cast<char>(opt) << endl;
      |                                                                     ^~~~
      |                                                                     '\n'
/home/napbad/tmp/dap/src/core/main.cpp:88:18: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:88:31: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:88:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                  ^
/home/napbad/tmp/dap/src/core/main.cpp:88:42: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:88:132: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:88:135: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:88:135: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   88 |             cerr << "Usage: " << argv[0] << " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                                                       ^~~~
      |                                                                                                                                       '\n'
/home/napbad/tmp/dap/src/core/main.cpp:95:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         cout << "Usage: " << argv[0] <<
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:95:27: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         cout << "Usage: " << argv[0] <<
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:95:30: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   95 |         cout << "Usage: " << argv[0] <<
      |                              ^
/home/napbad/tmp/dap/src/core/main.cpp:95:38: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         cout << "Usage: " << argv[0] <<
      |                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:96:100: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   96 |             " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:96:103: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   96 |             " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:96:103: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   96 |             " [-h] [-d <directory>] [-D] [-i] [-e] [-o <output_directory>] [-n <executable_name>]" << endl;
      |                                                                                                       ^~~~
      |                                                                                                       '\n'
/home/napbad/tmp/dap/src/core/main.cpp:97:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         cout << "  -h, --help            Show this help message and exit" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:97:75: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         cout << "  -h, --help            Show this help message and exit" << endl;
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:97:78: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         cout << "  -h, --help            Show this help message and exit" << endl;
      |                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:97:78: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   97 |         cout << "  -h, --help            Show this help message and exit" << endl;
      |                                                                              ^~~~
      |                                                                              '\n'
/home/napbad/tmp/dap/src/core/main.cpp:98:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |         cout << "  -d, --directory       Compile the specified directory" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:98:75: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |         cout << "  -d, --directory       Compile the specified directory" << endl;
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:98:78: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   98 |         cout << "  -d, --directory       Compile the specified directory" << endl;
      |                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:98:78: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   98 |         cout << "  -d, --directory       Compile the specified directory" << endl;
      |                                                                              ^~~~
      |                                                                              '\n'
/home/napbad/tmp/dap/src/core/main.cpp:99:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         cout << "  -D, --debug           Enable debug mode" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:99:61: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         cout << "  -D, --debug           Enable debug mode" << endl;
      |                                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:99:64: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         cout << "  -D, --debug           Enable debug mode" << endl;
      |                                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:99:64: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
   99 |         cout << "  -D, --debug           Enable debug mode" << endl;
      |                                                                ^~~~
      |                                                                '\n'
/home/napbad/tmp/dap/src/core/main.cpp:100:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         cout << "  -i, --generate-ir     Generate LLVM IR" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:100:60: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         cout << "  -i, --generate-ir     Generate LLVM IR" << endl;
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:100:63: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |         cout << "  -i, --generate-ir     Generate LLVM IR" << endl;
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:100:63: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  100 |         cout << "  -i, --generate-ir     Generate LLVM IR" << endl;
      |                                                               ^~~~
      |                                                               '\n'
/home/napbad/tmp/dap/src/core/main.cpp:101:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         cout << "  -e, --generate-exec   Generate executable" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:101:63: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         cout << "  -e, --generate-exec   Generate executable" << endl;
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:101:66: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         cout << "  -e, --generate-exec   Generate executable" << endl;
      |                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:101:66: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  101 |         cout << "  -e, --generate-exec   Generate executable" << endl;
      |                                                                  ^~~~
      |                                                                  '\n'
/home/napbad/tmp/dap/src/core/main.cpp:102:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         cout << "  -v, --version         Print version information and exit" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:102:78: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         cout << "  -v, --version         Print version information and exit" << endl;
      |                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:102:81: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  102 |         cout << "  -v, --version         Print version information and exit" << endl;
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:102:81: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |         cout << "  -v, --version         Print version information and exit" << endl;
      |                                                                                 ^~~~
      |                                                                                 '\n'
/home/napbad/tmp/dap/src/core/main.cpp:103:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         cout << "  -o, --output          Specify the output directory" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:103:72: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         cout << "  -o, --output          Specify the output directory" << endl;
      |                                                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:103:75: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         cout << "  -o, --output          Specify the output directory" << endl;
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:103:75: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  103 |         cout << "  -o, --output          Specify the output directory" << endl;
      |                                                                           ^~~~
      |                                                                           '\n'
/home/napbad/tmp/dap/src/core/main.cpp:104:14: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |         cout << "  -n, --output-exec-name Specify the name of the generated executable" << endl;
      |              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:104:89: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |         cout << "  -n, --output-exec-name Specify the name of the generated executable" << endl;
      |                                                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:104:92: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |         cout << "  -n, --output-exec-name Specify the name of the generated executable" << endl;
      |                                                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:104:92: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  104 |         cout << "  -n, --output-exec-name Specify the name of the generated executable" << endl;
      |                                                                                            ^~~~
      |                                                                                            '\n'
/home/napbad/tmp/dap/src/core/main.cpp:111:9: warning: 'dbg_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |         dbg_print(cout, "====== DEBUG MODE IS ON ======\n", dap::util::FileColor::BRIGHT_MAGENTA);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:126:6: note: resolves to this declaration
  126 | void dbg_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:111:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  111 |         dbg_print(cout, "====== DEBUG MODE IS ON ======\n", dap::util::FileColor::BRIGHT_MAGENTA);
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/main.cpp:115:9: warning: no header providing "optind" is directly included [misc-include-cleaner]
  115 |     if (optind < argc)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:117:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  117 |         inputPath = argv[optind];
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:117:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  117 |         inputPath = argv[optind];
      |                     ^
/home/napbad/tmp/dap/src/core/main.cpp:121:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  121 |         inputPath = "main.dap";
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:828:7: note: resolves to this declaration
  828 |       operator=(const _CharT* __s)
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:124:5: warning: 'InitializeAllTargetInfos' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |     InitializeAllTargetInfos();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:56:15: note: resolves to this declaration
   56 |   inline void InitializeAllTargetInfos() {
      |               ^
/home/napbad/tmp/dap/src/core/main.cpp:125:5: warning: 'InitializeAllTargets' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |     InitializeAllTargets();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:66:15: note: resolves to this declaration
   66 |   inline void InitializeAllTargets() {
      |               ^
/home/napbad/tmp/dap/src/core/main.cpp:126:5: warning: 'InitializeAllTargetMCs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |     InitializeAllTargetMCs();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:79:15: note: resolves to this declaration
   79 |   inline void InitializeAllTargetMCs() {
      |               ^
/home/napbad/tmp/dap/src/core/main.cpp:127:5: warning: 'InitializeAllAsmParsers' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  127 |     InitializeAllAsmParsers();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:99:15: note: resolves to this declaration
   99 |   inline void InitializeAllAsmParsers() {
      |               ^
/home/napbad/tmp/dap/src/core/main.cpp:128:5: warning: 'InitializeAllAsmPrinters' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     InitializeAllAsmPrinters();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:89:15: note: resolves to this declaration
   89 |   inline void InitializeAllAsmPrinters() {
      |               ^
/home/napbad/tmp/dap/src/core/main.cpp:132:9: warning: no header providing "std::ifstream" is directly included [misc-include-cleaner]
    3 |         ifstream infileOrDir;
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:133:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  133 |         infileOrDir.open(inputPath);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/fstream:737:36: note: default parameter was declared here
  737 |       open(const std::string& __s, ios_base::openmode __mode = ios_base::in)
      |                                    ^
/home/napbad/tmp/dap/src/core/main.cpp:136:18: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  136 |             cerr << "Error: Unable to open file or directory: " << inputPath << endl;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:136:65: warning: 'operator<<<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  136 |             cerr << "Error: Unable to open file or directory: " << inputPath << endl;
      |                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4077:5: note: resolves to this declaration
 4077 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:136:78: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  136 |             cerr << "Error: Unable to open file or directory: " << inputPath << endl;
      |                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:116:7: note: resolves to this declaration
  116 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:136:81: warning: 'endl<char, std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  136 |             cerr << "Error: Unable to open file or directory: " << inputPath << endl;
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:741:5: note: resolves to this declaration
  741 |     endl(basic_ostream<_CharT, _Traits>& __os)
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:136:81: warning: do not use 'endl' with streams; use '\n' instead [performance-avoid-endl]
  136 |             cerr << "Error: Unable to open file or directory: " << inputPath << endl;
      |                                                                                 ^~~~
      |                                                                                 '\n'
/home/napbad/tmp/dap/src/core/main.cpp:141:5: warning: 'delete_directory' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  141 |     util::delete_directory(buildDir);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:226:6: note: resolves to this declaration
  226 | void delete_directory(const std::string &dir_path);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:145:9: warning: variable 'files' of type 'std::vector<std::string>' (aka 'vector<basic_string<char>>') can be declared 'const' [misc-const-correctness]
  145 |         std::vector<std::string> files = util::get_all_files_in_dir(inputPath);
      |         ^
      |                                  const 
/home/napbad/tmp/dap/src/core/main.cpp:145:14: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    8 |         std::vector<std::string> files = util::get_all_files_in_dir(inputPath);
      |              ^
/home/napbad/tmp/dap/src/core/main.cpp:145:42: warning: 'get_all_files_in_dir' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         std::vector<std::string> files = util::get_all_files_in_dir(inputPath);
      |                                          ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:213:26: note: resolves to this declaration
  213 | std::vector<std::string> get_all_files_in_dir(const std::string &dir_path);
      |                          ^
/home/napbad/tmp/dap/src/core/main.cpp:146:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  146 |         for (const auto &file : files)
      |         ^
/home/napbad/tmp/dap/src/core/main.cpp:146:31: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  146 |         for (const auto &file : files)
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:146:31: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  146 |         for (const auto &file : files)
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/main.cpp:146:31: warning: 'operator==<std::basic_string<char> *, std::vector<std::basic_string<char>>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  146 |         for (const auto &file : files)
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:153:13: warning: variable 'info' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
  153 |             std::string info = "Parsing file: " + file;
      |             ^
      |                         const 
/home/napbad/tmp/dap/src/core/main.cpp:153:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  153 |             std::string info = "Parsing file: " + file;
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:154:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  154 |             LOG_DEBUG(info);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:33: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/main.cpp:154:13: warning: 'dbg_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             LOG_DEBUG(info);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:5: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:126:6: note: resolves to this declaration
  126 | void dbg_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:154:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             LOG_DEBUG(info);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:51: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:156:13: warning: 'yyrestart' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  156 |             yyrestart(fopen(file.c_str(), "r"));
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:28:13: note: resolves to this declaration
   28 | extern void yyrestart(FILE *input_file);
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:156:23: warning: initializing non-owner argument of type 'FILE *' (aka '_IO_FILE *') with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  156 |             yyrestart(fopen(file.c_str(), "r"));
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/main.cpp:156:23: warning: no header providing "fopen" is directly included [misc-include-cleaner]
/home/napbad/tmp/dap/src/core/main.cpp:156:43: warning: use 'fopen' mode 'e' to set O_CLOEXEC [android-cloexec-fopen]
  156 |             yyrestart(fopen(file.c_str(), "r"));
      |                                           ^~~
      |                                           "re"
/home/napbad/tmp/dap/src/core/main.cpp:159:13: warning: 'openFile' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  159 |             openFile(file.c_str());
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:23:6: note: resolves to this declaration
   23 | void openFile(const char *filename)
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:161:13: warning: 'yyparse' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |             yyparse();
      |             ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:152:5: note: resolves to this declaration
  152 | int yyparse (void);
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:166:9: warning: 'copy_directory' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:199:6: note: resolves to this declaration
  199 | void copy_directory(const std::string &source_dir, const std::string &destination_dir);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:166:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  166 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/main.cpp:166:65: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:167:9: warning: initializing non-owner 'dap::inter_gen::IncludeAnalyzer *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  167 |         auto includeAnalyzer = new dap::inter_gen::IncludeAnalyzer();
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/main.cpp:167:9: warning: 'auto includeAnalyzer' can be declared as 'auto *includeAnalyzer' [llvm-qualified-auto,readability-qualified-auto]
  167 |         auto includeAnalyzer = new dap::inter_gen::IncludeAnalyzer();
      |         ^~~~
      |         auto *
/home/napbad/tmp/dap/src/core/main.cpp:169:9: warning: variable 'roots' of type 'std::set<inter_gen::IncludeGraphNode *>' can be declared 'const' [misc-const-correctness]
  169 |         std::set<inter_gen::IncludeGraphNode *> roots = includeAnalyzer->getRoots();
      |         ^
      |                                                 const 
/home/napbad/tmp/dap/src/core/main.cpp:169:14: warning: no header providing "std::set" is directly included [misc-include-cleaner]
    8 |         std::set<inter_gen::IncludeGraphNode *> roots = includeAnalyzer->getRoots();
      |              ^
/home/napbad/tmp/dap/src/core/main.cpp:172:13: warning: 'interGen' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  172 |             interGen(roots);
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:253:6: note: resolves to this declaration
  253 | void interGen(const std::set<IncludeGraphNode*>& map);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:176:13: warning: 'execGen' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  176 |             mech_gen::execGen(roots);
      |             ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.h:23:6: note: resolves to this declaration
   23 | void execGen(const std::set<dap::inter_gen::IncludeGraphNode *>& map);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:183:13: warning: 'openFile' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |             openFile(inputPath.c_str());
      |             ^
/home/napbad/tmp/dap/src/core/main.cpp:23:6: note: resolves to this declaration
   23 | void openFile(const char *filename)
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:185:9: warning: 'copy_directory' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  185 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:199:6: note: resolves to this declaration
  199 | void copy_directory(const std::string &source_dir, const std::string &destination_dir);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:185:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  185 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/main.cpp:185:65: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  185 |         util::copy_directory("../src/dap/runtime/asm", buildDir + "dap/runtime/asm");
      |                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:188:9: warning: 'yyparse' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |         yyparse();
      |         ^
/home/napbad/tmp/dap/src/core/parser/parser.hpp:152:5: note: resolves to this declaration
  152 | int yyparse (void);
      |     ^
/home/napbad/tmp/dap/src/core/main.cpp:190:19: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  190 |         if (genIR)
      |                   ^
      |                    {
  191 |             ctx->genIR(program);
  192 |         else
      |         } 
/home/napbad/tmp/dap/src/core/main.cpp:194:13: warning: 'execGen_singleFile' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |             mech_gen::execGen_singleFile(ctx, program);
      |             ^
/home/napbad/tmp/dap/src/core/mechine_code_gen/codeGen_mechine.h:24:6: note: resolves to this declaration
   24 | void execGen_singleFile(inter_gen::InterGenContext * ctx, dap::parser::Program * program);
      |      ^
/home/napbad/tmp/dap/src/core/main.cpp:198:5: warning: 'deleteDelayedObj' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  198 |     obj_util::deleteDelayedObj();
      |     ^
/home/napbad/tmp/dap/src/core/utilities/obj_util.h:32:6: note: resolves to this declaration
   32 | void deleteDelayedObj();
      |      ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: warning: circular header file dependency detected while including 'codegen_inter.h', please check the include path [misc-header-include-cycle]
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: note: 'node.h' included from here
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/main.cpp:9:10: note: 'codegen_inter.h' included from here
    9 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
[14/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/check/variableCheck.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:7:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
    7 | bool dap::inter_gen::isNullable(parser::Expr *valToCheck, InterGenContext *ctx)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:7:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    7 | bool dap::inter_gen::isNullable(parser::Expr *valToCheck, InterGenContext *ctx)
      | ~~~~                 ^                                                         
      | auto                                                                            -> bool
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:7:41: warning: no header providing "dap::parser::Expr" is directly included [misc-include-cleaner]
    6 | 
    7 | bool dap::inter_gen::isNullable(parser::Expr *valToCheck, InterGenContext *ctx)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:7:59: warning: no header providing "dap::inter_gen::InterGenContext" is directly included [misc-include-cleaner]
    6 | 
    7 | bool dap::inter_gen::isNullable(parser::Expr *valToCheck, InterGenContext *ctx)
      |                                                           ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:9:33: warning: no header providing "dap::parser::NodeMetaDataType" is directly included [misc-include-cleaner]
    6 | 
    7 | bool dap::inter_gen::isNullable(parser::Expr *valToCheck, InterGenContext *ctx)
    8 | {
    9 |     if (valToCheck->isa(parser::NodeMetaDataType::VarExpr))
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:11:53: warning: no header providing "dap::parser::VarExpr" is directly included [misc-include-cleaner]
   11 |         const auto * varExpr = dynamic_cast<parser::VarExpr*>(valToCheck);
      |                                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:21:54: warning: no header providing "dap::parser::CallExpr" is directly included [misc-include-cleaner]
   21 |         const auto * callExpr = dynamic_cast<parser::CallExpr*>(valToCheck);
      |                                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.cpp:22:9: warning: no header providing "dap::inter_gen::FunctionMetaData" is directly included [misc-include-cleaner]
    6 |         FunctionMetaData * functionMetaData = ctx->metaData->getFunction(callExpr->callee->getName());
      |         ^
[15/21] Building CXX object CMakeFiles/dap_main.dir/src/core/utilities/llvm_util.cpp.o
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:6:1: warning: #includes are not sorted properly [llvm-include-order]
    6 | #include <unordered_map>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:6:1: warning: system include unordered_map not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <unordered_map>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
    7 | #include "llvm_util.h"
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:9:1: warning: #includes are not sorted properly [llvm-include-order]
    9 | #include "src/core/common/derived_type.h"
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:10:1: warning: included header global.h is not used directly [misc-include-cleaner]
   10 | #include "src/core/common/global.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   11 | #include "src/core/common/reserve.h"
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:14:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   14 | namespace dap::util
      |           ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      | ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:38: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    6 | #include <unordered_map>
    7 | #include "llvm_util.h"
    8 | 
    9 | #include "src/core/common/derived_type.h"
   10 | #include "src/core/common/global.h"
   11 | #include "src/core/common/reserve.h"
   12 | #include "data_struct_util.h"
   13 | #include "file_util.h"
   14 | namespace dap::util
   15 | {
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:51: warning: no header providing "std::function" is directly included [misc-include-cleaner]
    6 | #include <unordered_map>
    7 | #include "llvm_util.h"
    8 | 
    9 | #include "src/core/common/derived_type.h"
   10 | #include "src/core/common/global.h"
   11 | #include "src/core/common/reserve.h"
   12 | #include "data_struct_util.h"
   13 | #include "file_util.h"
   14 | namespace dap::util
   15 | {
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                                   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:60: warning: no header providing "llvm::Type" is directly included [misc-include-cleaner]
    6 | #include <unordered_map>
    7 | #include "llvm_util.h"
    8 | 
    9 | #include "src/core/common/derived_type.h"
   10 | #include "src/core/common/global.h"
   11 | #include "src/core/common/reserve.h"
   12 | #include "data_struct_util.h"
   13 | #include "file_util.h"
   14 | namespace dap::util
   15 | {
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                                            ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:67: warning: no header providing "llvm::LLVMContext" is directly included [misc-include-cleaner]
    6 | #include <unordered_map>
    7 | #include "llvm_util.h"
    8 | 
    9 | #include "src/core/common/derived_type.h"
   10 | #include "src/core/common/global.h"
   11 | #include "src/core/common/reserve.h"
   12 | #include "data_struct_util.h"
   13 | #include "file_util.h"
   14 | namespace dap::util
   15 | {
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                                                   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:84: warning: initialization of 'typeMap' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:234:7: note: possibly throwing constructor declared here
  234 |       unordered_map(initializer_list<value_type> __l,
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:16:94: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   16 | static const std::unordered_map<std::string, std::function<Type *(LLVMContext &)>> typeMap = {
      |                                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:235:7: note: default parameter was declared here
  235 |                     size_type __n = 0,
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:17:14: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   17 |     {"int", &Type::getInt32Ty},
      |              ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:18:15: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     {"byte", &Type::getInt8Ty},
      |               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:19:16: warning: 'getInt16Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   19 |     {"short", &Type::getInt16Ty},
      |                ^
/usr/include/llvm/IR/Type.h:462:23: note: resolves to this declaration
  462 |   static IntegerType *getInt16Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:20:15: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |     {"long", &Type::getInt64Ty},
      |               ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:21:15: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |     {"char", &Type::getInt8Ty},
      |               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:22:16: warning: 'getFloatTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   22 |     {"float", &Type::getFloatTy},
      |                ^
/usr/include/llvm/IR/Type.h:450:16: note: resolves to this declaration
  450 |   static Type *getFloatTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:23:46: warning: 'getPointerOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     {"string", [](LLVMContext &ctx) { return getPointerOf(Type::getInt8Ty(ctx)); }},
      |                                              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:19:7: note: resolves to this declaration
   19 | Type *getPointerOf(Type *type);
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:23:59: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     {"string", [](LLVMContext &ctx) { return getPointerOf(Type::getInt8Ty(ctx)); }},
      |                                                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:24:15: warning: 'getInt1Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   24 |     {"bool", &Type::getInt1Ty},
      |               ^
/usr/include/llvm/IR/Type.h:460:23: note: resolves to this declaration
  460 |   static IntegerType *getInt1Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:25:15: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   25 |     {"uint", &Type::getInt32Ty},
      |               ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:26:17: warning: 'getInt16Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   26 |     {"ushort", &Type::getInt16Ty},
      |                 ^
/usr/include/llvm/IR/Type.h:462:23: note: resolves to this declaration
  462 |   static IntegerType *getInt16Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:27:16: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   27 |     {"ulong", &Type::getInt64Ty},
      |                ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:28:16: warning: 'getInt128Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |     {"llong", &Type::getInt128Ty},
      |                ^
/usr/include/llvm/IR/Type.h:465:23: note: resolves to this declaration
  465 |   static IntegerType *getInt128Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:29:17: warning: 'getInt128Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   29 |     {"ullong", &Type::getInt128Ty},
      |                 ^
/usr/include/llvm/IR/Type.h:465:23: note: resolves to this declaration
  465 |   static IntegerType *getInt128Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:30:17: warning: 'getDoubleTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   30 |     {"double", &Type::getDoubleTy}};
      |                 ^
/usr/include/llvm/IR/Type.h:451:16: note: resolves to this declaration
  451 |   static Type *getDoubleTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: warning: function 'typeOf' is within a recursive call chain [misc-no-recursion]
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: example recursive call chain, starting from function 'typeOf'
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:43:29: note: Frame #1: function 'typeOf' calls function 'typeOf' here:
   43 |         return getPointerOf(typeOf(parser::QualifiedName(&vec), ctx, nullptr));
      |                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:43:29: note: ... which was the starting point of the recursive call chain; there may be other cycles
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      | ~~~~~~^                                                                                                   
      | auto                                                                                                       -> Type *
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:28: warning: no header providing "dap::parser::QualifiedName" is directly included [misc-include-cleaner]
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |                            ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:66: warning: no header providing "dap::inter_gen::InterGenContext" is directly included [misc-include-cleaner]
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |                                                                  ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:96: warning: no header providing "dap::parser::Expr" is directly included [misc-include-cleaner]
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |                                                                                                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:34:81: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |     if (type.name_parts == nullptr || type.name_parts->empty() || type.getName()=="void")
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:36:16: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   36 |         return Type::getVoidTy(LLVMCTX);
      |                ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:36:32: warning: no header providing "LLVMCTX" is directly included [misc-include-cleaner]
   36 |         return Type::getVoidTy(LLVMCTX);
      |                                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:39:33: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   39 |     if (type.name_parts->back() == D_POINTER_SUFIX)
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:41:20: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    7 |         const std::vector<std::string> *nameParts = type.name_parts;
      |                    ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:42:40: warning: 'getSubVector<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   42 |         std::vector<std::string> vec = getSubVector(*nameParts, 0, type.name_parts->size() - 1);
      |                                        ^
/home/napbad/tmp/dap/src/core/utilities/data_struct_util.h:12:38: note: resolves to this declaration
   12 | template <typename T> std::vector<T> getSubVector(const std::vector<T> &vec, size_t start, size_t end)
      |                                      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:43:16: warning: 'getPointerOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         return getPointerOf(typeOf(parser::QualifiedName(&vec), ctx, nullptr));
      |                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:19:7: note: resolves to this declaration
   19 | Type *getPointerOf(Type *type);
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:43:29: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         return getPointerOf(typeOf(parser::QualifiedName(&vec), ctx, nullptr));
      |                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:46:33: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |     if (type.name_parts->back() == D_ARR_SUFIX)
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:48:23: warning: no header providing "dap::parser::IntegerExpr" is directly included [misc-include-cleaner]
   48 |         const parser::IntegerExpr *integerExpr = dynamic_cast<parser::IntegerExpr *>(size);
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:51:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   51 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:51:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:51:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:51:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:52:20: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |             return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), 1);
      |                    ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:52:20: warning: no header providing "llvm::ArrayType" is directly included [misc-include-cleaner]
    6 |             return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), 1);
      |                    ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:52:35: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   52 |             return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), 1);
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:54:16: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |         return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), integerExpr->value);
      |                ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:54:31: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   54 |         return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), integerExpr->value);
      |                               ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:56:20: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   56 |     if (const auto it = typeMap.find(type.getName()); it != typeMap.end())
      |                    ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:56:58: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |     if (const auto it = typeMap.find(type.getName()); it != typeMap.end())
      |                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:58:18: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |         return it->second(LLVMCTX);
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:501:7: note: resolves to this declaration
  501 |       operator->() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:58:26: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   58 |         return it->second(LLVMCTX);
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/std_function.h:587:7: note: resolves to this declaration
  587 |       operator()(_ArgTypes... __args) const
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:62:9: warning: no header providing "llvm::StructType" is directly included [misc-include-cleaner]
   62 |     if (StructType *structType = StructType::getTypeByName(LLVMCTX, type.getName()))
      |         ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:62:34: warning: 'getTypeByName' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   62 |     if (StructType *structType = StructType::getTypeByName(LLVMCTX, type.getName()))
      |                                  ^
/usr/include/llvm/IR/DerivedTypes.h:276:22: note: resolves to this declaration
  276 |   static StructType *getTypeByName(LLVMContext &C, StringRef Name);
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:70:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   70 | Type *typeOf_d(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      | ~~~~~~^                                                                                                     
      | auto                                                                                                         -> Type *
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:74:16: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |         return Type::getVoidTy(LLVMCTX);
      |                ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:77:33: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |     if (type.name_parts->back() == D_POINTER_SUFIX)
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:80:40: warning: 'getSubVector<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   80 |         std::vector<std::string> vec = getSubVector(*nameParts, 0, type.name_parts->size() - 1);
      |                                        ^
/home/napbad/tmp/dap/src/core/utilities/data_struct_util.h:12:38: note: resolves to this declaration
   12 | template <typename T> std::vector<T> getSubVector(const std::vector<T> &vec, size_t start, size_t end)
      |                                      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:81:16: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |         return PointerType_d::get(LLVMCTX, typeOf(parser::QualifiedName(&vec), ctx, nullptr));
      |                ^
/home/napbad/tmp/dap/src/core/common/derived_type.h:20:27: note: resolves to this declaration
   20 |     static PointerType_d *get(LLVMContext &ctx, Type *baseTy)
      |                           ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:81:44: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   81 |         return PointerType_d::get(LLVMCTX, typeOf(parser::QualifiedName(&vec), ctx, nullptr));
      |                                            ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:84:33: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   84 |     if (type.name_parts->back() == D_ARR_SUFIX)
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:89:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   89 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:89:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:89:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:89:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   89 |             REPORT_ERROR("array size must be integer", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:90:20: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |             return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), 1);
      |                    ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:90:35: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   90 |             return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), 1);
      |                                   ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:92:16: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |         return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), integerExpr->value);
      |                ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:92:31: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |         return ArrayType::get(typeOf(parser::QualifiedName(type.getName(0)), ctx, nullptr), integerExpr->value);
      |                               ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:32:7: note: resolves to this declaration
   32 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:94:20: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   94 |     if (const auto it = typeMap.find(type.getName()); it != typeMap.end())
      |                    ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:94:58: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |     if (const auto it = typeMap.find(type.getName()); it != typeMap.end())
      |                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:96:18: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   96 |         return it->second(LLVMCTX);
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:501:7: note: resolves to this declaration
  501 |       operator->() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:96:26: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   96 |         return it->second(LLVMCTX);
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/std_function.h:587:7: note: resolves to this declaration
  587 |       operator()(_ArgTypes... __args) const
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:100:34: warning: 'getTypeByName' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |     if (StructType *structType = StructType::getTypeByName(LLVMCTX, type.getName()))
      |                                  ^
/usr/include/llvm/IR/DerivedTypes.h:276:22: note: resolves to this declaration
  276 |   static StructType *getTypeByName(LLVMContext &C, StringRef Name);
      |                      ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:108:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  108 | inline Type *getPointerOf(Type *type)
      |        ~~~~~~^                       
      |        auto                           -> Type *
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:110:5: warning: no header providing "llvm::PointerType" is directly included [misc-include-cleaner]
  110 |     PointerType *pointer = PointerType::get(type, 0);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:110:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  110 |     PointerType *pointer = PointerType::get(type, 0);
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/invoke.h:61:14: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
      |              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:23:16: note: resolves to this declaration
   23 |     {"string", [](LLVMContext &ctx) { return getPointerOf(Type::getInt8Ty(ctx)); }},
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/type_traits:2640:7: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2640 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:23:16: note: resolves to this declaration
   23 |     {"string", [](LLVMContext &ctx) { return getPointerOf(Type::getInt8Ty(ctx)); }},
      |                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/type_traits:3108:23: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 3108 |       return noexcept(std::declval<_Fn>()(std::declval<_Args>()...));
      |                       ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.cpp:23:16: note: resolves to this declaration
   23 |     {"string", [](LLVMContext &ctx) { return getPointerOf(Type::getInt8Ty(ctx)); }},
      |                ^
[16/21] Building CXX object CMakeFiles/dap_main.dir/src/core/parser/tokens.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: note: 'codegen_inter.h' included from here
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:523:10: note: 'node.h' included from here
  523 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.h:12:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   12 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:17:10: note: 'node_meta_data.h' included from here
   17 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:523:10: note: 'node.h' included from here
  523 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:10:9: warning: macro 'YY_FLEX_MAJOR_VERSION' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   10 | #define YY_FLEX_MAJOR_VERSION 2
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:11:9: warning: macro 'YY_FLEX_MINOR_VERSION' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   11 | #define YY_FLEX_MINOR_VERSION 6
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:12:9: warning: macro 'YY_FLEX_SUBMINOR_VERSION' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
   12 | #define YY_FLEX_SUBMINOR_VERSION 4
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:20:1: warning: #includes are not sorted properly [llvm-include-order]
   20 | #include <stdio.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:20:1: warning: system include stdio.h not allowed [llvmlibc-restrict-system-libc-headers]
   20 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   21 | #include <string.h>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:20:10: warning: inclusion of deprecated C++ header 'stdio.h'; consider using 'cstdio' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   20 | #include <stdio.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:21:1: warning: system include string.h not allowed [llvmlibc-restrict-system-libc-headers]
   21 | #include <string.h>
      | ^~~~~~~~~~~~~~~~~~~
   22 | #include <errno.h>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:21:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   21 | #include <string.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:22:1: warning: system include errno.h not allowed [llvmlibc-restrict-system-libc-headers]
   22 | #include <errno.h>
      | ^~~~~~~~~~~~~~~~~~
   23 | #include <stdlib.h>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:22:10: warning: inclusion of deprecated C++ header 'errno.h'; consider using 'cerrno' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   22 | #include <errno.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:23:1: warning: system include stdlib.h not allowed [llvmlibc-restrict-system-libc-headers]
   23 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   24 | 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:23:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [hicpp-deprecated-headers,modernize-deprecated-headers]
   23 | #include <stdlib.h>
      |          ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   51 | typedef signed char flex_int8_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_int8_t = signed char
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:51:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   51 | typedef signed char flex_int8_t;
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:52:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   52 | typedef short int flex_int16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_int16_t = short
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:52:9: warning: consider replacing 'short' with 'int16' [google-runtime-int]
   52 | typedef short int flex_int16_t;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:52:19: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   52 | typedef short int flex_int16_t;
      |                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   53 | typedef int flex_int32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_int32_t = int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:53:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   53 | typedef int flex_int32_t;
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   54 | typedef unsigned char flex_uint8_t; 
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_uint8_t = unsigned char
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:54:23: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   54 | typedef unsigned char flex_uint8_t; 
      |                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   55 | typedef unsigned short int flex_uint16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_uint16_t = unsigned short
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:55:9: warning: consider replacing 'unsigned short' with 'uint16' [google-runtime-int]
   55 | typedef unsigned short int flex_uint16_t;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:55:28: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   55 | typedef unsigned short int flex_uint16_t;
      |                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   56 | typedef unsigned int flex_uint32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using flex_uint32_t = unsigned int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:56:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
   56 | typedef unsigned int flex_uint32_t;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:107:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  107 | #define YY_NULL 0
      | ^~~~~~~
      |                 =
  108 | 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:107:9: warning: macro 'YY_NULL' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  107 | #define YY_NULL 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:107:9: warning: macro 'YY_NULL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:112:9: warning: function-like macro 'YY_SC_TO_UI' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  112 | #define YY_SC_TO_UI(c) ((YY_CHAR) (c))
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:126:9: warning: function-like macro 'YY_STATE_EOF' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  126 | #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:126:49: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  126 | #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
      |                                                 ^
      |                                                 (    )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:129:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  129 | #define YY_END_OF_BUFFER_CHAR 0
      | ^~~~~~~
      |                               =
  130 | 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:129:9: warning: macro 'YY_END_OF_BUFFER_CHAR' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  129 | #define YY_END_OF_BUFFER_CHAR 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:129:9: warning: macro 'YY_END_OF_BUFFER_CHAR' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:140:9: warning: macro 'YY_BUF_SIZE' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  140 | #define YY_BUF_SIZE 16384
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:150:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  150 | typedef struct yy_buffer_state *YY_BUFFER_STATE;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using YY_BUFFER_STATE = struct yy_buffer_state *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:150:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  150 | typedef struct yy_buffer_state *YY_BUFFER_STATE;
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:150:33: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  150 | typedef struct yy_buffer_state *YY_BUFFER_STATE;
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:155:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  155 | typedef size_t yy_size_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~
      | using yy_size_t = size_t
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:155:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  155 | typedef size_t yy_size_t;
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:158:12: warning: variable 'yyleng' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  158 | extern int yyleng;
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:158:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:14: warning: variable 'yyin' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  160 | extern FILE *yyin, *yyout;
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:14: warning: variable 'yyin' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:21: warning: variable 'yyout' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  160 | extern FILE *yyin, *yyout;
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:21: warning: variable 'yyout' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:160:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:162:1: warning: replace macro with enum [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  162 | #define EOB_ACT_CONTINUE_SCAN 0
      | ^~~~~~~                        
      |                               =,
  163 | #define EOB_ACT_END_OF_FILE 1
      | ~~~~~~~                      
      |                             =,
  164 | #define EOB_ACT_LAST_MATCH 2
      | ~~~~~~~
      |                            =
  165 |     
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:162:9: warning: macro 'EOB_ACT_CONTINUE_SCAN' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  162 | #define EOB_ACT_CONTINUE_SCAN 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:162:9: warning: macro 'EOB_ACT_CONTINUE_SCAN' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:163:9: warning: macro 'EOB_ACT_END_OF_FILE' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  163 | #define EOB_ACT_END_OF_FILE 1
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:163:9: warning: macro 'EOB_ACT_END_OF_FILE' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:164:9: warning: macro 'EOB_ACT_LAST_MATCH' defines an integral constant; prefer an enum instead [cppcoreguidelines-macro-to-enum,modernize-macro-to-enum]
  164 | #define EOB_ACT_LAST_MATCH 2
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:164:9: warning: macro 'EOB_ACT_LAST_MATCH' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:170:9: warning: function-like macro 'yyless' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  170 | #define yyless(n) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:182:9: warning: function-like macro 'unput' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  182 | #define unput(c) yyunput( c, (yytext_ptr)  )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:186:8: warning: accessing fields in struct 'yy_buffer_state' is inefficient due to poor alignment; currently aligned to 8 bytes, but recommended alignment is 64 bytes [altera-struct-pack-align]
  186 | struct yy_buffer_state
      |        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:186:8: note: use "__attribute__((aligned(64)))" to align struct 'yy_buffer_state' to 64 bytes
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:186:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  186 | struct yy_buffer_state
      |        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:232:9: warning: macro 'YY_BUFFER_NEW' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  232 | #define YY_BUFFER_NEW 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:233:9: warning: macro 'YY_BUFFER_NORMAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  233 | #define YY_BUFFER_NORMAL 1
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:244:9: warning: macro 'YY_BUFFER_EOF_PENDING' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  244 | #define YY_BUFFER_EOF_PENDING 2
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:250:15: warning: variable 'yy_buffer_stack_top' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  250 | static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:250:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:250:15: warning: variable 'yy_buffer_stack_top' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:251:15: warning: variable 'yy_buffer_stack_max' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  251 | static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:251:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:251:15: warning: variable 'yy_buffer_stack_max' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:252:26: warning: variable 'yy_buffer_stack' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  252 | static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:252:26: warning: variable 'yy_buffer_stack' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:252:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:252:26: warning: variable 'yy_buffer_stack' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:252:44: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  252 | static YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */
      |                                            ^~~~
      |                                            nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:269:13: warning: variable 'yy_hold_char' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  269 | static char yy_hold_char;
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:269:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:269:13: warning: variable 'yy_hold_char' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:270:12: warning: variable 'yy_n_chars' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  270 | static int yy_n_chars;          /* number of characters read into yy_ch_buf */
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:270:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:270:12: warning: variable 'yy_n_chars' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:271:5: warning: variable 'yyleng' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  271 | int yyleng;
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:271:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:274:14: warning: variable 'yy_c_buf_p' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  274 | static char *yy_c_buf_p = NULL;
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:274:14: warning: variable 'yy_c_buf_p' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:274:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:274:14: warning: variable 'yy_c_buf_p' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:274:27: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  274 | static char *yy_c_buf_p = NULL;
      |                           ^~~~
      |                           nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:275:12: warning: variable 'yy_init' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  275 | static int yy_init = 0;         /* whether we need to initialize */
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:275:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:275:12: warning: variable 'yy_init' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:276:12: warning: variable 'yy_start' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  276 | static int yy_start = 0;        /* start state number */
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:276:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:276:12: warning: variable 'yy_start' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:281:12: warning: variable 'yy_did_buffer_switch_on_eof' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  281 | static int yy_did_buffer_switch_on_eof;
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:281:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:281:12: warning: variable 'yy_did_buffer_switch_on_eof' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:283:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  283 | void yyrestart ( FILE *input_file  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:284:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  284 | void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:285:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  285 | YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:285:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  285 | YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
      | ~~~~~~~~~~~~~~~ ^                                         
      | auto                                                       -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:286:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  286 | void yy_delete_buffer ( YY_BUFFER_STATE b  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:286:41: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  286 | void yy_delete_buffer ( YY_BUFFER_STATE b  );
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:287:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  287 | void yy_flush_buffer ( YY_BUFFER_STATE b  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:287:40: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  287 | void yy_flush_buffer ( YY_BUFFER_STATE b  );
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:288:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  288 | void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:289:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  289 | void yypop_buffer_state ( void );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:289:27: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  289 | void yypop_buffer_state ( void );
      |                           ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  291 | static void yyensure_buffer_stack ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: warning: function 'yyensure_buffer_stack' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:37: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  291 | static void yyensure_buffer_stack ( void );
      |                                     ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  292 | static void yy_load_buffer_state ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:13: warning: function 'yy_load_buffer_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:36: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  292 | static void yy_load_buffer_state ( void );
      |                                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:293:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  293 | static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:293:13: warning: function 'yy_init_buffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:293:46: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  293 | static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:296:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  296 | YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:296:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 | YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
      | ~~~~~~~~~~~~~~~ ^                                             
      | auto                                                           -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:297:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  297 | YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:297:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  297 | YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
      | ~~~~~~~~~~~~~~~ ^                                     
      | auto                                                   -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:297:17: warning: function 'yy_scan_string' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1978:17: note: the definition seen here
 1978 | YY_BUFFER_STATE yy_scan_string (const char * yystr )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:297:17: note: differing parameters are named here: ('yy_str'), in definition: ('yystr')
  297 | YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
      |                 ^                            ~~~~~~
      |                                              yystr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:298:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  298 | YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:298:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  298 | YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
      | ~~~~~~~~~~~~~~~ ^                                            
      | auto                                                          -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  300 | void *yyalloc ( yy_size_t  );
      | ~~~~~~^                     
      | auto                         -> void *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:28: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
  300 | void *yyalloc ( yy_size_t  );
      |                            ^
      |                             /*size*/
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  301 | void *yyrealloc ( void *, yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  301 | void *yyrealloc ( void *, yy_size_t  );
      | ~~~~~~^                               
      | auto                                   -> void *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:25: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
  301 | void *yyrealloc ( void *, yy_size_t  );
      |                         ^
      |                          /*ptr*/      /*size*/
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:302:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  302 | void yyfree ( void *  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:302:23: warning: all parameters should be named in a function [hicpp-named-parameter,readability-named-parameter]
  302 | void yyfree ( void *  );
      |                       ^
      |                        /*ptr*/
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:305:9: warning: function-like macro 'yy_set_interactive' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  305 | #define yy_set_interactive(is_interactive) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:314:9: warning: function-like macro 'yy_set_bol' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  314 | #define yy_set_bol(at_bol) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:323:9: warning: function-like macro 'YY_AT_BOL' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  323 | #define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:327:9: warning: function-like macro 'yywrap' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  327 | #define yywrap() (/*CONSTCOND*/1)
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:329:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  329 | typedef flex_uint8_t YY_CHAR;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using YY_CHAR = flex_uint8_t
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:329:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  329 | typedef flex_uint8_t YY_CHAR;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:7: warning: variable 'yyin' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  331 | FILE *yyin = NULL, *yyout = NULL;
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:7: warning: variable 'yyin' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:14: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  331 | FILE *yyin = NULL, *yyout = NULL;
      |              ^~~~
      |              nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:21: warning: variable 'yyout' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  331 | FILE *yyin = NULL, *yyout = NULL;
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:21: warning: variable 'yyout' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:331:29: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  331 | FILE *yyin = NULL, *yyout = NULL;
      |                             ^~~~
      |                             nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:333:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  333 | typedef int yy_state_type;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
      | using yy_state_type = int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:333:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  333 | typedef int yy_state_type;
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:335:12: warning: variable 'yylineno' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  335 | extern int yylineno;
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:335:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:336:5: warning: variable 'yylineno' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  336 | int yylineno = 1;
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:336:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:338:14: warning: variable 'yytext' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  338 | extern char *yytext;
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:338:14: warning: variable 'yytext' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:338:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  344 | static yy_state_type yy_get_previous_state ( void );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: warning: function 'yy_get_previous_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  344 | static yy_state_type yy_get_previous_state ( void );
      |        ~~~~~~~~~~~~~ ^                             
      |        auto                                         -> yy_state_type
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:46: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  344 | static yy_state_type yy_get_previous_state ( void );
      |                                              ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:345:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  345 | static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:345:22: warning: function 'yy_try_NUL_trans' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:345:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  345 | static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
      |        ~~~~~~~~~~~~~ ^                                                
      |        auto                                                            -> yy_state_type
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:346:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  346 | static int yy_get_next_buffer ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:346:12: warning: function 'yy_get_next_buffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:346:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  346 | static int yy_get_next_buffer ( void );
      |        ~~~ ^                          
      |        auto                            -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:346:33: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  346 | static int yy_get_next_buffer ( void );
      |                                 ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: warning: function 'yy_fatal_error' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:358:9: warning: macro 'YY_NUM_RULES' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  358 | #define YY_NUM_RULES 61
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:359:9: warning: macro 'YY_END_OF_BUFFER' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  359 | #define YY_END_OF_BUFFER 62
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:362:8: warning: accessing fields in struct 'yy_trans_info' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 8 bytes [altera-struct-pack-align]
  362 | struct yy_trans_info
      |        ^
  363 |         {
  364 |         flex_int32_t yy_verify;
  365 |         flex_int32_t yy_nxt;
  366 |         };
      |          
      |           __attribute__((aligned(8)))
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:362:8: note: use "__attribute__((aligned(8)))" to align struct 'yy_trans_info' to 8 bytes
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:362:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  362 | struct yy_trans_info
      |        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:367:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  367 | static const flex_int16_t yy_accept[113] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:367:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  367 | static const flex_int16_t yy_accept[113] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:384:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  384 | static const YY_CHAR yy_ec[256] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:384:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  384 | static const YY_CHAR yy_ec[256] =
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:416:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  416 | static const YY_CHAR yy_meta[51] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:416:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  416 | static const YY_CHAR yy_meta[51] =
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:425:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  425 | static const flex_int16_t yy_base[116] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:425:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  425 | static const flex_int16_t yy_base[116] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:442:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  442 | static const flex_int16_t yy_def[116] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:442:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  442 | static const flex_int16_t yy_def[116] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:459:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  459 | static const flex_int16_t yy_nxt[183] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:459:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  459 | static const flex_int16_t yy_nxt[183] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:483:14: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  483 | static const flex_int16_t yy_chk[183] =
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:483:27: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  483 | static const flex_int16_t yy_chk[183] =
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:507:22: warning: variable 'yy_last_accepting_state' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  507 | static yy_state_type yy_last_accepting_state;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:507:22: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:507:22: warning: variable 'yy_last_accepting_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:508:14: warning: variable 'yy_last_accepting_cpos' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  508 | static char *yy_last_accepting_cpos;
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:508:14: warning: variable 'yy_last_accepting_cpos' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:508:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:508:14: warning: variable 'yy_last_accepting_cpos' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:510:12: warning: variable 'yy_flex_debug' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  510 | extern int yy_flex_debug;
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:510:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:511:5: warning: variable 'yy_flex_debug' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  511 | int yy_flex_debug = 0;
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:511:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:517:9: warning: function-like macro 'yymore' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  517 | #define yymore() yymore_used_but_not_detected
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:518:9: warning: macro 'YY_MORE_ADJ' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  518 | #define YY_MORE_ADJ 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:520:7: warning: variable 'yytext' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  520 | char *yytext;
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:520:7: warning: variable 'yytext' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:520:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:523:1: warning: included header node.h is not used directly [misc-include-cleaner]
  523 | #include "node.h"
      | ^~~~~~~~~~~~~~~~~
  524 | #include "src/core/parser/parser.hpp"
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:525:1: warning: #includes are not sorted properly [llvm-include-order]
  525 | #include <string>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:525:1: warning: system include string not allowed [llvmlibc-restrict-system-libc-headers]
  525 | #include <string>
      | ^~~~~~~~~~~~~~~~~
  526 | #include <cstring>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:526:1: warning: system include cstring not allowed [llvmlibc-restrict-system-libc-headers]
  526 | #include <cstring>
      | ^~~~~~~~~~~~~~~~~~
  527 | #include "src/core/utilities/file_util.h"
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:527:1: warning: included header file_util.h is not used directly [misc-include-cleaner]
  527 | #include "src/core/utilities/file_util.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  528 | 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:530:9: warning: function-like macro 'TOKEN' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  530 | #define TOKEN(t)    (yylval.token = t)
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:530:37: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  530 | #define TOKEN(t)    (yylval.token = t)
      |                                     ^
      |                                     ()
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:532:5: warning: variable 'llcolumn' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  532 | int llcolumn = 0;
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:532:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:535:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  535 | std::string *handle_string_literal(const char *str) {
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:535:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  535 | std::string *handle_string_literal(const char *str) {
      | ~~~~~~~~~~~~~^
      | auto                                                -> std::string *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:536:5: warning: use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
  536 |     std::string *result = new std::string(str);
      |     ^~~~~~~~~~~
      |     auto
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:536:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  536 |     std::string *result = new std::string(str);
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:21: warning: 2 adjacent parameters of 'printTokenInfo' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:25: note: the first parameter in the range is 'token'
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                         ^~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:36: note: the last parameter in the range is 'lineNumber'
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                    ^~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: warning: declaring a parameter with a default argument is disallowed [fuchsia-default-arguments-declarations]
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^                        ~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:75: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:622:9: warning: macro 'INITIAL' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  622 | #define INITIAL 0
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:629:1: warning: system include unistd.h not allowed [llvmlibc-restrict-system-libc-headers]
  629 | #include <unistd.h>
      | ^~~~~~~~~~~~~~~~~~~
  630 | #endif
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:636:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  636 | static int yy_init_globals ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:636:12: warning: function 'yy_init_globals' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:636:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  636 | static int yy_init_globals ( void );
      |        ~~~ ^                       
      |        auto                         -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:636:30: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  636 | static int yy_init_globals ( void );
      |                              ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:641:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  641 | int yylex_destroy ( void );
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:641:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  641 | int yylex_destroy ( void );
      | ~~~ ^                     
      | auto                       -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:641:21: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  641 | int yylex_destroy ( void );
      |                     ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:643:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  643 | int yyget_debug ( void );
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:643:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  643 | int yyget_debug ( void );
      | ~~~ ^                   
      | auto                     -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:643:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  643 | int yyget_debug ( void );
      |                   ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:645:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  645 | void yyset_debug ( int debug_flag  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:645:6: warning: function 'yyset_debug' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2123:6: note: the definition seen here
 2123 | void yyset_debug (int  _bdebug )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:645:6: note: differing parameters are named here: ('debug_flag'), in definition: ('_bdebug')
  645 | void yyset_debug ( int debug_flag  );
      |      ^                 ~~~~~~~~~~
      |                        _bdebug
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:647:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  647 | YY_EXTRA_TYPE yyget_extra ( void );
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:647:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  647 | YY_EXTRA_TYPE yyget_extra ( void );
      | ~~~~~~~~~~~~~ ^                   
      | auto                               -> YY_EXTRA_TYPE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:647:29: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  647 | YY_EXTRA_TYPE yyget_extra ( void );
      |                             ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:649:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  649 | void yyset_extra ( YY_EXTRA_TYPE user_defined  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:651:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  651 | FILE *yyget_in ( void );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:651:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  651 | FILE *yyget_in ( void );
      | ~~~~~~^                
      | auto                    -> FILE *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:651:18: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  651 | FILE *yyget_in ( void );
      |                  ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:653:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  653 | void yyset_in  ( FILE * _in_str  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:655:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  655 | FILE *yyget_out ( void );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:655:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  655 | FILE *yyget_out ( void );
      | ~~~~~~^                 
      | auto                     -> FILE *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:655:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  655 | FILE *yyget_out ( void );
      |                   ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:657:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  657 | void yyset_out  ( FILE * _out_str  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:659:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  659 |                         int yyget_leng ( void );
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:659:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  659 |                         int yyget_leng ( void );
      |                         ~~~ ^                  
      |                         auto                    -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:659:21: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  659 |                         int yyget_leng ( void );
      |                                          ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:661:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  661 | char *yyget_text ( void );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:661:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  661 | char *yyget_text ( void );
      | ~~~~~~^                  
      | auto                      -> char *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:661:20: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  661 | char *yyget_text ( void );
      |                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:663:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  663 | int yyget_lineno ( void );
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:663:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  663 | int yyget_lineno ( void );
      | ~~~ ^                    
      | auto                      -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:663:20: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  663 | int yyget_lineno ( void );
      |                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:665:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  665 | void yyset_lineno ( int _line_number  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:681:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  681 |     static void yyunput ( int c, char *buf_ptr  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:681:17: warning: function 'yyunput' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:681:17: warning: function 'yyunput' has a definition with different parameter names [readability-inconsistent-declaration-parameter-name]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1559:17: note: the definition seen here
 1559 |     static void yyunput (int c, char * yy_bp )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:681:17: note: differing parameters are named here: ('buf_ptr'), in definition: ('yy_bp')
  681 |     static void yyunput ( int c, char *buf_ptr  );
      |                 ^                      ~~~~~~~
      |                                        yy_bp
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:681:31: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  681 |     static void yyunput ( int c, char *buf_ptr  );
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  695 | static int yyinput ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: warning: function 'yyinput' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  695 | static int yyinput ( void );
      |        ~~~ ^               
      |        auto                 -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:22: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  695 | static int yyinput ( void );
      |                      ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:708:9: warning: macro 'YY_READ_BUF_SIZE' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  708 | #define YY_READ_BUF_SIZE 8192
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:724:9: warning: function-like macro 'YY_INPUT' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  724 | #define YY_INPUT(buf,result,max_size) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:729:20: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  729 |                 for ( n = 0; n < max_size && \
      |                                  ^
      |                                  (       )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:731:4: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  731 |                         buf[n] = (char) c; \
      |                         ^  
      |                         (  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:733:4: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  733 |                         buf[n++] = (char) c; \
      |                         ^  
      |                         (  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:736:3: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  736 |                 result = n; \
      |                 ^
      |                 (     )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:741:12: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  741 |                 while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
      |                          ^
      |                          (     )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:741:53: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  741 |                 while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
      |                                                                   ^       
      |                                                                   (       )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:761:9: warning: function-like macro 'yyterminate' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  761 | #define yyterminate() return YY_NULL
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:766:9: warning: macro 'YY_START_STACK_INCR' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  766 | #define YY_START_STACK_INCR 25
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:9: warning: function-like macro 'YY_FATAL_ERROR' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:780:9: warning: macro 'YY_DECL_IS_OURS' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
  780 | #define YY_DECL_IS_OURS 1
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:782:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  782 | extern int yylex (void);
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:782:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  782 | extern int yylex (void);
      |        ~~~ ^           
      |        auto             -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:782:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  782 | extern int yylex (void);
      |                   ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:804:1: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
  804 | YY_DECL
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:784:21: note: expanded from macro 'YY_DECL'
  784 | #define YY_DECL int yylex (void)
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:804:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  804 | YY_DECL
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:784:21: note: expanded from macro 'YY_DECL'
  784 | #define YY_DECL int yylex (void)
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:804:1: warning: function 'yylex' has cognitive complexity of 82 (threshold 25) [readability-function-cognitive-complexity]
  804 | YY_DECL
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:784:21: note: expanded from macro 'YY_DECL'
  784 | #define YY_DECL int yylex (void)
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:810:2: note: +1, including nesting penalty of 0, nesting level increased to 1
  810 |         if ( !(yy_init) )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:818:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  818 |                 if ( ! (yy_start) )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:821:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  821 |                 if ( ! yyin )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:824:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  824 |                 if ( ! yyout )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:827:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  827 |                 if ( ! YY_CURRENT_BUFFER ) {
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:827:10: note: +2, including nesting penalty of 1, nesting level increased to 2
  827 |                 if ( ! YY_CURRENT_BUFFER ) {
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:27: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:842:2: note: +1, including nesting penalty of 0, nesting level increased to 1
  842 |         while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:856:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  856 |                 do
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:859:4: note: +3, including nesting penalty of 2, nesting level increased to 3
  859 |                         if ( yy_accept[yy_current_state] )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:864:4: note: +3, including nesting penalty of 2, nesting level increased to 3
  864 |                         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:867:5: note: +4, including nesting penalty of 3, nesting level increased to 4
  867 |                                 if ( yy_current_state >= 113 )
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:877:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  877 |                 if ( yy_act == 0 )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:888:3: note: +2, including nesting penalty of 1, nesting level increased to 2
  888 |                 switch ( yy_act )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:895:4: note: +1
  895 |                         goto yy_find_action;
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1183:5: note: +3, including nesting penalty of 2, nesting level increased to 3
 1183 |     while (comment_level > 0) {
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1185:9: note: +4, including nesting penalty of 3, nesting level increased to 4
 1185 |         if (c == EOF) {
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1188:9: note: +4, including nesting penalty of 3, nesting level increased to 4
 1188 |         if (c == '*' && yyinput() == '/') {
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1188:22: note: +1
 1188 |         if (c == '*' && yyinput() == '/') {
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1190:16: note: +1, nesting level increased to 4
 1190 |         } else if (c == '/' && yyinput() == '*') {
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1190:29: note: +1
 1190 |         } else if (c == '/' && yyinput() == '*') {
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1193:9: note: +4, including nesting penalty of 3, nesting level increased to 4
 1193 |         if (c == '\n') {
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1196:11: note: +1, nesting level increased to 4
 1196 |         } else {
      |           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1221:1: note: +3, including nesting penalty of 2, nesting level increased to 3
 1221 | ECHO;
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:717:14: note: expanded from macro 'ECHO'
  717 | #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1221:1: note: +4, including nesting penalty of 3, nesting level increased to 4
 1221 | ECHO;
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:717:19: note: expanded from macro 'ECHO'
  717 | #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
      |                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1236:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1236 |                 if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1259:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1259 |                 if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1280:4: note: +4, including nesting penalty of 3, nesting level increased to 4
 1280 |                         if ( yy_next_state )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1285:5: note: +1
 1285 |                                 goto yy_match;
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1288:4: note: +1, nesting level increased to 4
 1288 |                         else
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1291:5: note: +1
 1291 |                                 goto yy_find_action;
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1295:3: note: +1, nesting level increased to 3
 1295 |                 else switch ( yy_get_next_buffer(  ) )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1301:5: note: +4, including nesting penalty of 3, nesting level increased to 4
 1301 |                                 if ( yywrap(  ) )
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1315:6: note: +1
 1315 |                                         goto do_action;
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1318:5: note: +1, nesting level increased to 4
 1318 |                                 else
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1320:6: note: +5, including nesting penalty of 4, nesting level increased to 5
 1320 |                                         if ( ! (yy_did_buffer_switch_on_eof) )
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1334:5: note: +1
 1334 |                                 goto yy_match;
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1344:5: note: +1
 1344 |                                 goto yy_find_action;
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:806:16: warning: variable 'yy_current_state' is not initialized [cppcoreguidelines-init-variables]
  806 |         yy_state_type yy_current_state;
      |                       ^               
      |                                        = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:807:2: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  807 |         char *yy_cp, *yy_bp;
      |         ^~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:807:8: warning: variable 'yy_cp' is not initialized [cppcoreguidelines-init-variables]
  807 |         char *yy_cp, *yy_bp;
      |               ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:807:16: warning: variable 'yy_bp' is not initialized [cppcoreguidelines-init-variables]
  807 |         char *yy_cp, *yy_bp;
      |                       ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:808:6: warning: variable 'yy_act' is not initialized [cppcoreguidelines-init-variables]
  808 |         int yy_act;
      |             ^     
      |                    = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:810:8: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  810 |         if ( !(yy_init) )
      |              ~^
      |                         == 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:818:10: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  818 |                 if ( ! (yy_start) )
      |                      ~ ^
      |                                   == 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:818:22: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  818 |                 if ( ! (yy_start) )
      |                                    ^
      |                                     {
  819 |                         (yy_start) = 1; /* first start state */
      |                                                                
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:821:10: warning: implicit conversion 'FILE *' (aka '_IO_FILE *') -> 'bool' [readability-implicit-bool-conversion]
  821 |                 if ( ! yyin )
      |                      ~ ^
      |                             == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:821:16: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  821 |                 if ( ! yyin )
      |                              ^
      |                               {
  822 |                         yyin = stdin;
      |                                      
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:824:10: warning: implicit conversion 'FILE *' (aka '_IO_FILE *') -> 'bool' [readability-implicit-bool-conversion]
  824 |                 if ( ! yyout )
      |                      ~ ^
      |                              == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:824:17: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  824 |                 if ( ! yyout )
      |                               ^
      |                                {
  825 |                         yyout = stdout;
      |                                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:827:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  827 |                 if ( ! YY_CURRENT_BUFFER ) {
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:828:4: warning: 'yyensure_buffer_stack' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  828 |                         yyensure_buffer_stack ();
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: note: resolves to this declaration
  291 | static void yyensure_buffer_stack ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:829:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  829 |                         YY_CURRENT_BUFFER_LVALUE =
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:830:5: warning: 'yy_create_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  830 |                                 yy_create_buffer( yyin, YY_BUF_SIZE );
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:285:17: note: resolves to this declaration
  285 | YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:833:3: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  833 |                 yy_load_buffer_state(  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:13: note: resolves to this declaration
  292 | static void yy_load_buffer_state ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:842:23: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
  842 |         while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
      |                              ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:842:23: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:856:3: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
  856 |                 do
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:858:19: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  858 |                         YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:859:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  859 |                         if ( yy_accept[yy_current_state] )
      |                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:859:9: warning: implicit conversion 'flex_int16_t' (aka 'short') -> 'bool' [readability-implicit-bool-conversion]
  859 |                         if ( yy_accept[yy_current_state] )
      |                              ^
      |                                                          != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:864:4: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  864 |                         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:864:12: warning: backward branch (while loop) is ID-dependent due to variable reference to 'yy_current_state' and may cause performance degradation [altera-id-dependent-backward-branch]
  864 |                         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:806:2: note: inferred assignment of ID-dependent value from ID-dependent 
  806 |         yy_state_type yy_current_state;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:864:12: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  864 |                         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:864:19: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  864 |                         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:866:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  866 |                                 yy_current_state = (int) yy_def[yy_current_state];
      |                                                    ^~~~~                         
      |                                                    static_cast<int>(             )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:866:30: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  866 |                                 yy_current_state = (int) yy_def[yy_current_state];
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:867:30: warning: 113 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  867 |                                 if ( yy_current_state >= 113 )
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:867:35: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  867 |                                 if ( yy_current_state >= 113 )
      |                                                               ^
      |                                                                {
  868 |                                         yy_c = yy_meta[yy_c];
      |                                                              
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:868:13: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  868 |                                         yy_c = yy_meta[yy_c];
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:870:23: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  870 |                         yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:870:30: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  870 |                         yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:871:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  871 |                         ++yy_cp;
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:873:11: warning: backward branch (do loop) is ID-dependent due to variable reference to 'yy_current_state' and may cause performance degradation [altera-id-dependent-backward-branch]
  873 |                 while ( yy_base[yy_current_state] != 132 );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:806:2: note: inferred assignment of ID-dependent value from ID-dependent 
  806 |         yy_state_type yy_current_state;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:873:11: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  873 |                 while ( yy_base[yy_current_state] != 132 );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:873:40: warning: 132 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  873 |                 while ( yy_base[yy_current_state] != 132 );
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:876:12: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  876 |                 yy_act = yy_accept[yy_current_state];
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:881:13: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  881 |                         yy_act = yy_accept[yy_current_state];
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:895:4: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
  895 |                         goto yy_find_action;
      |                         ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:875:1: note: label defined here
  875 | yy_find_action:
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:900:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  900 | { printTokenInfo(INCLUDE, yylineno); llcolumn += strlen("include"); return INCLUDE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:900:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  900 | { printTokenInfo(INCLUDE, yylineno); llcolumn += strlen("include"); return INCLUDE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:900:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  900 | { printTokenInfo(INCLUDE, yylineno); llcolumn += strlen("include"); return INCLUDE; }
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:905:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  905 | { printTokenInfo(PACKAGE, yylineno); llcolumn += strlen("package"); return PACKAGE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:905:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  905 | { printTokenInfo(PACKAGE, yylineno); llcolumn += strlen("package"); return PACKAGE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:905:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  905 | { printTokenInfo(PACKAGE, yylineno); llcolumn += strlen("package"); return PACKAGE; }
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:910:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  910 | { printTokenInfo(IF, yylineno); llcolumn += strlen("if"); return IF; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:910:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  910 | { printTokenInfo(IF, yylineno); llcolumn += strlen("if"); return IF; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:910:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  910 | { printTokenInfo(IF, yylineno); llcolumn += strlen("if"); return IF; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:915:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  915 | { printTokenInfo(ELSE, yylineno); llcolumn += strlen("else"); return ELSE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:915:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  915 | { printTokenInfo(ELSE, yylineno); llcolumn += strlen("else"); return ELSE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:915:47: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  915 | { printTokenInfo(ELSE, yylineno); llcolumn += strlen("else"); return ELSE; }
      |                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:917:6: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  917 | case 5:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:920:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  920 | { printTokenInfo(ELIF, yylineno); llcolumn += strlen("elif"); return ELIF; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:920:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  920 | { printTokenInfo(ELIF, yylineno); llcolumn += strlen("elif"); return ELIF; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:920:47: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  920 | { printTokenInfo(ELIF, yylineno); llcolumn += strlen("elif"); return ELIF; }
      |                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:922:6: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  922 | case 6:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:925:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  925 | { printTokenInfo(FOR, yylineno); llcolumn += strlen("for"); return FOR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:925:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  925 | { printTokenInfo(FOR, yylineno); llcolumn += strlen("for"); return FOR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:925:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  925 | { printTokenInfo(FOR, yylineno); llcolumn += strlen("for"); return FOR; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:927:6: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  927 | case 7:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:930:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  930 | { printTokenInfo(RETURN, yylineno); llcolumn += strlen("return"); return RETURN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:930:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  930 | { printTokenInfo(RETURN, yylineno); llcolumn += strlen("return"); return RETURN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:930:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  930 | { printTokenInfo(RETURN, yylineno); llcolumn += strlen("return"); return RETURN; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:932:6: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  932 | case 8:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:935:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  935 | { printTokenInfo(FUN, yylineno); llcolumn += strlen("fun"); return FUN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:935:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  935 | { printTokenInfo(FUN, yylineno); llcolumn += strlen("fun"); return FUN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:935:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  935 | { printTokenInfo(FUN, yylineno); llcolumn += strlen("fun"); return FUN; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:937:6: warning: 9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  937 | case 9:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:940:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  940 | { printTokenInfo(VAR, yylineno); llcolumn += strlen("var"); return VAR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:940:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  940 | { printTokenInfo(VAR, yylineno); llcolumn += strlen("var"); return VAR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:940:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  940 | { printTokenInfo(VAR, yylineno); llcolumn += strlen("var"); return VAR; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:942:6: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  942 | case 10:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:945:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  945 | { printTokenInfo(IMT, yylineno); llcolumn += strlen("imt"); return IMT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:945:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  945 | { printTokenInfo(IMT, yylineno); llcolumn += strlen("imt"); return IMT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:945:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  945 | { printTokenInfo(IMT, yylineno); llcolumn += strlen("imt"); return IMT; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:947:6: warning: 11 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  947 | case 11:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:950:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  950 | { printTokenInfo(EXTERN, yylineno); llcolumn += strlen("extern"); return EXTERN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:950:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  950 | { printTokenInfo(EXTERN, yylineno); llcolumn += strlen("extern"); return EXTERN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:950:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  950 | { printTokenInfo(EXTERN, yylineno); llcolumn += strlen("extern"); return EXTERN; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:952:6: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  952 | case 12:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:955:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  955 | { printTokenInfo(STRUCT, yylineno); llcolumn += strlen("struct"); return STRUCT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:955:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  955 | { printTokenInfo(STRUCT, yylineno); llcolumn += strlen("struct"); return STRUCT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:955:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  955 | { printTokenInfo(STRUCT, yylineno); llcolumn += strlen("struct"); return STRUCT; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:957:6: warning: 13 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  957 | case 13:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:960:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  960 | { printTokenInfo(BREAK, yylineno); llcolumn += strlen("break"); return BREAK; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:960:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  960 | { printTokenInfo(BREAK, yylineno); llcolumn += strlen("break"); return BREAK; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:960:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  960 | { printTokenInfo(BREAK, yylineno); llcolumn += strlen("break"); return BREAK; }
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:962:6: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  962 | case 14:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:965:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  965 | { printTokenInfo(NULLABLE, yylineno); llcolumn += strlen("?"); return NULLABLE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:965:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  965 | { printTokenInfo(NULLABLE, yylineno); llcolumn += strlen("?"); return NULLABLE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:965:51: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  965 | { printTokenInfo(NULLABLE, yylineno); llcolumn += strlen("?"); return NULLABLE; }
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:967:6: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  967 | case 15:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:970:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  970 | { printTokenInfo(NON_NULLABLE, yylineno); llcolumn += strlen("!"); return NON_NULLABLE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:970:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  970 | { printTokenInfo(NON_NULLABLE, yylineno); llcolumn += strlen("!"); return NON_NULLABLE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:970:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  970 | { printTokenInfo(NON_NULLABLE, yylineno); llcolumn += strlen("!"); return NON_NULLABLE; }
      |                                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:972:6: warning: 16 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  972 | case 16:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:975:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  975 | { printTokenInfo(ASSIGN, yylineno); llcolumn += strlen("="); return ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:975:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  975 | { printTokenInfo(ASSIGN, yylineno); llcolumn += strlen("="); return ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:975:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  975 | { printTokenInfo(ASSIGN, yylineno); llcolumn += strlen("="); return ASSIGN; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:977:6: warning: 17 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  977 | case 17:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:980:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  980 | { printTokenInfo(PLUS, yylineno); llcolumn += strlen("+"); return PLUS; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:980:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  980 | { printTokenInfo(PLUS, yylineno); llcolumn += strlen("+"); return PLUS; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:980:47: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  980 | { printTokenInfo(PLUS, yylineno); llcolumn += strlen("+"); return PLUS; }
      |                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:982:6: warning: 18 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  982 | case 18:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:985:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  985 | { printTokenInfo(MINUS, yylineno); llcolumn += strlen("-"); return MINUS; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:985:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  985 | { printTokenInfo(MINUS, yylineno); llcolumn += strlen("-"); return MINUS; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:985:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  985 | { printTokenInfo(MINUS, yylineno); llcolumn += strlen("-"); return MINUS; }
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:987:6: warning: 19 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  987 | case 19:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:990:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  990 | { printTokenInfo(TIMES, yylineno); llcolumn += strlen("*"); return TIMES; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:990:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  990 | { printTokenInfo(TIMES, yylineno); llcolumn += strlen("*"); return TIMES; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:990:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  990 | { printTokenInfo(TIMES, yylineno); llcolumn += strlen("*"); return TIMES; }
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:992:6: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  992 | case 20:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:995:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  995 | { printTokenInfo(DIVIDE, yylineno); llcolumn += strlen("/"); return DIVIDE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:995:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  995 | { printTokenInfo(DIVIDE, yylineno); llcolumn += strlen("/"); return DIVIDE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:995:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  995 | { printTokenInfo(DIVIDE, yylineno); llcolumn += strlen("/"); return DIVIDE; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:997:6: warning: 21 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  997 | case 21:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1000:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1000 | { printTokenInfo(MOD, yylineno); llcolumn += strlen("%"); return MOD; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1000:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1000 | { printTokenInfo(MOD, yylineno); llcolumn += strlen("%"); return MOD; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1000:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1000 | { printTokenInfo(MOD, yylineno); llcolumn += strlen("%"); return MOD; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1002:6: warning: 22 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1002 | case 22:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1005:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1005 | { printTokenInfo(INC, yylineno); llcolumn += strlen("++"); return INC; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1005:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1005 | { printTokenInfo(INC, yylineno); llcolumn += strlen("++"); return INC; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1005:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1005 | { printTokenInfo(INC, yylineno); llcolumn += strlen("++"); return INC; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1007:6: warning: 23 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1007 | case 23:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1010:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1010 | { printTokenInfo(DEC, yylineno); llcolumn += strlen("--"); return DEC; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1010:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1010 | { printTokenInfo(DEC, yylineno); llcolumn += strlen("--"); return DEC; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1010:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1010 | { printTokenInfo(DEC, yylineno); llcolumn += strlen("--"); return DEC; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1012:6: warning: 24 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1012 | case 24:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1015:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1015 | { printTokenInfo(PLUS_ASSIGN, yylineno); llcolumn += strlen("+="); return PLUS_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1015:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1015 | { printTokenInfo(PLUS_ASSIGN, yylineno); llcolumn += strlen("+="); return PLUS_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1015:54: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1015 | { printTokenInfo(PLUS_ASSIGN, yylineno); llcolumn += strlen("+="); return PLUS_ASSIGN; }
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1017:6: warning: 25 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1017 | case 25:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1020:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1020 | { printTokenInfo(MINUS_ASSIGN, yylineno); llcolumn += strlen("-="); return MINUS_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1020:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1020 | { printTokenInfo(MINUS_ASSIGN, yylineno); llcolumn += strlen("-="); return MINUS_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1020:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1020 | { printTokenInfo(MINUS_ASSIGN, yylineno); llcolumn += strlen("-="); return MINUS_ASSIGN; }
      |                                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1022:6: warning: 26 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1022 | case 26:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1025:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1025 | { printTokenInfo(TIMES_ASSIGN, yylineno); llcolumn += strlen("*="); return TIMES_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1025:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1025 | { printTokenInfo(TIMES_ASSIGN, yylineno); llcolumn += strlen("*="); return TIMES_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1025:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1025 | { printTokenInfo(TIMES_ASSIGN, yylineno); llcolumn += strlen("*="); return TIMES_ASSIGN; }
      |                                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1027:6: warning: 27 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1027 | case 27:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1030:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1030 | { printTokenInfo(DIVIDE_ASSIGN, yylineno); llcolumn += strlen("/="); return DIVIDE_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1030:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1030 | { printTokenInfo(DIVIDE_ASSIGN, yylineno); llcolumn += strlen("/="); return DIVIDE_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1030:56: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1030 | { printTokenInfo(DIVIDE_ASSIGN, yylineno); llcolumn += strlen("/="); return DIVIDE_ASSIGN; }
      |                                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1032:6: warning: 28 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1032 | case 28:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1035:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1035 | { printTokenInfo(MOD_ASSIGN, yylineno); llcolumn += strlen("%="); return MOD_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1035:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1035 | { printTokenInfo(MOD_ASSIGN, yylineno); llcolumn += strlen("%="); return MOD_ASSIGN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1035:53: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1035 | { printTokenInfo(MOD_ASSIGN, yylineno); llcolumn += strlen("%="); return MOD_ASSIGN; }
      |                                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1037:6: warning: 29 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1037 | case 29:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1040:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1040 | { printTokenInfo(LSHIFT, yylineno); llcolumn += strlen("<<"); return LSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1040:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1040 | { printTokenInfo(LSHIFT, yylineno); llcolumn += strlen("<<"); return LSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1040:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1040 | { printTokenInfo(LSHIFT, yylineno); llcolumn += strlen("<<"); return LSHIFT; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1042:6: warning: 30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1042 | case 30:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1045:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1045 | { printTokenInfo(RSHIFT, yylineno); llcolumn += strlen(">>"); return RSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1045:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1045 | { printTokenInfo(RSHIFT, yylineno); llcolumn += strlen(">>"); return RSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1045:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1045 | { printTokenInfo(RSHIFT, yylineno); llcolumn += strlen(">>"); return RSHIFT; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1047:6: warning: 31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1047 | case 31:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1050:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1050 | { printTokenInfo(URSHIFT, yylineno); llcolumn += strlen(">>>"); return URSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1050:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1050 | { printTokenInfo(URSHIFT, yylineno); llcolumn += strlen(">>>"); return URSHIFT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1050:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1050 | { printTokenInfo(URSHIFT, yylineno); llcolumn += strlen(">>>"); return URSHIFT; }
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1052:6: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1052 | case 32:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1055:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1055 | { printTokenInfo(XOR, yylineno); llcolumn += strlen("^"); return XOR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1055:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 | { printTokenInfo(XOR, yylineno); llcolumn += strlen("^"); return XOR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1055:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1055 | { printTokenInfo(XOR, yylineno); llcolumn += strlen("^"); return XOR; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1057:6: warning: 33 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1057 | case 33:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1060:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1060 | { printTokenInfo(SEMICOLON, yylineno); llcolumn += strlen(";"); return SEMICOLON; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1060:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1060 | { printTokenInfo(SEMICOLON, yylineno); llcolumn += strlen(";"); return SEMICOLON; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1060:52: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1060 | { printTokenInfo(SEMICOLON, yylineno); llcolumn += strlen(";"); return SEMICOLON; }
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1062:6: warning: 34 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1062 | case 34:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1065:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1065 | { printTokenInfo(COMMA, yylineno); llcolumn += strlen(","); return COMMA; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1065:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1065 | { printTokenInfo(COMMA, yylineno); llcolumn += strlen(","); return COMMA; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1065:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1065 | { printTokenInfo(COMMA, yylineno); llcolumn += strlen(","); return COMMA; }
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1067:6: warning: 35 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1067 | case 35:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1070:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1070 | { printTokenInfo(LPAREN, yylineno); llcolumn += strlen("("); return LPAREN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1070:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1070 | { printTokenInfo(LPAREN, yylineno); llcolumn += strlen("("); return LPAREN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1070:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1070 | { printTokenInfo(LPAREN, yylineno); llcolumn += strlen("("); return LPAREN; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1072:6: warning: 36 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1072 | case 36:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1075:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1075 | { printTokenInfo(RPAREN, yylineno); llcolumn += strlen(")"); return RPAREN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1075:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1075 | { printTokenInfo(RPAREN, yylineno); llcolumn += strlen(")"); return RPAREN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1075:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1075 | { printTokenInfo(RPAREN, yylineno); llcolumn += strlen(")"); return RPAREN; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1077:6: warning: 37 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1077 | case 37:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1080:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1080 | { printTokenInfo(LBRACE, yylineno); llcolumn += strlen("{"); return LBRACE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1080:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1080 | { printTokenInfo(LBRACE, yylineno); llcolumn += strlen("{"); return LBRACE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1080:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1080 | { printTokenInfo(LBRACE, yylineno); llcolumn += strlen("{"); return LBRACE; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1082:6: warning: 38 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1082 | case 38:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1085:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1085 | { printTokenInfo(RBRACE, yylineno); llcolumn += strlen("}"); return RBRACE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1085:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1085 | { printTokenInfo(RBRACE, yylineno); llcolumn += strlen("}"); return RBRACE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1085:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1085 | { printTokenInfo(RBRACE, yylineno); llcolumn += strlen("}"); return RBRACE; }
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1087:6: warning: 39 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1087 | case 39:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1090:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1090 | { printTokenInfo(LBRACKET, yylineno); llcolumn += strlen("["); return LBRACKET; } // Added
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1090:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1090 | { printTokenInfo(LBRACKET, yylineno); llcolumn += strlen("["); return LBRACKET; } // Added
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1090:51: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1090 | { printTokenInfo(LBRACKET, yylineno); llcolumn += strlen("["); return LBRACKET; } // Added
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1092:6: warning: 40 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1092 | case 40:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1095:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1095 | { printTokenInfo(RBRACKET, yylineno); llcolumn += strlen("]"); return RBRACKET; } // Added
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1095:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1095 | { printTokenInfo(RBRACKET, yylineno); llcolumn += strlen("]"); return RBRACKET; } // Added
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1095:51: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1095 | { printTokenInfo(RBRACKET, yylineno); llcolumn += strlen("]"); return RBRACKET; } // Added
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1097:6: warning: 41 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1097 | case 41:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1100:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1100 | { printTokenInfo(DOT, yylineno); llcolumn += strlen("."); return DOT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1100:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1100 | { printTokenInfo(DOT, yylineno); llcolumn += strlen("."); return DOT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1100:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1100 | { printTokenInfo(DOT, yylineno); llcolumn += strlen("."); return DOT; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1102:6: warning: 42 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1102 | case 42:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1105:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1105 | { printTokenInfo(LT, yylineno); llcolumn += strlen("<"); return LT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1105:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1105 | { printTokenInfo(LT, yylineno); llcolumn += strlen("<"); return LT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1105:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1105 | { printTokenInfo(LT, yylineno); llcolumn += strlen("<"); return LT; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1107:6: warning: 43 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1107 | case 43:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1110:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1110 | { printTokenInfo(LE, yylineno); llcolumn += strlen("<="); return LE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1110:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1110 | { printTokenInfo(LE, yylineno); llcolumn += strlen("<="); return LE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1110:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1110 | { printTokenInfo(LE, yylineno); llcolumn += strlen("<="); return LE; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1112:6: warning: 44 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1112 | case 44:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1115:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1115 | { printTokenInfo(GT, yylineno); llcolumn += strlen(">"); return GT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1115:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1115 | { printTokenInfo(GT, yylineno); llcolumn += strlen(">"); return GT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1115:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1115 | { printTokenInfo(GT, yylineno); llcolumn += strlen(">"); return GT; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1117:6: warning: 45 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1117 | case 45:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1120:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1120 | { printTokenInfo(GE, yylineno); llcolumn += strlen(">="); return GE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1120:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1120 | { printTokenInfo(GE, yylineno); llcolumn += strlen(">="); return GE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1120:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1120 | { printTokenInfo(GE, yylineno); llcolumn += strlen(">="); return GE; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1122:6: warning: 46 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1122 | case 46:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1125:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1125 | { printTokenInfo(EQ, yylineno); llcolumn += strlen("=="); return EQ; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1125:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1125 | { printTokenInfo(EQ, yylineno); llcolumn += strlen("=="); return EQ; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1125:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1125 | { printTokenInfo(EQ, yylineno); llcolumn += strlen("=="); return EQ; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1127:6: warning: 47 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1127 | case 47:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1130:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1130 | { printTokenInfo(NE, yylineno); llcolumn += strlen("!="); return NE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1130:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1130 | { printTokenInfo(NE, yylineno); llcolumn += strlen("!="); return NE; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1130:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1130 | { printTokenInfo(NE, yylineno); llcolumn += strlen("!="); return NE; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1132:6: warning: 48 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1132 | case 48:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1135:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1135 | { printTokenInfo(AND, yylineno); llcolumn += strlen("&&"); return AND; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1135:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1135 | { printTokenInfo(AND, yylineno); llcolumn += strlen("&&"); return AND; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1135:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1135 | { printTokenInfo(AND, yylineno); llcolumn += strlen("&&"); return AND; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1137:6: warning: 49 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1137 | case 49:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1140:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1140 | { printTokenInfo(OR, yylineno); llcolumn += strlen("||"); return OR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1140:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1140 | { printTokenInfo(OR, yylineno); llcolumn += strlen("||"); return OR; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1140:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1140 | { printTokenInfo(OR, yylineno); llcolumn += strlen("||"); return OR; }
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1142:6: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1142 | case 50:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1145:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1145 | { printTokenInfo(NOT, yylineno); llcolumn += strlen("~"); return NOT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1145:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1145 | { printTokenInfo(NOT, yylineno); llcolumn += strlen("~"); return NOT; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1145:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1145 | { printTokenInfo(NOT, yylineno); llcolumn += strlen("~"); return NOT; }
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1147:6: warning: 51 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1147 | case 51:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1150:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1150 | { printTokenInfo(BIT_AND, yylineno); llcolumn += strlen("&"); return BIT_AND; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:48: note: default parameter was declared here
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1150:3: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1150 | { printTokenInfo(BIT_AND, yylineno); llcolumn += strlen("&"); return BIT_AND; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1150:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1150 | { printTokenInfo(BIT_AND, yylineno); llcolumn += strlen("&"); return BIT_AND; }
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1152:6: warning: 52 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1152 | case 52:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1155:3: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::string *' (aka 'basic_string<char> *') [cppcoreguidelines-owning-memory]
 1155 | { SAVE_TOKEN; printTokenInfo(IDENTIFIER, yylineno, *yylval.string); llcolumn += yyleng; return IDENTIFIER; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:21: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1155:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1155 | { SAVE_TOKEN; printTokenInfo(IDENTIFIER, yylineno, *yylval.string); llcolumn += yyleng; return IDENTIFIER; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:41: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:625:6: note: default parameter was declared here
  625 |                    const _Alloc& __a = _Alloc())
      |                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1155:15: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1155 | { SAVE_TOKEN; printTokenInfo(IDENTIFIER, yylineno, *yylval.string); llcolumn += yyleng; return IDENTIFIER; }
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1157:6: warning: 53 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1157 | case 53:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1160:3: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::string *' (aka 'basic_string<char> *') [cppcoreguidelines-owning-memory]
 1160 | { SAVE_TOKEN; printTokenInfo(DOUBLE_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return DOUBLE_TOKEN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:21: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1160:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1160 | { SAVE_TOKEN; printTokenInfo(DOUBLE_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return DOUBLE_TOKEN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:41: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:625:6: note: default parameter was declared here
  625 |                    const _Alloc& __a = _Alloc())
      |                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1160:15: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1160 | { SAVE_TOKEN; printTokenInfo(DOUBLE_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return DOUBLE_TOKEN; }
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1162:6: warning: 54 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1162 | case 54:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1165:3: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::string *' (aka 'basic_string<char> *') [cppcoreguidelines-owning-memory]
 1165 | { SAVE_TOKEN; printTokenInfo(INT_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return INT_TOKEN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:21: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1165:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1165 | { SAVE_TOKEN; printTokenInfo(INT_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return INT_TOKEN; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:41: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:625:6: note: default parameter was declared here
  625 |                    const _Alloc& __a = _Alloc())
      |                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1165:15: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1165 | { SAVE_TOKEN; printTokenInfo(INT_TOKEN, yylineno, *yylval.string); llcolumn += yyleng; return INT_TOKEN; }
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1167:6: warning: 55 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1167 | case 55:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1171:3: warning: assigning newly created 'gsl::owner<>' to non-owner 'std::string *' (aka 'basic_string<char> *') [cppcoreguidelines-owning-memory]
 1171 | { SAVE_TOKEN; printTokenInfo(STRING_LITERAL, yylineno, *yylval.string); llcolumn += yyleng; return STRING_LITERAL; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:21: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1171:3: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1171 | { SAVE_TOKEN; printTokenInfo(STRING_LITERAL, yylineno, *yylval.string); llcolumn += yyleng; return STRING_LITERAL; }
      |   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:529:41: note: expanded from macro 'SAVE_TOKEN'
  529 | #define SAVE_TOKEN  yylval.string = new std::string(yytext, yyleng)
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:625:6: note: default parameter was declared here
  625 |                    const _Alloc& __a = _Alloc())
      |                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1171:15: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1171 | { SAVE_TOKEN; printTokenInfo(STRING_LITERAL, yylineno, *yylval.string); llcolumn += yyleng; return STRING_LITERAL; }
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1173:6: warning: 56 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1173 | case 56:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1178:6: warning: 57 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1178 | case 57:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1183:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1183 |     while (comment_level > 0) {
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1184:9: warning: variable 'c' of type 'int' can be declared 'const' [misc-const-correctness]
 1184 |         int c = yyinput();
      |         ^
      |             const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1184:13: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
 1184 |         int c = yyinput();
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1184:17: warning: 'yyinput' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1184 |         int c = yyinput();
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: note: resolves to this declaration
  695 | static int yyinput ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1188:25: warning: 'yyinput' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1188 |         if (c == '*' && yyinput() == '/') {
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: note: resolves to this declaration
  695 | static int yyinput ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1190:32: warning: 'yyinput' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1190 |         } else if (c == '/' && yyinput() == '*') {
      |                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:695:12: note: resolves to this declaration
  695 | static int yyinput ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1202:6: warning: 58 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1202 | case 58:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1207:6: warning: 59 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1207 | case 59:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1213:6: warning: 60 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1213 | case 60:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1216:23: warning: 'printTokenInfo' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1216 | { llcolumn += yyleng; printTokenInfo(-1, yylineno, std::string(yytext, yyleng)); }
      |                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:542:6: note: resolves to this declaration
  542 | void printTokenInfo(int token, int lineNumber, const std::string& value = "") {
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1216:52: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1216 | { llcolumn += yyleng; printTokenInfo(-1, yylineno, std::string(yytext, yyleng)); }
      |                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:625:6: note: default parameter was declared here
  625 |                    const _Alloc& __a = _Alloc())
      |                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1218:6: warning: 61 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1218 | case 61:
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1221:1: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1221 | ECHO;
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:717:14: note: expanded from macro 'ECHO'
  717 | #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1221:1: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
 1221 | ECHO;
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:717:14: note: expanded from macro 'ECHO'
  717 | #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1230:3: warning: variable 'yy_amount_of_matched_text' of type 'int' can be declared 'const' [misc-const-correctness]
 1230 |                 int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
      |                 ^
      |                     const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1230:35: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1230 |                 int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
      |                                                 ^~~~~
      |                                                 static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1236:8: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1236 |                 if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1247:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1247 |                         (yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1248:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1248 |                         YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1249:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1249 |                         YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1259:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1259 |                 if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1261:18: warning: variable 'yy_next_state' is not initialized [cppcoreguidelines-init-variables]
 1261 |                         yy_state_type yy_next_state;
      |                                       ^            
      |                                                     = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1263:32: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1263 |                         (yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
      |                                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1265:23: warning: 'yy_get_previous_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1265 |                         yy_current_state = yy_get_previous_state(  );
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: note: resolves to this declaration
  344 | static yy_state_type yy_get_previous_state ( void );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1276:20: warning: 'yy_try_NUL_trans' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1276 |                         yy_next_state = yy_try_NUL_trans( yy_current_state );
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:345:22: note: resolves to this declaration
  345 | static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1278:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1278 |                         yy_bp = (yytext_ptr) + YY_MORE_ADJ;
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1280:9: warning: implicit conversion 'yy_state_type' (aka 'int') -> 'bool' [readability-implicit-bool-conversion]
 1280 |                         if ( yy_next_state )
      |                              ^
      |                                            != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1283:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1283 |                                 yy_cp = ++(yy_c_buf_p);
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1285:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1285 |                                 goto yy_match;
      |                                 ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:855:1: note: label defined here
  855 | yy_match:
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1291:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1291 |                                 goto yy_find_action;
      |                                 ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:875:1: note: label defined here
  875 | yy_find_action:
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1295:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1295 |                 else switch ( yy_get_next_buffer(  ) )
      |                     ^
      |                      {
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1295:8: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]
 1295 |                 else switch ( yy_get_next_buffer(  ) )
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1295:17: warning: 'yy_get_next_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1295 |                 else switch ( yy_get_next_buffer(  ) )
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:346:12: note: resolves to this declaration
  346 | static int yy_get_next_buffer ( void );
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1312:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1312 |                                         (yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
      |                                                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1315:6: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1315 |                                         goto do_action;
      |                                         ^~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:886:1: note: label defined here
  886 | do_action:      /* This label is used only to access EOF actions. */
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1320:13: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1320 |                                         if ( ! (yy_did_buffer_switch_on_eof) )
      |                                              ~ ^
      |                                                                              == 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1320:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1320 |                                         if ( ! (yy_did_buffer_switch_on_eof) )
      |                                                                               ^
      |                                                                                {
 1321 |                                                 YY_NEW_FILE;
      |                                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1321:7: warning: 'yyrestart' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1321 |                                                 YY_NEW_FILE;
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:128:21: note: expanded from macro 'YY_NEW_FILE'
  128 | #define YY_NEW_FILE yyrestart( yyin  )
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:283:6: note: resolves to this declaration
  283 | void yyrestart ( FILE *input_file  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1328:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1328 |                                         (yytext_ptr) + yy_amount_of_matched_text;
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1330:24: warning: 'yy_get_previous_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1330 |                                 yy_current_state = yy_get_previous_state(  );
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: note: resolves to this declaration
  344 | static yy_state_type yy_get_previous_state ( void );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1333:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1333 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1334:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1334 |                                 goto yy_match;
      |                                 ^~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:855:1: note: label defined here
  855 | yy_match:
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1338:6: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1338 |                                 &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1340:24: warning: 'yy_get_previous_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1340 |                                 yy_current_state = yy_get_previous_state(  );
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:344:22: note: resolves to this declaration
  344 | static yy_state_type yy_get_previous_state ( void );
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1343:26: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1343 |                                 yy_bp = (yytext_ptr) + YY_MORE_ADJ;
      |                                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1344:5: warning: avoid using 'goto' for flow control [cppcoreguidelines-avoid-goto,hicpp-avoid-goto]
 1344 |                                 goto yy_find_action;
      |                                 ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:875:1: note: label defined here
  875 | yy_find_action:
      | ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1350:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1350 |                 YY_FATAL_ERROR(
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1364 | static int yy_get_next_buffer (void)
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:12: warning: function 'yy_get_next_buffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1364 | static int yy_get_next_buffer (void)
      |        ~~~ ^                        
      |        auto                          -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:12: warning: function 'yy_get_next_buffer' has cognitive complexity of 54 (threshold 25) [readability-function-cognitive-complexity]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1371:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1371 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1375:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1375 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1377:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1377 |                 if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1385:3: note: +1, nesting level increased to 2
 1385 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1399:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1399 |         for ( i = 0; i < number_to_move; ++i )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1402:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1402 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1408:2: note: +1, nesting level increased to 1
 1408 |         else
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1413:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1413 |                 while ( num_to_read <= 0 )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1422:4: note: +3, including nesting penalty of 2, nesting level increased to 3
 1422 |                         if ( b->yy_is_our_buffer )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1426:5: note: +4, including nesting penalty of 3, nesting level increased to 4
 1426 |                                 if ( new_size <= 0 )
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1428:5: note: +1, nesting level increased to 4
 1428 |                                 else
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1436:4: note: +1, nesting level increased to 3
 1436 |                         else
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1440:4: note: +3, including nesting penalty of 2, nesting level increased to 3
 1440 |                         if ( ! b->yy_ch_buf )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1451:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1451 |                 if ( num_to_read > YY_READ_BUF_SIZE )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:725:2: note: expanded from macro 'YY_INPUT'
  725 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:729:3: note: expanded from macro 'YY_INPUT'
  729 |                 for ( n = 0; n < max_size && \
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +1
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:730:35: note: expanded from macro 'YY_INPUT'
  730 |                              (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
      |                                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:732:3: note: expanded from macro 'YY_INPUT'
  732 |                 if ( c == '\n' ) \
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:734:3: note: expanded from macro 'YY_INPUT'
  734 |                 if ( c == EOF && ferror( yyin ) ) \
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +1
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:734:17: note: expanded from macro 'YY_INPUT'
  734 |                 if ( c == EOF && ferror( yyin ) ) \
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +1, nesting level increased to 2
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:738:2: note: expanded from macro 'YY_INPUT'
  738 |         else \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +3, including nesting penalty of 2, nesting level increased to 3
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:741:3: note: expanded from macro 'YY_INPUT'
  741 |                 while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +1
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:741:75: note: expanded from macro 'YY_INPUT'
  741 |                 while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
      |                                                                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: note: +4, including nesting penalty of 3, nesting level increased to 4
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:743:4: note: expanded from macro 'YY_INPUT'
  743 |                         if( errno != EINTR) \
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1461:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1461 |         if ( (yy_n_chars) == 0 )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1463:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1463 |                 if ( number_to_move == YY_MORE_ADJ )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1469:3: note: +1, nesting level increased to 2
 1469 |                 else
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1477:2: note: +1, nesting level increased to 1
 1477 |         else
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1480:2: note: +1, including nesting penalty of 0, nesting level increased to 1
 1480 |         if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1485:3: note: +2, including nesting penalty of 1, nesting level increased to 2
 1485 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:32: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1364 | static int yy_get_next_buffer (void)
      |                                ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1366:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1366 |         char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:2: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
 1368 |         int number_to_move, i;
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:6: warning: variable 'number_to_move' is not initialized [cppcoreguidelines-init-variables]
 1368 |         int number_to_move, i;
      |             ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:22: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
 1368 |         int number_to_move, i;
      |                             ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:22: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1369:6: warning: variable 'ret_val' is not initialized [cppcoreguidelines-init-variables]
 1369 |         int ret_val;
      |             ^      
      |                     = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1371:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1371 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
      |                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1371:78: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1371 |         if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
      |                                                                                     ^
      |                                                                                      {
 1372 |                 YY_FATAL_ERROR(
 1373 |                 "fatal flex scanner internal error--end of buffer missed" );
      |                                                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1372:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1372 |                 YY_FATAL_ERROR(
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1375:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1375 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1385:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
 1385 |                 else
      |                 ^~~~
 1386 |                         {
      |                         ~
 1387 |                         /* We matched some text prior to the EOB, first
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1388 |                          * process it.
      |                          ~~~~~~~~~~~~~
 1389 |                          */
      |                          ~~
 1390 |                         return EOB_ACT_LAST_MATCH;
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~
 1391 |                         }
      |                         ~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1397:19: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1397 |         number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);
      |                          ^~~~~
      |                          static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1399:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1399 |         for ( i = 0; i < number_to_move; ++i )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1399:15: warning: backward branch (for loop) is ID-dependent due to variable reference to 'number_to_move' and may cause performance degradation [altera-id-dependent-backward-branch]
 1399 |         for ( i = 0; i < number_to_move; ++i )
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:2: note: inferred assignment of ID-dependent value from ID-dependent 
 1368 |         int number_to_move, i;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1399:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1399 |         for ( i = 0; i < number_to_move; ++i )
      |                                               ^
      |                                                {
 1400 |                 *(dest++) = *(source++);
      |                                         
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1400:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1400 |                 *(dest++) = *(source++);
      |                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1400:23: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1400 |                 *(dest++) = *(source++);
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1402:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1402 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1402:76: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1402 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
      |                                                                                   ^
      |                                                                                    {
 1403 |                 /* don't do the read, it's not guaranteed to return an EOF,
 1404 |                  * just force an EOF
 1405 |                  */
 1406 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
 1407 | 
 1408 |         else
      |         } 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1406:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1406 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1411:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1411 |                         YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1413:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1413 |                 while ( num_to_read <= 0 )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1413:11: warning: backward branch (while loop) is ID-dependent due to variable reference to 'num_to_read' and may cause performance degradation [altera-id-dependent-backward-branch]
 1413 |                 while ( num_to_read <= 0 )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1410:4: note: inferred assignment of ID-dependent value from ID-dependent 
 1410 |                         int num_to_read =
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1417:20: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
 1417 |                         YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1417:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1417 |                         YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1419:4: warning: variable 'yy_c_buf_p_offset' of type 'int' can be declared 'const' [misc-const-correctness]
 1419 |                         int yy_c_buf_p_offset =
      |                         ^
      |                             const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1420:5: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1420 |                                 (int) ((yy_c_buf_p) - b->yy_ch_buf);
      |                                 ^~~~~
      |                                 static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1422:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1422 |                         if ( b->yy_is_our_buffer )
      |                              ^
      |                                                  != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1424:5: warning: variable 'new_size' of type 'int' can be declared 'const' [misc-const-correctness]
 1424 |                                 int new_size = b->yy_buf_size * 2;
      |                                 ^
      |                                     const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1426:25: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1426 |                                 if ( new_size <= 0 )
      |                                                     ^
      |                                                      {
 1427 |                                         b->yy_buf_size += b->yy_buf_size / 8;
 1428 |                                 else
      |                                 } 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1427:41: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1427 |                                         b->yy_buf_size += b->yy_buf_size / 8;
      |                                                                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1428:9: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1428 |                                 else
      |                                     ^
      |                                      {
 1429 |                                         b->yy_buf_size *= 2;
      |                                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1431:20: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1431 |                                 b->yy_ch_buf = (char *)
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1431:20: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1431 |                                 b->yy_ch_buf = (char *)
      |                                                ^~~~~~~~
      |                                                static_cast<char *>(
 1432 |                                         /* Include room in for 2 EOB chars. */
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1433 |                                         yyrealloc( (void *) b->yy_ch_buf,
 1434 |                                                          (yy_size_t) (b->yy_buf_size + 2)  );
      |                                                                                             
      |                                                                                             )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1433:6: warning: 'yyrealloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1433 |                                         yyrealloc( (void *) b->yy_ch_buf,
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:7: note: resolves to this declaration
  301 | void *yyrealloc ( void *, yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1433:17: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
 1433 |                                         yyrealloc( (void *) b->yy_ch_buf,
      |                                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1434:9: warning: either cast from 'int' to 'yy_size_t' (aka 'unsigned long') is ineffective, or there is loss of precision before the conversion [bugprone-misplaced-widening-cast]
 1434 |                                                          (yy_size_t) (b->yy_buf_size + 2)  );
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1434:9: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1434 |                                                          (yy_size_t) (b->yy_buf_size + 2)  );
      |                                                          ^~~~~~~~~~~
      |                                                          static_cast<yy_size_t>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1436:8: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1436 |                         else
      |                             ^
      |                              {
 1437 |                                 /* Can't grow it, we don't own it. */
 1438 |                                 b->yy_ch_buf = NULL;
      |                                                     
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1438:20: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1438 |                                 b->yy_ch_buf = NULL;
      |                                                ^~~~
      |                                                nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1440:11: warning: implicit conversion 'char *' -> 'bool' [readability-implicit-bool-conversion]
 1440 |                         if ( ! b->yy_ch_buf )
      |                              ~ ^
      |                                             == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1440:25: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1440 |                         if ( ! b->yy_ch_buf )
      |                                              ^
      |                                               {
 1441 |                                 YY_FATAL_ERROR(
 1442 |                                 "fatal error - scanner input buffer overflow" );
      |                                                                                 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1441:5: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1441 |                                 YY_FATAL_ERROR(
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1444:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1444 |                         (yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1446:18: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1446 |                         num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1451:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1451 |                 if ( num_to_read > YY_READ_BUF_SIZE )
      |                                                      ^
      |                                                       {
 1452 |                         num_to_read = YY_READ_BUF_SIZE;
      |                                                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: backward branch (for loop) is ID-dependent due to variable reference to 'num_to_read' and may cause performance degradation [altera-id-dependent-backward-branch]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:729:16: note: expanded from macro 'YY_INPUT'
  729 |                 for ( n = 0; n < max_size && \
      |                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1410:4: note: inferred assignment of ID-dependent value from ID-dependent 
 1410 |                         int num_to_read =
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: backward branch (while loop) is ID-dependent due to variable reference to 'number_to_move' and may cause performance degradation [altera-id-dependent-backward-branch]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:741:11: note: expanded from macro 'YY_INPUT'
  741 |                 while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) \
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1368:2: note: inferred assignment of ID-dependent value from ID-dependent 
 1368 |         int number_to_move, i;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:729:3: note: expanded from macro 'YY_INPUT'
  729 |                 for ( n = 0; n < max_size && \
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:725:7: note: expanded from macro 'YY_INPUT'
  725 |         if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: 'clearerr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:749:4: note: expanded from macro 'YY_INPUT'
  749 |                         clearerr(yyin); \
      |                         ^
/usr/include/stdio.h:850:13: note: resolves to this declaration
  850 | extern void clearerr (FILE *__stream) __THROW __nonnull ((1));
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: 'ferror' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:734:20: note: expanded from macro 'YY_INPUT'
  734 |                 if ( c == EOF && ferror( yyin ) ) \
      |                                  ^
/usr/include/stdio.h:854:12: note: resolves to this declaration
  854 | extern int ferror (FILE *__stream) __THROW __wur __nonnull ((1));
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: 'getc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:730:14: note: expanded from macro 'YY_INPUT'
  730 |                              (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
      |                                   ^
/usr/include/stdio.h:576:12: note: resolves to this declaration
  576 | extern int getc (FILE *__stream) __nonnull ((1));
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:735:4: note: expanded from macro 'YY_INPUT'
  735 |                         YY_FATAL_ERROR( "input in flex scanner failed" ); \
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:727:7: note: expanded from macro 'YY_INPUT'
  727 |                 int c = '*'; \
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:3: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:728:7: note: expanded from macro 'YY_INPUT'
  728 |                 int n; \
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1455:15: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1455 |                 YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1458:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1458 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1466:4: warning: 'yyrestart' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1466 |                         yyrestart( yyin  );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:283:6: note: resolves to this declaration
  283 | void yyrestart ( FILE *input_file  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1472:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1472 |                         YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1477:6: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1477 |         else
      |             ^
      |              {
 1478 |                 ret_val = EOB_ACT_CONTINUE_SCAN;
      |                                                 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1480:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1480 |         if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
      |                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1482:3: warning: variable 'new_size' of type 'int' can be declared 'const' [misc-const-correctness]
 1482 |                 int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
      |                 ^
      |                     const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1482:51: warning: use of a signed integer operand with a binary bitwise operator [hicpp-signed-bitwise]
 1482 |                 int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
      |                                                                 ^~~~~~~~~~~~ ~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1483:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1483 |                 YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1483:41: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1483 |                 YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
      |                                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1483:41: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1483 |                 YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
      |                                                       ^~~~~~~~
      |                                                       static_cast<char *>(
 1484 |                         (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
      |                                                                                              
      |                                                                                              )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1483:50: warning: 'yyrealloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1483 |                 YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
      |                                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:7: note: resolves to this declaration
  301 | void *yyrealloc ( void *, yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1484:4: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
 1484 |                         (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1484:13: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1484 |                         (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1484:50: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1484 |                         (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
      |                                                                       ^~~~~~~~~~~
      |                                                                       static_cast<yy_size_t>( )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1485:10: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1485 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1485:47: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1485 |                 if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                                                             ^
      |                                                              {
 1486 |                         YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
      |                                                                                           
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1486:4: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1486 |                         YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1488:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1488 |                 YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1488:43: warning: redundant cast to the same type [google-readability-casting]
 1488 |                 YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
      |                                                         ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1488:43: warning: redundant explicit casting to the same type 'int' as the sub-expression, remove this casting [readability-redundant-casting]
 1488 |                 YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
      |                                                         ^~~~~~~            ~
      |                                                         (                  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1492:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1492 |         YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1493:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1493 |         YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1495:18: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1495 |         (yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1502:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1502 |     static yy_state_type yy_get_previous_state (void)
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1502:26: warning: function 'yy_get_previous_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1502:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1502 |     static yy_state_type yy_get_previous_state (void)
      |            ~~~~~~~~~~~~~ ^                           
      |            auto                                       -> yy_state_type
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1502:49: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1502 |     static yy_state_type yy_get_previous_state (void)
      |                                                 ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1504:16: warning: variable 'yy_current_state' is not initialized [cppcoreguidelines-init-variables]
 1504 |         yy_state_type yy_current_state;
      |                       ^               
      |                                        = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1505:8: warning: variable 'yy_cp' is not initialized [cppcoreguidelines-init-variables]
 1505 |         char *yy_cp;
      |               ^    
      |                     = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1509:29: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1509 |         for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1509:44: warning: backward branch (for loop) is ID-dependent due to variable reference to 'yy_cp' and may cause performance degradation [altera-id-dependent-backward-branch]
 1509 |         for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1505:2: note: inferred assignment of ID-dependent value from ID-dependent 
 1505 |         char *yy_cp;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1509:66: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1509 |         for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
      |                                                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1511:19: warning: implicit conversion 'char' -> 'bool' [readability-implicit-bool-conversion]
 1511 |                 YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
      |                                 ^
      |                                 (      != 0)
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1511:28: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1511 |                 YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1512:8: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1512 |                 if ( yy_accept[yy_current_state] )
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1512:8: warning: implicit conversion 'flex_int16_t' (aka 'short') -> 'bool' [readability-implicit-bool-conversion]
 1512 |                 if ( yy_accept[yy_current_state] )
      |                      ^
      |                                                  != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1517:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1517 |                 while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1517:11: warning: backward branch (while loop) is ID-dependent due to variable reference to 'yy_current_state' and may cause performance degradation [altera-id-dependent-backward-branch]
 1517 |                 while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1504:2: note: inferred assignment of ID-dependent value from ID-dependent 
 1504 |         yy_state_type yy_current_state;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1517:11: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1517 |                 while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1517:18: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1517 |                 while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1519:23: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1519 |                         yy_current_state = (int) yy_def[yy_current_state];
      |                                            ^~~~~                         
      |                                            static_cast<int>(             )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1519:29: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1519 |                         yy_current_state = (int) yy_def[yy_current_state];
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1520:29: warning: 113 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1520 |                         if ( yy_current_state >= 113 )
      |                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1520:34: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1520 |                         if ( yy_current_state >= 113 )
      |                                                       ^
      |                                                        {
 1521 |                                 yy_c = yy_meta[yy_c];
      |                                                      
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1521:12: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1521 |                                 yy_c = yy_meta[yy_c];
      |                                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1523:22: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1523 |                 yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1523:29: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1523 |                 yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1534:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1534 |     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1534:26: warning: function 'yy_try_NUL_trans' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1534:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1534 |     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
      |            ~~~~~~~~~~~~~ ^                                                  
      |            auto                                                              -> yy_state_type
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1536:6: warning: variable 'yy_is_jam' is not initialized [cppcoreguidelines-init-variables]
 1536 |         int yy_is_jam;
      |             ^        
      |                       = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1540:7: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1540 |         if ( yy_accept[yy_current_state] )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1540:7: warning: implicit conversion 'flex_int16_t' (aka 'short') -> 'bool' [readability-implicit-bool-conversion]
 1540 |         if ( yy_accept[yy_current_state] )
      |              ^
      |                                          != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1545:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1545 |         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1545:10: warning: backward branch (while loop) is ID-dependent due to variable reference to 'yy_current_state' and may cause performance degradation [altera-id-dependent-backward-branch]
 1545 |         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1534:45: note: inferred assignment of ID-dependent value from ID-dependent 
 1534 |     static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1545:10: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1545 |         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1545:17: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1545 |         while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1547:22: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1547 |                 yy_current_state = (int) yy_def[yy_current_state];
      |                                    ^~~~~                         
      |                                    static_cast<int>(             )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1547:28: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1547 |                 yy_current_state = (int) yy_def[yy_current_state];
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1548:28: warning: 113 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1548 |                 if ( yy_current_state >= 113 )
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1548:33: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1548 |                 if ( yy_current_state >= 113 )
      |                                               ^
      |                                                {
 1549 |                         yy_c = yy_meta[yy_c];
      |                                              
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1549:11: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1549 |                         yy_c = yy_meta[yy_c];
      |                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1551:21: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1551 |         yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1551:28: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
 1551 |         yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
      |                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1552:14: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
 1552 |         yy_is_jam = (yy_current_state == 112);
      |                     ^
      |                     static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1552:35: warning: 112 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1552 |         yy_is_jam = (yy_current_state == 112);
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1554:10: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1554 |                 return yy_is_jam ? 0 : yy_current_state;
      |                        ^
      |                        (         != 0)
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1559:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1559 |     static void yyunput (int c, char * yy_bp )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1559:17: warning: function 'yyunput' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1559:30: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
 1559 |     static void yyunput (int c, char * yy_bp )
      |                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1561:8: warning: variable 'yy_cp' is not initialized [cppcoreguidelines-init-variables]
 1561 |         char *yy_cp;
      |               ^    
      |                     = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1568:15: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1568 |         if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
      |                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1568:51: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1568 |         if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
      |                                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1571:3: warning: variable 'number_to_move' of type 'int' can be declared 'const' [misc-const-correctness]
 1571 |                 int number_to_move = (yy_n_chars) + 2;
      |                 ^
      |                     const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1572:17: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1572 |                 char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1573:6: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1573 |                                         YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1575:6: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1575 |                                 &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1577:3: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1577 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1577:11: warning: backward branch (while loop) is ID-dependent due to variable reference to 'source' and may cause performance degradation [altera-id-dependent-backward-branch]
 1577 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1574:3: note: inferred assignment of ID-dependent value from ID-dependent member yy_ch_buf
 1574 |                 char *source =
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1577:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1577 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1577:57: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1577 |                 while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
      |                                                                       ^
      |                                                                        {
 1578 |                         *--dest = *--source;
      |                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1578:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1578 |                         *--dest = *--source;
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1578:15: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1578 |                         *--dest = *--source;
      |                                    ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1580:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1580 |                 yy_cp += (int) (dest - source);
      |                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1580:12: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1580 |                 yy_cp += (int) (dest - source);
      |                          ^~~~~
      |                          static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1581:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1581 |                 yy_bp += (int) (dest - source);
      |                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1581:12: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1581 |                 yy_bp += (int) (dest - source);
      |                          ^~~~~
      |                          static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1582:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1582 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1583:19: warning: redundant cast to the same type [google-readability-casting]
 1583 |                         (yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
      |                                        ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1583:19: warning: redundant explicit casting to the same type 'int' as the sub-expression, remove this casting [readability-redundant-casting]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:196:6: note: source type originates from referencing this member
  196 |         int yy_buf_size;
      |         ~~~ ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1583:25: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1583 |                         (yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
      |                                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1585:16: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1585 |                 if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
      |                              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1585:52: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1585 |                 if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
      |                                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1585:57: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1585 |                 if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
      |                                                                       ^
      |                                                                        {
 1586 |                         YY_FATAL_ERROR( "flex scanner push-back overflow" );
      |                                                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1586:4: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1586 |                         YY_FATAL_ERROR( "flex scanner push-back overflow" );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1589:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1589 |         *--yy_cp = (char) c;
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1589:13: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1589 |         *--yy_cp = (char) c;
      |                    ^~~~~~  
      |                    static_cast<char>( )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1600 |     static int yyinput (void)
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: warning: function 'yyinput' is within a recursive call chain [misc-no-recursion]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: note: example recursive call chain, starting from function 'yyinput'
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1651:13: note: Frame #1: function 'yyinput' calls function 'yyinput' here:
 1651 |                                         return yyinput();
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1651:13: note: ... which was the starting point of the recursive call chain; there may be other cycles
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: warning: function 'yyinput' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
 1600 |     static int yyinput (void)
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1600 |     static int yyinput (void)
      |            ~~~ ^             
      |            auto               -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:25: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1600 |     static int yyinput (void)
      |                         ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1602:24: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1602 |     static int input  (void)
      |                        ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1606:6: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
 1606 |         int c;
      |             ^
      |               = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1606:6: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1616:24: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1616 |                 if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
      |                                      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1616:75: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1616 |                 if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
      |                                                                                         ^
      |                                                                                          {
 1617 |                         /* This was really a NUL. */
 1618 |                         *(yy_c_buf_p) = '\0';
 1619 | 
 1620 |                 else
      |                 } 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1622:4: warning: variable 'offset' of type 'int' can be declared 'const' [misc-const-correctness]
 1622 |                         int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
      |                         ^
      |                             const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1622:17: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1622 |                         int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
      |                                      ^~~~~
      |                                      static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1623:4: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1623 |                         ++(yy_c_buf_p);
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1625:4: warning: switching on non-enum value without default case may not cover all cases [bugprone-switch-missing-default-case]
 1625 |                         switch ( yy_get_next_buffer(  ) )
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1625:13: warning: 'yy_get_next_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1625 |                         switch ( yy_get_next_buffer(  ) )
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1364:12: note: resolves to this declaration
 1364 | static int yy_get_next_buffer (void)
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1639:6: warning: 'yyrestart' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1639 |                                         yyrestart( yyin );
      |                                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:283:6: note: resolves to this declaration
  283 | void yyrestart ( FILE *input_file  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1645:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1645 |                                         if ( yywrap(  ) )
      |                                                          ^
      |                                                           {
 1646 |                                                 return 0;
      |                                                          
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1648:13: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1648 |                                         if ( ! (yy_did_buffer_switch_on_eof) )
      |                                              ~ ^
      |                                                                              == 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1648:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1648 |                                         if ( ! (yy_did_buffer_switch_on_eof) )
      |                                                                               ^
      |                                                                                {
 1649 |                                                 YY_NEW_FILE;
      |                                                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1649:7: warning: 'yyrestart' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1649 |                                                 YY_NEW_FILE;
      |                                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:128:21: note: expanded from macro 'YY_NEW_FILE'
  128 | #define YY_NEW_FILE yyrestart( yyin  )
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:283:6: note: resolves to this declaration
  283 | void yyrestart ( FILE *input_file  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1651:13: warning: 'yyinput' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1651 |                                         return yyinput();
      |                                                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1600:16: note: resolves to this declaration
 1600 |     static int yyinput (void)
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1658:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1658 |                                         (yy_c_buf_p) = (yytext_ptr) + offset;
      |                                                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1664:7: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1664 |         c = *(unsigned char *) (yy_c_buf_p);    /* cast for 8-bit char's */
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1664:7: warning: C-style casts are discouraged; use reinterpret_cast [google-readability-casting]
 1664 |         c = *(unsigned char *) (yy_c_buf_p);    /* cast for 8-bit char's */
      |              ^~~~~~~~~~~~~~~~~
      |              reinterpret_cast<unsigned char *>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1666:20: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1666 |         (yy_hold_char) = *++(yy_c_buf_p);
      |                           ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1677:10: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1677 |     void yyrestart  (FILE * input_file )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1680:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1680 |         if ( ! YY_CURRENT_BUFFER ){
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1681:9: warning: 'yyensure_buffer_stack' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1681 |         yyensure_buffer_stack ();
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: note: resolves to this declaration
  291 | static void yyensure_buffer_stack ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1682:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1682 |                 YY_CURRENT_BUFFER_LVALUE =
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1683:13: warning: 'yy_create_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1683 |             yy_create_buffer( yyin, YY_BUF_SIZE );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:285:17: note: resolves to this declaration
  285 | YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1686:2: warning: 'yy_init_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1686 |         yy_init_buffer( YY_CURRENT_BUFFER, input_file );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:293:13: note: resolves to this declaration
  293 | static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1686:18: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1686 |         yy_init_buffer( YY_CURRENT_BUFFER, input_file );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1687:2: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1687 |         yy_load_buffer_state(  );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:13: note: resolves to this declaration
  292 | static void yy_load_buffer_state ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1694:10: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1694 |     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1702:2: warning: 'yyensure_buffer_stack' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1702 |         yyensure_buffer_stack ();
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: note: resolves to this declaration
  291 | static void yyensure_buffer_stack ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1703:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1703 |         if ( YY_CURRENT_BUFFER == new_buffer )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1703:40: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1703 |         if ( YY_CURRENT_BUFFER == new_buffer )
      |                                               ^
      |                                                {
 1704 |                 return;
      |                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1706:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1706 |         if ( YY_CURRENT_BUFFER )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1710:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1710 |                 YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1711:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1711 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1714:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1714 |         YY_CURRENT_BUFFER_LVALUE = new_buffer;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1715:2: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1715 |         yy_load_buffer_state(  );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:292:13: note: resolves to this declaration
  292 | static void yy_load_buffer_state ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1725 | static void yy_load_buffer_state  (void)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:13: warning: function 'yy_load_buffer_state' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1725 | static void yy_load_buffer_state  (void)
      |                                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1727:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1727 |         (yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1728:32: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1728 |         (yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1729:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1729 |         yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1739:21: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1739 |     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
      |                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1739:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1739 |     YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
      |     ~~~~~~~~~~~~~~~ ^                                          
      |     auto                                                        -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1741:18: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
 1741 |         YY_BUFFER_STATE b;
      |                         ^
      |                           = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1741:18: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1743:6: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1743 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1743:6: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1743 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |             ^~~~~~~~~~~~~~~~~                                             
      |             static_cast<YY_BUFFER_STATE>(                                 )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1743:24: warning: 'yyalloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1743 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: note: resolves to this declaration
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1744:9: warning: implicit conversion 'YY_BUFFER_STATE' (aka 'yy_buffer_state *') -> 'bool' [readability-implicit-bool-conversion]
 1744 |         if ( ! b )
      |              ~ ^
      |                  == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1744:12: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1744 |         if ( ! b )
      |                   ^
      |                    {
 1745 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
      |                                                                                 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1745:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1745 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1752:17: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1752 |         b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1752:17: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1752 |         b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
      |                        ^~~~~~~~                                             
      |                        static_cast<char *>(                                 )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1752:26: warning: 'yyalloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1752 |         b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
      |                                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: note: resolves to this declaration
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1752:35: warning: either cast from 'int' to 'yy_size_t' (aka 'unsigned long') is ineffective, or there is loss of precision before the conversion [bugprone-misplaced-widening-cast]
 1752 |         b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1752:35: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1752 |         b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
      |                                          ^~~~~~~~~~~
      |                                          static_cast<yy_size_t>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1753:9: warning: implicit conversion 'char *' -> 'bool' [readability-implicit-bool-conversion]
 1753 |         if ( ! b->yy_ch_buf )
      |              ~ ^
      |                             == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1753:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1753 |         if ( ! b->yy_ch_buf )
      |                              ^
      |                               {
 1754 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
      |                                                                                 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1754:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1754 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1758:2: warning: 'yy_init_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1758 |         yy_init_buffer( b, file );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:293:13: note: resolves to this declaration
  293 | static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1767:10: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1767 |     void yy_delete_buffer (YY_BUFFER_STATE  b )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1767:45: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
 1767 |     void yy_delete_buffer (YY_BUFFER_STATE  b )
      |                                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1770:9: warning: implicit conversion 'YY_BUFFER_STATE' (aka 'yy_buffer_state *') -> 'bool' [readability-implicit-bool-conversion]
 1770 |         if ( ! b )
      |              ~ ^
      |                  == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1770:12: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1770 |         if ( ! b )
      |                   ^
      |                    {
 1771 |                 return;
      |                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1773:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1773 |         if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
      |                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1773:31: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1773 |         if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
      |                                      ^
      |                                       {
 1774 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
      |                                                                
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1774:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1774 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1774:30: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
 1774 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1774:48: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1774 |                 YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
      |                                                              ^
      |                                                              nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1776:7: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
 1776 |         if ( b->yy_is_our_buffer )
      |              ^
      |                                  != 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1776:28: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1776 |         if ( b->yy_is_our_buffer )
      |                                   ^
      |                                    {
 1777 |                 yyfree( (void *) b->yy_ch_buf  );
      |                                                  
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1777:3: warning: 'yyfree' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1777 |                 yyfree( (void *) b->yy_ch_buf  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:302:6: note: resolves to this declaration
  302 | void yyfree ( void *  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1777:11: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
 1777 |                 yyfree( (void *) b->yy_ch_buf  );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1779:2: warning: 'yyfree' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1779 |         yyfree( (void *) b  );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:302:6: note: resolves to this declaration
  302 | void yyfree ( void *  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1779:10: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
 1779 |         yyfree( (void *) b  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1786:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1786 |     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1786:17: warning: function 'yy_init_buffer' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1786:51: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
 1786 |     static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
      |                                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1789:2: warning: variable 'oerrno' of type 'int' can be declared 'const' [misc-const-correctness]
 1789 |         int oerrno = errno;
      |         ^
      |             const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1791:2: warning: 'yy_flush_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1791 |         yy_flush_buffer( b );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:287:6: note: resolves to this declaration
  287 | void yy_flush_buffer ( YY_BUFFER_STATE b  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1800:14: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1800 |     if (b != YY_CURRENT_BUFFER){
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1805:32: warning: implicit conversion 'FILE *' (aka '_IO_FILE *') -> 'bool' [readability-implicit-bool-conversion]
 1805 |         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
      |                                ^
      |                                (    != nullptr)
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1805:39: warning: implicit conversion 'bool' -> 'int' [readability-implicit-bool-conversion]
 1805 |         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
      |                                       ^
      |                                       static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1805:40: warning: 'isatty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1805 |         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
      |                                        ^
/usr/include/unistd.h:809:12: note: resolves to this declaration
  809 | extern int isatty (int __fd) __THROW;
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1805:48: warning: 'fileno' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1805 |         b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
      |                                                ^
/usr/include/stdio.h:873:12: note: resolves to this declaration
  873 | extern int fileno (FILE *__stream) __THROW __wur __nonnull ((1));
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1814:10: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1814 |     void yy_flush_buffer (YY_BUFFER_STATE  b )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1814:44: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
 1814 |     void yy_flush_buffer (YY_BUFFER_STATE  b )
      |                                            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1816:13: warning: implicit conversion 'YY_BUFFER_STATE' (aka 'yy_buffer_state *') -> 'bool' [readability-implicit-bool-conversion]
 1816 |         if ( ! b )
      |              ~ ^
      |                  == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1816:16: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1816 |         if ( ! b )
      |                   ^
      |                    {
 1817 |                 return;
      |                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1825:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1825 |         b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1826:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1826 |         b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1828:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1828 |         b->yy_buf_pos = &b->yy_ch_buf[0];
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1833:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1833 |         if ( b == YY_CURRENT_BUFFER )
      |                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1833:31: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1833 |         if ( b == YY_CURRENT_BUFFER )
      |                                      ^
      |                                       {
 1834 |                 yy_load_buffer_state(  );
      |                                          
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1834:3: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1834 |                 yy_load_buffer_state(  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:13: note: resolves to this declaration
 1725 | static void yy_load_buffer_state  (void)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1843:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1843 | void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1845:24: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1845 |         if (new_buffer == NULL)
      |                           ^~~~
      |                           nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1845:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1845 |         if (new_buffer == NULL)
      |                                ^
      |                                 {
 1846 |                 return;
      |                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1848:2: warning: 'yyensure_buffer_stack' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1848 |         yyensure_buffer_stack();
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:291:13: note: resolves to this declaration
  291 | static void yyensure_buffer_stack ( void );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1851:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1851 |         if ( YY_CURRENT_BUFFER )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1855:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1855 |                 YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1856:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1856 |                 YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1860:6: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1860 |         if (YY_CURRENT_BUFFER)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1860:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1860 |         if (YY_CURRENT_BUFFER)
      |                               ^
      |                                {
 1861 |                 (yy_buffer_stack_top)++;
      |                                         
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1862:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1862 |         YY_CURRENT_BUFFER_LVALUE = new_buffer;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1865:2: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1865 |         yy_load_buffer_state(  );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:13: note: resolves to this declaration
 1725 | static void yy_load_buffer_state  (void)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1873:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1873 | void yypop_buffer_state (void)
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1873:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1873 | void yypop_buffer_state (void)
      |                          ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1875:11: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1875 |         if (!YY_CURRENT_BUFFER)
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1875:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1875 |         if (!YY_CURRENT_BUFFER)
      |                                ^
      |                                 {
 1876 |                 return;
      |                        
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1878:2: warning: 'yy_delete_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1878 |         yy_delete_buffer(YY_CURRENT_BUFFER );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1767:10: note: resolves to this declaration
 1767 |     void yy_delete_buffer (YY_BUFFER_STATE  b )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1878:19: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1878 |         yy_delete_buffer(YY_CURRENT_BUFFER );
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1879:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1879 |         YY_CURRENT_BUFFER_LVALUE = NULL;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1879:29: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1879 |         YY_CURRENT_BUFFER_LVALUE = NULL;
      |                                    ^~~~
      |                                    nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1880:32: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1880 |         if ((yy_buffer_stack_top) > 0)
      |                                       ^
      |                                        {
 1881 |                 --(yy_buffer_stack_top);
      |                                         
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1883:6: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1883 |         if (YY_CURRENT_BUFFER) {
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1884:3: warning: 'yy_load_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1884 |                 yy_load_buffer_state(  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1725:13: note: resolves to this declaration
 1725 | static void yy_load_buffer_state  (void)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1892:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1892 | static void yyensure_buffer_stack (void)
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1892:13: warning: function 'yyensure_buffer_stack' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1892:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 1892 | static void yyensure_buffer_stack (void)
      |                                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1894:12: warning: variable 'num_to_alloc' is not initialized [cppcoreguidelines-init-variables]
 1894 |         yy_size_t num_to_alloc;
      |                   ^           
      |                                = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1896:7: warning: implicit conversion 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') -> 'bool' [readability-implicit-bool-conversion]
 1896 |         if (!(yy_buffer_stack)) {
      |             ~^                
      |                                == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1903:23: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1903 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1903:23: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1903 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                     static_cast<struct yy_buffer_state**>(
 1904 |                                                                 (num_to_alloc * sizeof(struct yy_buffer_state*)
 1905 |                                                                 );
      |                                                                  
      |                                                                  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1903:49: warning: 'yyalloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1903 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
      |                                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: note: resolves to this declaration
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1906:10: warning: implicit conversion 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') -> 'bool' [readability-implicit-bool-conversion]
 1906 |                 if ( ! (yy_buffer_stack) )
      |                      ~ ^
      |                                          == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1906:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1906 |                 if ( ! (yy_buffer_stack) )
      |                                           ^
      |                                            {
 1907 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
      |                                                                                              
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1907:4: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1907 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1909:10: warning: multilevel pointer conversion from 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') to 'void *', please use explicit cast [bugprone-multi-level-implicit-pointer-conversion]
 1909 |                 memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1919:3: warning: variable 'grow_size' of type 'yy_size_t' (aka 'unsigned long') can be declared 'const' [misc-const-correctness]
 1919 |                 yy_size_t grow_size = 8 /* arbitrary grow size */;
      |                 ^
      |                           const 
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1919:25: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1919 |                 yy_size_t grow_size = 8 /* arbitrary grow size */;
      |                                       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1922:23: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1922 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
      |                                     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1922:23: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1922 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                     static_cast<struct yy_buffer_state**>(
 1923 |                                                                 ((yy_buffer_stack),
 1924 |                                                                 num_to_alloc * sizeof(struct yy_buffer_state*)
 1925 |                                                                 );
      |                                                                  
      |                                                                  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1922:49: warning: 'yyrealloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1922 |                 (yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
      |                                                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:301:7: note: resolves to this declaration
  301 | void *yyrealloc ( void *, yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1923:10: warning: multilevel pointer conversion from 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') to 'void *', please use explicit cast [bugprone-multi-level-implicit-pointer-conversion]
 1923 |                                                                 ((yy_buffer_stack),
      |                                                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1926:10: warning: implicit conversion 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') -> 'bool' [readability-implicit-bool-conversion]
 1926 |                 if ( ! (yy_buffer_stack) )
      |                      ~ ^
      |                                          == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1926:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1926 |                 if ( ! (yy_buffer_stack) )
      |                                           ^
      |                                            {
 1927 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
      |                                                                                              
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1927:4: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1927 |                         YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1930:10: warning: multilevel pointer conversion from 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') to 'void *', please use explicit cast [bugprone-multi-level-implicit-pointer-conversion]
 1930 |                 memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1930:28: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1930 |                 memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
      |                                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1941:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1941 | YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1941:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1941 | YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
      | ~~~~~~~~~~~~~~~ ^                                              
      | auto                                                            -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1943:18: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
 1943 |         YY_BUFFER_STATE b;
      |                         ^
      |                           = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1943:18: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1946:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1946 |              base[size-2] != YY_END_OF_BUFFER_CHAR ||
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1947:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1947 |              base[size-1] != YY_END_OF_BUFFER_CHAR )
      |              ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1947:46: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1947 |              base[size-1] != YY_END_OF_BUFFER_CHAR )
      |                                                     ^
      |                                                      {
 1948 |                 /* They forgot to leave room for the EOB's. */
 1949 |                 return NULL;
      |                             
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1949:10: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1949 |                 return NULL;
      |                        ^~~~
      |                        nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1951:6: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 1951 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1951:6: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1951 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |             ^~~~~~~~~~~~~~~~~                                             
      |             static_cast<YY_BUFFER_STATE>(                                 )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1951:24: warning: 'yyalloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1951 |         b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: note: resolves to this declaration
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1952:9: warning: implicit conversion 'YY_BUFFER_STATE' (aka 'yy_buffer_state *') -> 'bool' [readability-implicit-bool-conversion]
 1952 |         if ( ! b )
      |              ~ ^
      |                  == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1952:12: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 1952 |         if ( ! b )
      |                   ^
      |                    {
 1953 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
      |                                                                               
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1953:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1953 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1955:19: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1955 |         b->yy_buf_size = (int) (size - 2);      /* "- 2" to take care of EOB's */
      |                          ^~~~~
      |                          static_cast<int>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1958:21: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 1958 |         b->yy_input_file = NULL;
      |                            ^~~~
      |                            nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1965:2: warning: 'yy_switch_to_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1965 |         yy_switch_to_buffer( b  );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1694:10: note: resolves to this declaration
 1694 |     void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1978:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1978 | YY_BUFFER_STATE yy_scan_string (const char * yystr )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1978:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1978 | YY_BUFFER_STATE yy_scan_string (const char * yystr )
      | ~~~~~~~~~~~~~~~ ^                                   
      | auto                                                 -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1981:9: warning: 'yy_scan_bytes' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1981 |         return yy_scan_bytes( yystr, (int) strlen(yystr) );
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:298:17: note: resolves to this declaration
  298 | YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1981:31: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1981 |         return yy_scan_bytes( yystr, (int) strlen(yystr) );
      |                                      ^~~~~
      |                                      static_cast<int>(  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1991:17: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 1991 | YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1991:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1991 | YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )
      | ~~~~~~~~~~~~~~~ ^                                                        
      | auto                                                                      -> YY_BUFFER_STATE
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1993:18: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
 1993 |         YY_BUFFER_STATE b;
      |                         ^
      |                           = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1993:18: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1994:8: warning: variable 'buf' is not initialized [cppcoreguidelines-init-variables]
 1994 |         char *buf;
      |               ^  
      |                   = nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1995:12: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
 1995 |         yy_size_t n;
      |                   ^
      |                     = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1995:12: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1996:6: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
 1996 |         int i;
      |             ^
      |               = 0
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1996:6: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1999:6: warning: either cast from 'int' to 'yy_size_t' (aka 'unsigned long') is ineffective, or there is loss of precision before the conversion [bugprone-misplaced-widening-cast]
 1999 |         n = (yy_size_t) (_yybytes_len + 2);
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1999:6: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 1999 |         n = (yy_size_t) (_yybytes_len + 2);
      |             ^~~~~~~~~~~
      |             static_cast<yy_size_t>
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2000:8: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 2000 |         buf = (char *) yyalloc( n  );
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2000:8: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 2000 |         buf = (char *) yyalloc( n  );
      |               ^~~~~~~~              
      |               static_cast<char *>(  )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2000:17: warning: 'yyalloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2000 |         buf = (char *) yyalloc( n  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:300:7: note: resolves to this declaration
  300 | void *yyalloc ( yy_size_t  );
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2001:9: warning: implicit conversion 'char *' -> 'bool' [readability-implicit-bool-conversion]
 2001 |         if ( ! buf )
      |              ~ ^
      |                    == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2001:14: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2001 |         if ( ! buf )
      |                     ^
      |                      {
 2002 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
      |                                                                              
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2002:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2002 |                 YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2004:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 2004 |         for ( i = 0; i < _yybytes_len; ++i )
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2004:38: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2004 |         for ( i = 0; i < _yybytes_len; ++i )
      |                                             ^
      |                                              {
 2005 |                 buf[i] = yybytes[i];
      |                                     
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2005:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2005 |                 buf[i] = yybytes[i];
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2005:12: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2005 |                 buf[i] = yybytes[i];
      |                          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2007:2: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2007 |         buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2007:22: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2007 |         buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2009:6: warning: 'yy_scan_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2009 |         b = yy_scan_buffer( buf, n );
      |             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1941:17: note: resolves to this declaration
 1941 | YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2010:9: warning: implicit conversion 'YY_BUFFER_STATE' (aka 'yy_buffer_state *') -> 'bool' [readability-implicit-bool-conversion]
 2010 |         if ( ! b )
      |              ~ ^
      |                  == nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2010:12: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
 2010 |         if ( ! b )
      |                   ^
      |                    {
 2011 |                 YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
      |                                                                   
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2011:3: warning: 'yy_fatal_error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2011 |                 YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:771:29: note: expanded from macro 'YY_FATAL_ERROR'
  771 | #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:347:24: note: resolves to this declaration
  347 | static void yynoreturn yy_fatal_error ( const char* msg  );
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2022:9: warning: macro 'YY_EXIT_FAILURE' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
 2022 | #define YY_EXIT_FAILURE 2
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2025:24: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2025 | static void yynoreturn yy_fatal_error (const char* msg )
      |                        ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2025:24: warning: function 'yy_fatal_error' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2027:4: warning: the value returned by this function should not be disregarded; neglecting it may lead to errors [cert-err33-c]
 2027 |                         fprintf( stderr, "%s\n", msg );
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2027:4: note: cast the expression to void to silence this warning
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2027:4: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 2027 |                         fprintf( stderr, "%s\n", msg );
      |                         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2028:2: warning: function is not thread safe [concurrency-mt-unsafe]
 2028 |         exit( YY_EXIT_FAILURE );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2034:9: warning: function-like macro 'yyless' used; consider a 'constexpr' template function [cppcoreguidelines-macro-usage]
 2034 | #define yyless(n) \
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2053:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2053 | int yyget_lineno  (void)
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2053:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2053 | int yyget_lineno  (void)
      | ~~~ ^                   
      | auto                     -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2053:20: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2053 | int yyget_lineno  (void)
      |                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2062:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2062 | FILE *yyget_in  (void)
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2062:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2062 | FILE *yyget_in  (void)
      | ~~~~~~^               
      | auto                   -> FILE *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2062:18: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2062 | FILE *yyget_in  (void)
      |                  ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2070:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2070 | FILE *yyget_out  (void)
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2070:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2070 | FILE *yyget_out  (void)
      | ~~~~~~^                
      | auto                    -> FILE *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2070:19: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2070 | FILE *yyget_out  (void)
      |                   ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2078:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2078 | int yyget_leng  (void)
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2078:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2078 | int yyget_leng  (void)
      | ~~~ ^                 
      | auto                   -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2078:18: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2078 | int yyget_leng  (void)
      |                  ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2087:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2087 | char *yyget_text  (void)
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2087:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2087 | char *yyget_text  (void)
      | ~~~~~~^                 
      | auto                     -> char *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2087:20: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2087 | char *yyget_text  (void)
      |                    ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2096:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2096 | void yyset_lineno (int  _line_number )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2108:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2108 | void yyset_in (FILE *  _in_str )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2113:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2113 | void yyset_out (FILE *  _out_str )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2118:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2118 | int yyget_debug  (void)
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2118:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2118 | int yyget_debug  (void)
      | ~~~ ^                  
      | auto                    -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2118:19: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2118 | int yyget_debug  (void)
      |                   ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2123:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2123 | void yyset_debug (int  _bdebug )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2128:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2128 | static int yy_init_globals (void)
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2128:12: warning: function 'yy_init_globals' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2128:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2128 | static int yy_init_globals (void)
      |        ~~~ ^                     
      |        auto                       -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2128:29: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2128 | static int yy_init_globals (void)
      |                             ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2134:25: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2134 |     (yy_buffer_stack) = NULL;
      |                         ^~~~
      |                         nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2137:20: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2137 |     (yy_c_buf_p) = NULL;
      |                    ^~~~
      |                    nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2146:12: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2146 |     yyin = NULL;
      |            ^~~~
      |            nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2147:13: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2147 |     yyout = NULL;
      |             ^~~~
      |             nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2157:5: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2157 | int yylex_destroy  (void)
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2157:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2157 | int yylex_destroy  (void)
      | ~~~ ^                    
      | auto                      -> int
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2157:21: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
 2157 | int yylex_destroy  (void)
      |                     ^~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2161:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 2161 |         while(YY_CURRENT_BUFFER){
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2161:8: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2161 |         while(YY_CURRENT_BUFFER){
      |               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2162:3: warning: 'yy_delete_buffer' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2162 |                 yy_delete_buffer( YY_CURRENT_BUFFER  );
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1767:10: note: resolves to this declaration
 1767 |     void yy_delete_buffer (YY_BUFFER_STATE  b )
      |          ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2162:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2162 |                 yy_delete_buffer( YY_CURRENT_BUFFER  );
      |                                   ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:261:29: note: expanded from macro 'YY_CURRENT_BUFFER'
  261 |                           ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
      |                             ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2163:3: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 2163 |                 YY_CURRENT_BUFFER_LVALUE = NULL;
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:266:34: note: expanded from macro 'YY_CURRENT_BUFFER_LVALUE'
  266 | #define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
      |                                  ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2163:30: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2163 |                 YY_CURRENT_BUFFER_LVALUE = NULL;
      |                                            ^~~~
      |                                            nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2164:3: warning: 'yypop_buffer_state' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2164 |                 yypop_buffer_state();
      |                 ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:1873:6: note: resolves to this declaration
 1873 | void yypop_buffer_state (void)
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2168:2: warning: 'yyfree' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2168 |         yyfree((yy_buffer_stack) );
      |         ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:302:6: note: resolves to this declaration
  302 | void yyfree ( void *  );
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2168:9: warning: multilevel pointer conversion from 'YY_BUFFER_STATE *' (aka 'yy_buffer_state **') to 'void *', please use explicit cast [bugprone-multi-level-implicit-pointer-conversion]
 2168 |         yyfree((yy_buffer_stack) );
      |                ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2169:22: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
 2169 |         (yy_buffer_stack) = NULL;
      |                             ^~~~
      |                             nullptr
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2173:5: warning: 'yy_init_globals' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2173 |     yy_init_globals( );
      |     ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2128:12: note: resolves to this declaration
 2128 | static int yy_init_globals (void)
      |            ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2203:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2203 | void *yyalloc (yy_size_t  size )
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2203:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2203 | void *yyalloc (yy_size_t  size )
      | ~~~~~~^                         
      | auto                             -> void *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2205:4: warning: returning a newly created resource of type 'void *' or 'gsl::owner<>' from a function whose return type is not 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 2205 |                         return malloc(size);
      |                         ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2205:11: warning: do not manage memory manually; consider a container or a smart pointer [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 2205 |                         return malloc(size);
      |                                ^~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2208:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2208 | void *yyrealloc  (void * ptr, yy_size_t  size )
      |       ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2208:7: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 2208 | void *yyrealloc  (void * ptr, yy_size_t  size )
      | ~~~~~~^                                        
      | auto                                            -> void *
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2218:2: warning: returning a newly created resource of type 'void *' or 'gsl::owner<>' from a function whose return type is not 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 2218 |         return realloc(ptr, size);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2218:9: warning: do not manage memory manually; consider std::vector or std::string [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 2218 |         return realloc(ptr, size);
      |                ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2218:9: warning: calling legacy resource function without passing a 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 2218 |         return realloc(ptr, size);
      |                ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2221:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE' namespace [llvmlibc-implementation-in-namespace]
 2221 | void yyfree (void * ptr )
      |      ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2223:4: warning: do not manage memory manually; use RAII [cppcoreguidelines-no-malloc,hicpp-no-malloc]
 2223 |                         free( (char *) ptr );   /* see yyrealloc() for (char *) cast */
      |                         ^~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2223:4: warning: calling legacy resource function without passing a 'gsl::owner<>' [cppcoreguidelines-owning-memory]
 2223 |                         free( (char *) ptr );   /* see yyrealloc() for (char *) cast */
      |                         ^~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2223:10: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
 2223 |                         free( (char *) ptr );   /* see yyrealloc() for (char *) cast */
      |                               ^
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2223:10: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
 2223 |                         free( (char *) ptr );   /* see yyrealloc() for (char *) cast */
      |                               ^~~~~~~~
      |                               static_cast<char *>( )
/home/napbad/tmp/dap/src/core/parser/tokens.cpp:2226:9: warning: macro 'YYTABLES_NAME' used to declare a constant; consider using a 'constexpr' constant [cppcoreguidelines-macro-usage]
 2226 | #define YYTABLES_NAME "yytables"
      |         ^
[17/21] Building CXX object CMakeFiles/dap_main.dir/src/core/parser/node_meta_data.cpp.o
/home/napbad/tmp/dap/src/core/parser/node.h:17:10: warning: circular header file dependency detected while including 'node_meta_data.h', please check the include path [misc-header-include-cycle]
   17 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.h:12:10: note: 'node.h' included from here
   12 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:5:10: note: 'node_meta_data.h' included from here
    5 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:6:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
    6 | namespace dap::parser
      |           ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:1: warning: initializing non-owner 'std::unordered_map<Node *, parser::NodeMetadata *> *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
    8 | std::unordered_map<Node *, parser::NodeMetadata *> *nodeMetadataMapping =
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    9 |     new std::unordered_map<Node *, parser::NodeMetadata *>;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:1: warning: static objects are disallowed; if possible, use a constexpr constructor instead [fuchsia-statically-constructed-objects]
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:6: warning: no header providing "std::unordered_map" is directly included [misc-include-cleaner]
    6 | namespace dap::parser
    7 | {
    8 | std::unordered_map<Node *, parser::NodeMetadata *> *nodeMetadataMapping =
      |      ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:53: warning: initialization of 'nodeMetadataMapping' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
    8 | std::unordered_map<Node *, parser::NodeMetadata *> *nodeMetadataMapping =
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/new:131:26: note: possibly throwing function declared here
  131 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
      |                          ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:53: warning: variable 'nodeMetadataMapping' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
    8 | std::unordered_map<Node *, parser::NodeMetadata *> *nodeMetadataMapping =
      |                                                     ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:8:53: warning: variable 'nodeMetadataMapping' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:11:1: warning: namespace 'dap::parser' not terminated with a closing comment [llvm-namespace-comment]
   11 | }
      | ^
      |   // namespace dap::parser
/home/napbad/tmp/dap/src/core/parser/node_meta_data.cpp:6:11: note: namespace 'dap::parser' starts here
    6 | namespace dap::parser
      |           ^
[18/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/basicElementGen_d.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:5:1: warning: #includes are not sorted properly [llvm-include-order]
    5 | #include <iostream>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:5:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    5 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
    6 | #include <llvm/IR/Verifier.h>
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:6:1: warning: system include llvm/IR/Verifier.h not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <llvm/IR/Verifier.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    7 | #include <sstream>
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:7:1: warning: system include sstream not allowed [llvmlibc-restrict-system-libc-headers]
    7 | #include <sstream>
      | ^~~~~~~~~~~~~~~~~~
    8 | 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:15:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   15 | namespace dap::inter_gen
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:17:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   17 | Function *genIntToChar(InterGenContext *ctx)
      | ~~~~~~~~~~^                                 
      | auto                                         -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:17:24: warning: no header providing "dap::inter_gen::InterGenContext" is directly included [misc-include-cleaner]
   12 | #include "src/core/utilities/file_util.h"
   13 | #include "src/core/utilities/obj_util.h"
   14 | 
   15 | namespace dap::inter_gen
   16 | {
   17 | Function *genIntToChar(InterGenContext *ctx)
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:5: warning: no header providing "llvm::FunctionType" is directly included [misc-include-cleaner]
    6 | #include <llvm/IR/Verifier.h>
    7 | #include <sstream>
    8 | 
    9 | #include "basicElementGen_d.h"
   10 | 
   11 | #include "src/core/common/define_d.h"
   12 | #include "src/core/utilities/file_util.h"
   13 | #include "src/core/utilities/obj_util.h"
   14 | 
   15 | namespace dap::inter_gen
   16 | {
   17 | Function *genIntToChar(InterGenContext *ctx)
   18 | {
   19 |     // Define the function type for the `intToChar` conversion
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:35: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                   ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:53: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                     ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:53: warning: no header providing "llvm::Type" is directly included [misc-include-cleaner]
    6 | #include <llvm/IR/Verifier.h>
    7 | #include <sstream>
    8 | 
    9 | #include "basicElementGen_d.h"
   10 | 
   11 | #include "src/core/common/define_d.h"
   12 | #include "src/core/utilities/file_util.h"
   13 | #include "src/core/utilities/obj_util.h"
   14 | 
   15 | namespace dap::inter_gen
   16 | {
   17 | Function *genIntToChar(InterGenContext *ctx)
   18 | {
   19 |     // Define the function type for the `intToChar` conversion
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:69: warning: no header providing "LLVMCTX" is directly included [misc-include-cleaner]
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:20:80: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                                ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:23:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   23 |     Function *intToChar = Function::Create(intToCharType, Function::ExternalLinkage, "intToChar", ctx->module);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:25:5: warning: 'const auto funMetadata' can be declared as 'auto *const funMetadata' [llvm-qualified-auto,readability-qualified-auto]
   25 |     const auto funMetadata = new FunctionMetaData("intToChar", intToCharType);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:25:34: warning: no header providing "dap::inter_gen::FunctionMetaData" is directly included [misc-include-cleaner]
   12 | #include "src/core/utilities/file_util.h"
   13 | #include "src/core/utilities/obj_util.h"
   14 | 
   15 | namespace dap::inter_gen
   16 | {
   17 | Function *genIntToChar(InterGenContext *ctx)
   18 | {
   19 |     // Define the function type for the `intToChar` conversion
   20 |     FunctionType *intToCharType = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
   21 | 
   22 |     // Create the `int_to_char` function with internal linkage
   23 |     Function *intToChar = Function::Create(intToCharType, Function::ExternalLinkage, "intToChar", ctx->module);
   24 | 
   25 |     const auto funMetadata = new FunctionMetaData("intToChar", intToCharType);
      |                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:25:51: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   25 |     const auto funMetadata = new FunctionMetaData("intToChar", intToCharType);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:28:5: warning: no header providing "llvm::BasicBlock" is directly included [misc-include-cleaner]
    6 |     BasicBlock *entry = BasicBlock::Create(LLVMCTX, "entry", intToChar, nullptr);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:28:25: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   28 |     BasicBlock *entry = BasicBlock::Create(LLVMCTX, "entry", intToChar, nullptr);
      |                         ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:29:5: warning: no header providing "BUILDER" is directly included [misc-include-cleaner]
   29 |     BUILDER.SetInsertPoint(entry);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:35:9: warning: no header providing "llvm::Argument" is directly included [misc-include-cleaner]
    6 |     if (Argument *arg = intToChar->getArg(0); arg->getType()->getTypeID() == Type::IntegerTyID)
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:38:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   38 |         funMetadata->addArg("i",
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:40:13: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |             Type::getInt32Ty(LLVMCTX),
      |             ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:41:13: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   41 |             new VariableMetaData("i",  Type::getInt32Ty(LLVMCTX)));
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:41:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   41 |             new VariableMetaData("i",  Type::getInt32Ty(LLVMCTX)));
      |                 ^
/home/napbad/tmp/dap/src/core/common/../inter_gen/metadata.h:271:52: note: default parameter was declared here
  271 |     VariableMetaData(std::string name, Type *type, bool isMutable = false, bool isNullable = false);
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:41:17: warning: no header providing "dap::inter_gen::VariableMetaData" is directly included [misc-include-cleaner]
   41 |             new VariableMetaData("i",  Type::getInt32Ty(LLVMCTX)));
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:41:34: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   41 |             new VariableMetaData("i",  Type::getInt32Ty(LLVMCTX)));
      |                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:41:40: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   41 |             new VariableMetaData("i",  Type::getInt32Ty(LLVMCTX)));
      |                                        ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:43:9: warning: no header providing "llvm::Value" is directly included [misc-include-cleaner]
    6 |         Value *charCast = BUILDER.CreateTrunc(arg, Type::getInt8Ty(LLVMCTX), "int_cast");
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:43:52: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         Value *charCast = BUILDER.CreateTrunc(arg, Type::getInt8Ty(LLVMCTX), "int_cast");
      |                                                    ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   46 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1322:20: note: default parameter was declared here
 1322 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:41: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |                                         ^
/usr/include/llvm/IR/Constants.h:132:20: note: resolves to this declaration
  132 |   static Constant *get(Type *Ty, const APInt &V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:41: warning: no header providing "llvm::ConstantInt" is directly included [misc-include-cleaner]
    6 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:58: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   46 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |                                                          ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:90: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   46 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |                                                                                          ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:46:93: warning: 48 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   46 |             BUILDER.CreateAdd(charCast, ConstantInt::get(Type::getInt8Ty(LLVMCTX), APInt(8, 48, true)), "int_add"));
      |                                                                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:51:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   51 |         REPORT_ERROR("invalid arg type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:51:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |         REPORT_ERROR("invalid arg type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:51:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |         REPORT_ERROR("invalid arg type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:51:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   51 |         REPORT_ERROR("invalid arg type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:56:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   56 |     verifyFunction(*intToChar);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:40: note: default parameter was declared here
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:56:5: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   56 |     verifyFunction(*intToChar);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:65:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   65 | Function *genCharToInt(InterGenContext *ctx)
      | ~~~~~~~~~~^                                 
      | auto                                         -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:68:35: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |     FunctionType *charToIntType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt8Ty(LLVMCTX)}, false);
      |                                   ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:68:53: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |     FunctionType *charToIntType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt8Ty(LLVMCTX)}, false);
      |                                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:68:81: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |     FunctionType *charToIntType = FunctionType::get(Type::getInt32Ty(LLVMCTX), {Type::getInt8Ty(LLVMCTX)}, false);
      |                                                                                 ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:71:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |     Function *charToInt = Function::Create(charToIntType, Function::ExternalLinkage, "charToInt", ctx->module);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:72:5: warning: 'const auto funMetadata' can be declared as 'auto *const funMetadata' [llvm-qualified-auto,readability-qualified-auto]
   72 |     const auto funMetadata = new FunctionMetaData("charToInt", charToIntType);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:72:51: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   72 |     const auto funMetadata = new FunctionMetaData("charToInt", charToIntType);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:75:25: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |     BasicBlock *entry = BasicBlock::Create(LLVMCTX, "entry", charToInt, nullptr);
      |                         ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:40: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                                        ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:66: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:70: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                                                                      ^
/home/napbad/tmp/dap/src/core/common/../inter_gen/metadata.h:271:52: note: default parameter was declared here
  271 |     VariableMetaData(std::string name, Type *type, bool isMutable = false, bool isNullable = false);
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:87: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:85:94: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   85 |         funMetadata->addArg("ch", arg, Type::getInt8Ty(LLVMCTX), new VariableMetaData("ch",  Type::getInt8Ty(LLVMCTX)));
      |                                                                                              ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:86:57: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |         Value *intCast_ret = BUILDER.CreateIntCast(arg, Type::getInt32Ty(LLVMCTX), false, "char_cast");
      |                                                         ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:92:27: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
   92 |         std::stringstream ss;
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:93:12: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |         ss << "invalid arg type: expect Integer8, but get: " << arg->getType()->getTypeID();
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:93:62: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   93 |         ss << "invalid arg type: expect Integer8, but get: " << arg->getType()->getTypeID();
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:94:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   94 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:94:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:94:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:94:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:94:41: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   94 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:99:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   99 |     verifyFunction(*charToInt);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:40: note: default parameter was declared here
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:99:5: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |     verifyFunction(*charToInt);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:108:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  108 | Function *genInt32To8(InterGenContext *ctx)
      | ~~~~~~~~~~^                                
      | auto                                        -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:111:34: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |     FunctionType *int32To8Type = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                  ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:111:52: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |     FunctionType *int32To8Type = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                    ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:111:79: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  111 |     FunctionType *int32To8Type = FunctionType::get(Type::getInt8Ty(LLVMCTX), {Type::getInt32Ty(LLVMCTX)}, false);
      |                                                                               ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:114:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     Function *int32To8 = Function::Create(int32To8Type, Function::ExternalLinkage, "int32To8", ctx->module);
      |                          ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:115:5: warning: 'const auto funMetadata' can be declared as 'auto *const funMetadata' [llvm-qualified-auto,readability-qualified-auto]
  115 |     const auto funMetadata = new FunctionMetaData("int32To8", int32To8Type);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:115:51: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  115 |     const auto funMetadata = new FunctionMetaData("int32To8", int32To8Type);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:118:25: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  118 |     BasicBlock *entry = BasicBlock::Create(LLVMCTX, "entry", int32To8, nullptr);
      |                         ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:43: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:70: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:74: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                                                                          ^
/home/napbad/tmp/dap/src/core/common/../inter_gen/metadata.h:271:52: note: default parameter was declared here
  271 |     VariableMetaData(std::string name, Type *type, bool isMutable = false, bool isNullable = false);
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:91: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:129:101: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  129 |         funMetadata->addArg("input", arg, Type::getInt32Ty(LLVMCTX), new VariableMetaData("input",  Type::getInt32Ty(LLVMCTX)));
      |                                                                                                     ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:132:63: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  132 |         Value *truncatedValue = ctx->builder.CreateTrunc(arg, Type::getInt8Ty(LLVMCTX), "truncated_value");
      |                                                               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:140:27: warning: variable name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
  140 |         std::stringstream ss;
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:141:12: warning: 'operator<<<std::char_traits<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  141 |         ss << "invalid arg type: expect Integer32, but get: " << arg->getType()->getTypeID();
      |            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:668:5: note: resolves to this declaration
  668 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:141:63: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  141 |         ss << "invalid arg type: expect Integer32, but get: " << arg->getType()->getTypeID();
      |                                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/ostream:197:7: note: resolves to this declaration
  197 |       operator<<(int __n);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:142:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  142 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:142:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:142:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:142:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:142:41: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  142 |         REPORT_ERROR("invalid arg type" + ss.str(), __FILE__, __LINE__);
      |                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:147:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  147 |     verifyFunction(*int32To8);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:40: note: default parameter was declared here
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:147:5: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  147 |     verifyFunction(*int32To8);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:156:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  156 | Function *genCharToStr(InterGenContext *ctx)
      | ~~~~~~~~~~^                                 
      | auto                                         -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:160:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         FunctionType::get(PointerType::get(Type::getInt8Ty(LLVMCTX), 0), {Type::getInt8Ty(LLVMCTX)}, false);
      |         ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:160:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         FunctionType::get(PointerType::get(Type::getInt8Ty(LLVMCTX), 0), {Type::getInt8Ty(LLVMCTX)}, false);
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:160:27: warning: no header providing "llvm::PointerType" is directly included [misc-include-cleaner]
  160 |         FunctionType::get(PointerType::get(Type::getInt8Ty(LLVMCTX), 0), {Type::getInt8Ty(LLVMCTX)}, false);
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:160:44: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         FunctionType::get(PointerType::get(Type::getInt8Ty(LLVMCTX), 0), {Type::getInt8Ty(LLVMCTX)}, false);
      |                                            ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:160:75: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  160 |         FunctionType::get(PointerType::get(Type::getInt8Ty(LLVMCTX), 0), {Type::getInt8Ty(LLVMCTX)}, false);
      |                                                                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:162:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     Function *charToStr = Function::Create(charToStrType, Function::ExternalLinkage, "charToStr", MODULE);
      |                           ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:162:99: warning: no header providing "MODULE" is directly included [misc-include-cleaner]
  162 |     Function *charToStr = Function::Create(charToStrType, Function::ExternalLinkage, "charToStr", MODULE);
      |                                                                                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:164:5: warning: 'const auto funMetadata' can be declared as 'auto *const funMetadata' [llvm-qualified-auto,readability-qualified-auto]
  164 |     const auto funMetadata = new FunctionMetaData("charToStr", charToStrType);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:164:51: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  164 |     const auto funMetadata = new FunctionMetaData("charToStr", charToStrType);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:167:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  167 |     BasicBlock *entryBlock = BasicBlock::Create(LLVMCTX, "entry", charToStr);
      |                              ^
/usr/include/llvm/IR/BasicBlock.h:208:29: note: default parameter was declared here
  208 |                             BasicBlock *InsertBefore = nullptr) {
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:167:30: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  167 |     BasicBlock *entryBlock = BasicBlock::Create(LLVMCTX, "entry", charToStr);
      |                              ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  173 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |             ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:13: warning: no header providing "llvm::GlobalVariable" is directly included [misc-include-cleaner]
    6 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:37: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |                                     ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:37: warning: no header providing "llvm::ArrayType" is directly included [misc-include-cleaner]
  173 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:52: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  173 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |                                                    ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:173:89: warning: no header providing "llvm::GlobalValue" is directly included [misc-include-cleaner]
    6 |         new GlobalVariable(*MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), 2), false, GlobalValue::ExternalLinkage,
      |                                                                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:174:28: warning: 'getString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  174 |                            ConstantDataArray::getString(LLVMCTX, " ", true), "str");
      |                            ^
/usr/include/llvm/IR/Constants.h:730:20: note: resolves to this declaration
  730 |   static Constant *getString(LLVMContext &Context, StringRef Initializer,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:174:28: warning: no header providing "llvm::ConstantDataArray" is directly included [misc-include-cleaner]
  174 |                            ConstantDataArray::getString(LLVMCTX, " ", true), "str");
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:177:5: warning: 'const auto args' can be declared as 'auto *const args' [llvm-qualified-auto,readability-qualified-auto]
  177 |     const auto args = charToStr->arg_begin();
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:47: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                                               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:73: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:77: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                                                                             ^
/home/napbad/tmp/dap/src/core/common/../inter_gen/metadata.h:271:52: note: default parameter was declared here
  271 |     VariableMetaData(std::string name, Type *type, bool isMutable = false, bool isNullable = false);
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:94: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                                                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:180:107: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  180 |     funMetadata->addArg("inputInt", inputInt, Type::getInt8Ty(LLVMCTX), new VariableMetaData("inputInt",  Type::getInt8Ty(LLVMCTX)));
      |                                                                                                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:183:36: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |     Value *gep = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                                    ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:183:73: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  183 |     Value *gep = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                                                                         ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:183:73: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |     Value *gep = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                                                                         ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:183:90: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |     Value *gep = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                                                                                          ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:185:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  185 |     BUILDER.CreateStore(inputInt, gep);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:186:37: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  186 |     Value *gep2 = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 1),
      |                                     ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:186:74: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  186 |     Value *gep2 = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 1),
      |                                                                          ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:186:74: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  186 |     Value *gep2 = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 1),
      |                                                                          ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:186:91: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  186 |     Value *gep2 = BUILDER.CreateGEP(Type::getInt8Ty(LLVMCTX), strBuffer, ConstantInt::get(Type::getInt32Ty(LLVMCTX), 1),
      |                                                                                           ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:188:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  188 |     BUILDER.CreateStore(ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), gep2);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:188:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  188 |     BUILDER.CreateStore(ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), gep2);
      |                         ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:188:25: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     BUILDER.CreateStore(ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), gep2);
      |                         ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:188:42: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |     BUILDER.CreateStore(ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), gep2);
      |                                          ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:192:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  192 |     verifyFunction(*charToStr);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:40: note: default parameter was declared here
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:192:5: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  192 |     verifyFunction(*charToStr);
      |     ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:201:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 | Function *genMalloc(InterGenContext *ctx)
      | ~~~~~~~~~~^                              
      | auto                                      -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:201:38: warning: parameter 'ctx' is unused [misc-unused-parameters]
  201 | Function *genMalloc(InterGenContext *ctx)
      |                                      ^~~
      |                                       /*ctx*/
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:207:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  207 | Function *genFree(InterGenContext *ctx)
      | ~~~~~~~~~~^                            
      | auto                                    -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:207:36: warning: parameter 'ctx' is unused [misc-unused-parameters]
  207 | Function *genFree(InterGenContext *ctx)
      |                                    ^~~
      |                                     /*ctx*/
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:214:5: warning: 'const auto irHeap_d' can be declared as 'auto *const irHeap_d' [llvm-qualified-auto,readability-qualified-auto]
  214 |     const auto irHeap_d = new GlobalVariable(
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:214:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  214 |     const auto irHeap_d = new GlobalVariable(
      |                               ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:215:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |         *MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), false, GlobalValue::ExternalLinkage,
      |                  ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:215:33: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |         *MODULE, ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), false, GlobalValue::ExternalLinkage,
      |                                 ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:9: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |         ^
/usr/include/llvm/IR/Constants.h:419:20: note: resolves to this declaration
  419 |   static Constant *get(ArrayType *T, ArrayRef<Constant *> V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:9: warning: no header providing "llvm::ConstantArray" is directly included [misc-include-cleaner]
  216 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:28: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |                            ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:43: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |                                           ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:89: warning: no header providing "llvm::ArrayRef" is directly included [misc-include-cleaner]
    6 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |                                                                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:216:98: warning: no header providing "llvm::Constant" is directly included [misc-include-cleaner]
    6 |         ConstantArray::get(ArrayType::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE), ArrayRef<Constant *>()),
      |                                                                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:219:48: warning: initializing non-owner argument of type 'value_type &&' (aka 'obj_util::DelayDeleteObjBase *&&') with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  219 |     obj_util::delayedDeleteObjVector.push_back(new obj_util::DelayDeleteObj(irHeap_d));
      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:221:22: warning: no header providing "heap_d" is directly included [misc-include-cleaner]
   12 |     auto *heap = new heap_d{new GlobalVariable(*MODULE, Type::getInt8Ty(LLVMCTX), false, GlobalValue::ExternalLinkage,
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:221:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  221 |     auto *heap = new heap_d{new GlobalVariable(*MODULE, Type::getInt8Ty(LLVMCTX), false, GlobalValue::ExternalLinkage,
      |                                 ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:221:57: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  221 |     auto *heap = new heap_d{new GlobalVariable(*MODULE, Type::getInt8Ty(LLVMCTX), false, GlobalValue::ExternalLinkage,
      |                                                         ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:222:48: warning: 'dyn_cast<llvm::Constant, llvm::GlobalVariable>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  222 |                                                dyn_cast<Constant>(irHeap_d), "heapStart_d"),
      |                                                ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:222:48: warning: no header providing "llvm::dyn_cast" is directly included [misc-include-cleaner]
    7 |                                                dyn_cast<Constant>(irHeap_d), "heapStart_d"),
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:223:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  223 |                             new GlobalVariable(*MODULE, Type::getInt8Ty(LLVMCTX), false, GlobalValue::ExternalLinkage,
      |                                 ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:223:57: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  223 |                             new GlobalVariable(*MODULE, Type::getInt8Ty(LLVMCTX), false, GlobalValue::ExternalLinkage,
      |                                                         ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:224:48: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  224 |                                                ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), "heapEnd_d"),
      |                                                ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:224:48: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  224 |                                                ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), "heapEnd_d"),
      |                                                ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:224:65: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  224 |                                                ConstantInt::get(Type::getInt8Ty(LLVMCTX), 0), "heapEnd_d"),
      |                                                                 ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:225:39: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  225 |                             irHeap_d, ConstantInt::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE)};
      |                                       ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:225:39: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |                             irHeap_d, ConstantInt::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE)};
      |                                       ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:225:56: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  225 |                             irHeap_d, ConstantInt::get(Type::getInt8Ty(LLVMCTX), DEFAULT_HEAP_SIZE)};
      |                                                        ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.cpp:227:5: warning: no header providing "globalHeap" is directly included [misc-include-cleaner]
  227 |     globalHeap = heap;
      |     ^
[19/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/preprocessing/includeAnaylize.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: note: 'codegen_inter.h' included from here
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:7:10: note: 'node.h' included from here
    7 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:9:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
    9 | namespace dap::inter_gen
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:13:5: warning: missing username/bug in TODO [google-readability-todo]
   13 |     // TODO: fill the include analyze function
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |     // TODO(napbad): fill the include analyze function
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:18:28: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     for (auto &[prog, ctx] : *programMap_d)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:18:28: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     for (auto &[prog, ctx] : *programMap_d)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:18:28: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   18 |     for (auto &[prog, ctx] : *programMap_d)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:18:31: warning: no header providing "programMap_d" is directly included [misc-include-cleaner]
    7 | #include "src/core/parser/node.h"
    8 | 
    9 | namespace dap::inter_gen
   10 | {
   11 | void IncludeAnalyzer::analyze()
   12 | {
   13 |     // TODO: fill the include analyze function
   14 | }
   15 | 
   16 | void IncludeAnalyzer::generateGraph()
   17 | {
   18 |     for (auto &[prog, ctx] : *programMap_d)
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:26:9: warning: variable 'name' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
   26 |         std::string name = ctx->module->getName().str();
      |         ^
      |                     const 
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:26:14: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    8 |         std::string name = ctx->module->getName().str();
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:30:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   30 |         for (const auto stmt : prog->stmts->stmts)
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:30:14: warning: 'const auto stmt' can be declared as 'auto *const stmt' [llvm-qualified-auto,readability-qualified-auto]
   30 |         for (const auto stmt : prog->stmts->stmts)
      |              ^~~~~~~~~~
      |              auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:30:30: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   30 |         for (const auto stmt : prog->stmts->stmts)
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:30:30: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   30 |         for (const auto stmt : prog->stmts->stmts)
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:30:30: warning: 'operator==<dap::parser::Stmt **, std::vector<dap::parser::Stmt *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   30 |         for (const auto stmt : prog->stmts->stmts)
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:34:53: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   34 |                 auto *includePath = new std::string(util::getStrFromVec(*includeStmt->path->name_parts, "."));
      |                                                     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:34:59: warning: no header providing "dap::util::getStrFromVec" is directly included [misc-include-cleaner]
    8 |                 auto *includePath = new std::string(util::getStrFromVec(*includeStmt->path->name_parts, "."));
      |                                                           ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:34:105: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   34 |                 auto *includePath = new std::string(util::getStrFromVec(*includeStmt->path->name_parts, "."));
      |                                                                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:40:26: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |     for (const auto &ctx : *programMap_d)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:40:26: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |     for (const auto &ctx : *programMap_d)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:40:26: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   40 |     for (const auto &ctx : *programMap_d)
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:43:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   43 |         for (const auto include : includeGraphNode->getIncludes_path())
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:43:14: warning: 'const auto include' can be declared as 'auto *const include' [llvm-qualified-auto,readability-qualified-auto]
   43 |         for (const auto include : includeGraphNode->getIncludes_path())
      |              ^~~~~~~~~~
      |              auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:43:33: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         for (const auto include : includeGraphNode->getIncludes_path())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:43:33: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         for (const auto include : includeGraphNode->getIncludes_path())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:43:33: warning: 'operator==<std::basic_string<char> **, std::vector<std::basic_string<char> *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   43 |         for (const auto include : includeGraphNode->getIncludes_path())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   47 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:17: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:17: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:17: warning: no header providing "REPORT_ERROR" is directly included [misc-include-cleaner]
    8 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:47:57: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   47 |                 REPORT_ERROR("Include path not found: " + *include, __FILE__, __LINE__);
      |                                                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:59:39: warning: backward branch (for loop) is ID-dependent due to variable reference to 'rootIt' and may cause performance degradation [altera-id-dependent-backward-branch]
   59 |     for (auto rootIt = roots.begin(); rootIt != roots.end(); )
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:59:10: note: inferred assignment of ID-dependent value from ID-dependent 
   59 |     for (auto rootIt = roots.begin(); rootIt != roots.end(); )
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:59:46: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   59 |     for (auto rootIt = roots.begin(); rootIt != roots.end(); )
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:392:7: note: resolves to this declaration
  392 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:61:9: warning: 'auto root' can be declared as 'auto *root' [llvm-qualified-auto,readability-qualified-auto]
   61 |         auto root = *rootIt;
      |         ^~~~
      |         auto *
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:61:21: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |         auto root = *rootIt;
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:354:7: note: resolves to this declaration
  354 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:62:9: warning: variable 'includeGraphNodes' of type 'std::vector<IncludeGraphNode *>' can be declared 'const' [misc-const-correctness]
   62 |         std::vector<IncludeGraphNode *> includeGraphNodes = root->getIncludes();
      |         ^
      |                                         const 
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:62:14: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
    8 |         std::vector<IncludeGraphNode *> includeGraphNodes = root->getIncludes();
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:63:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   63 |         for (auto const includeNode : includeGraphNodes)
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:63:14: warning: 'const auto includeNode' can be declared as 'auto *const includeNode' [llvm-qualified-auto,readability-qualified-auto]
   63 |         for (auto const includeNode : includeGraphNodes)
      |              ^~~~~~~~~~
      |              auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:63:37: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |         for (auto const includeNode : includeGraphNodes)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:63:37: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |         for (auto const includeNode : includeGraphNodes)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:63:37: warning: 'operator==<dap::inter_gen::IncludeGraphNode **, std::vector<dap::inter_gen::IncludeGraphNode *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |         for (auto const includeNode : includeGraphNodes)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:69:13: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   69 |             ++rootIt;
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:362:7: note: resolves to this declaration
  362 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:73:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   73 |             rootIt = roots.erase(rootIt);
      |                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:324:12: note: resolves to this declaration
  324 |     struct _Rb_tree_const_iterator
      |            ^
/home/napbad/tmp/dap/src/core/parser/node_meta_data.h:12:10: warning: circular header file dependency detected while including 'node.h', please check the include path [misc-header-include-cycle]
   12 | #include "node.h"
      |          ^
/home/napbad/tmp/dap/src/core/parser/node.h:17:10: note: 'node_meta_data.h' included from here
   17 | #include "node_meta_data.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/preprocessing/includeAnaylize.cpp:7:10: note: 'node.h' included from here
    7 | #include "src/core/parser/node.h"
      |          ^
[20/21] Building CXX object CMakeFiles/dap_main.dir/src/core/inter_gen/codegen_inter.cpp.o
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:6:1: warning: system include iostream not allowed [llvmlibc-restrict-system-libc-headers]
    6 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
    7 | #include <unordered_set>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:7:1: warning: system include unordered_set not allowed [llvmlibc-restrict-system-libc-headers]
    7 | #include <unordered_set>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
    8 | 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:9:1: warning: system include llvm/Bitstream/BitstreamReader.h not allowed [llvmlibc-restrict-system-libc-headers]
    9 | #include <llvm/Bitstream/BitstreamReader.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:9:1: warning: included header BitstreamReader.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:10:1: warning: system include llvm/ExecutionEngine/SectionMemoryManager.h not allowed [llvmlibc-restrict-system-libc-headers]
   10 | #include <llvm/ExecutionEngine/SectionMemoryManager.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   11 | #include <llvm/IR/DerivedTypes.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:11:1: warning: system include llvm/IR/DerivedTypes.h not allowed [llvmlibc-restrict-system-libc-headers]
   11 | #include <llvm/IR/DerivedTypes.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   12 | #include <llvm/IR/IRBuilder.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:12:1: warning: system include llvm/IR/IRBuilder.h not allowed [llvmlibc-restrict-system-libc-headers]
   12 | #include <llvm/IR/IRBuilder.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   13 | #include <llvm/IR/IRPrintingPasses.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:13:1: warning: system include llvm/IR/IRPrintingPasses.h not allowed [llvmlibc-restrict-system-libc-headers]
   13 | #include <llvm/IR/IRPrintingPasses.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   14 | #include <llvm/IR/Instructions.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:14:1: warning: system include llvm/IR/Instructions.h not allowed [llvmlibc-restrict-system-libc-headers]
   14 | #include <llvm/IR/Instructions.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   15 | #include <llvm/IR/LegacyPassManager.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:15:1: warning: system include llvm/IR/LegacyPassManager.h not allowed [llvmlibc-restrict-system-libc-headers]
   15 | #include <llvm/IR/LegacyPassManager.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   16 | #include <llvm/IR/Module.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:16:1: warning: system include llvm/IR/Module.h not allowed [llvmlibc-restrict-system-libc-headers]
   16 | #include <llvm/IR/Module.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
   17 | #include <llvm/IR/Type.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:17:1: warning: system include llvm/IR/Type.h not allowed [llvmlibc-restrict-system-libc-headers]
   17 | #include <llvm/IR/Type.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
   18 | #include <llvm/IR/Verifier.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:18:1: warning: system include llvm/IR/Verifier.h not allowed [llvmlibc-restrict-system-libc-headers]
   18 | #include <llvm/IR/Verifier.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   19 | #include <llvm/MC/MCContext.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:19:1: warning: #includes are not sorted properly [llvm-include-order]
   19 | #include <llvm/MC/MCContext.h>
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:19:1: warning: system include llvm/MC/MCContext.h not allowed [llvmlibc-restrict-system-libc-headers]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:19:1: warning: included header MCContext.h is not used directly [misc-include-cleaner]
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:20:1: warning: system include llvm/MC/TargetRegistry.h not allowed [llvmlibc-restrict-system-libc-headers]
   20 | #include <llvm/MC/TargetRegistry.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 | #include <llvm/Pass.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:21:1: warning: system include llvm/Pass.h not allowed [llvmlibc-restrict-system-libc-headers]
   21 | #include <llvm/Pass.h>
      | ^~~~~~~~~~~~~~~~~~~~~~
   22 | #include <llvm/Support/FileSystem.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:22:1: warning: system include llvm/Support/FileSystem.h not allowed [llvmlibc-restrict-system-libc-headers]
   22 | #include <llvm/Support/FileSystem.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 | #include <llvm/Support/TargetSelect.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:23:1: warning: system include llvm/Support/TargetSelect.h not allowed [llvmlibc-restrict-system-libc-headers]
   23 | #include <llvm/Support/TargetSelect.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 | #include <llvm/Target/TargetMachine.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:24:1: warning: system include llvm/Target/TargetMachine.h not allowed [llvmlibc-restrict-system-libc-headers]
   24 | #include <llvm/Target/TargetMachine.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 | #include <llvm/Target/TargetOptions.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:25:1: warning: system include llvm/Target/TargetOptions.h not allowed [llvmlibc-restrict-system-libc-headers]
   25 | #include <llvm/Target/TargetOptions.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 | #include <llvm/TargetParser/Host.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:26:1: warning: system include llvm/TargetParser/Host.h not allowed [llvmlibc-restrict-system-libc-headers]
   26 | #include <llvm/TargetParser/Host.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 | #include <optional>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:27:1: warning: system include optional not allowed [llvmlibc-restrict-system-libc-headers]
   27 | #include <optional>
      | ^~~~~~~~~~~~~~~~~~~
   28 | #include <llvm/IRReader/IRReader.h>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:28:1: warning: system include llvm/IRReader/IRReader.h not allowed [llvmlibc-restrict-system-libc-headers]
   28 | #include <llvm/IRReader/IRReader.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 | 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:32:1: warning: #includes are not sorted properly [llvm-include-order]
   32 | #include "src/core/common/define_d.h"
      | ^
note: this fix will not be applied because it overlaps with another fix
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:42:1: warning: included header reserve.h is not used directly [misc-include-cleaner]
   42 | #include "src/core/common/reserve.h"
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 | #include "preprocessing/includeAnaylize.h"
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:46:11: warning: the outermost namespace should be the 'LIBC_NAMESPACE' macro [llvmlibc-implementation-in-namespace]
   46 | namespace dap
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:51:12: warning: no header providing "std::string" is directly included [misc-include-cleaner]
    7 | using std::string;
      |            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:54:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   54 | Value *IntegerExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~             ^                                       
      | auto                                                         -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:57:12: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   57 |     return ConstantInt::get(LLVMCTX, APInt(INT_BIT_WIDTH, value, true));
      |            ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:61:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 | Value *DoubleExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:64:12: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |     return ConstantFP::get(LLVMCTX, APFloat(value));
      |            ^
/usr/include/llvm/IR/Constants.h:283:22: note: resolves to this declaration
  283 |   static ConstantFP *get(LLVMContext &Context, const APFloat &V);
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:64:12: warning: no header providing "llvm::ConstantFP" is directly included [misc-include-cleaner]
    7 |     return ConstantFP::get(LLVMCTX, APFloat(value));
      |            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:68:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 | Value *StringExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:71:5: warning: no header providing "llvm::Constant" is directly included [misc-include-cleaner]
    7 |     Constant *stringConstant = ConstantDataArray::getString(LLVMCTX, value, true);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:71:32: warning: 'getString' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |     Constant *stringConstant = ConstantDataArray::getString(LLVMCTX, value, true);
      |                                ^
/usr/include/llvm/IR/Constants.h:730:20: note: resolves to this declaration
  730 |   static Constant *getString(LLVMContext &Context, StringRef Initializer,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:71:32: warning: no header providing "llvm::ConstantDataArray" is directly included [misc-include-cleaner]
   71 |     Constant *stringConstant = ConstantDataArray::getString(LLVMCTX, value, true);
      |                                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:76:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 | Value *handleStructName(const QualifiedName *name, inter_gen::InterGenContext *ctx);
      | ~~~~~~~^                                                                           
      | auto                                                                                -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:79:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   79 | Value *QualifiedName::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~               ^                                       
      | auto                                                           -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:84:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
   84 |         for (auto &arg : parentFun->args())
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:86:31: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   86 |             if (arg.getName() == getName())
      |                               ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
   93 |     if (!ctx->getVal(getFirstName()))
      |         ~^                          
      |                                      == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:95:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
   95 |         REPORT_ERROR("Unknown variable name " + getFirstName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:95:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         REPORT_ERROR("Unknown variable name " + getFirstName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:95:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         REPORT_ERROR("Unknown variable name " + getFirstName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:95:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         REPORT_ERROR("Unknown variable name " + getFirstName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:95:47: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   95 |         REPORT_ERROR("Unknown variable name " + getFirstName(), __FILE__, __LINE__);
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:101:16: warning: 'handleStructName' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  101 |         return handleStructName(this, ctx);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:76:8: note: resolves to this declaration
   76 | Value *handleStructName(const QualifiedName *name, inter_gen::InterGenContext *ctx);
      |        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:9: warning: 'const auto inst' can be declared as 'auto *const inst' [llvm-qualified-auto,readability-qualified-auto]
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |         ^~~~~~~~~~
      |         auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:27: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                           ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:27: warning: no header providing "llvm::dyn_cast" is directly included [misc-include-cleaner]
    7 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:15: warning: no header providing "llvm::isa" is directly included [misc-include-cleaner]
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:9: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1279:12: note: Calling 'QualifiedName::codeGen'
 1279 |     return name->codeGen(ctx);
      |            ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:19: note: Assuming 'parentFun' is null
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |                   ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:5: note: Taking false branch
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:9: note: Assuming the condition is false
   93 |     if (!ctx->getVal(getFirstName()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:5: note: Taking false branch
   93 |     if (!ctx->getVal(getFirstName()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:9: note: Assuming the condition is false
   99 |     if (name_parts->size() > 1)
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:5: note: Taking false branch
   99 |     if (name_parts->size() > 1)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:27: note: Assuming the object is not a 'CastReturnType'
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:20: note: 'inst' is null
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                    ^~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:5: note: Taking false branch
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:9: note: Assuming the object is not a 'PointerType'
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:5: note: Taking false branch
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:9: note: Assuming the object is not a 'CastReturnType'
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:9: note: Called C++ object pointer is null
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:9: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |         ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:117:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  117 |         return BUILDER.CreateGEP(PointerType::getInt8Ty(LLVMCTX), ctx->getVal(getFirstName()),
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:117:34: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  117 |         return BUILDER.CreateGEP(PointerType::getInt8Ty(LLVMCTX), ctx->getVal(getFirstName()),
      |                                  ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:118:35: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  118 |                                  {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                   ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:118:35: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  118 |                                  {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                   ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:118:52: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  118 |                                  {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                                    ^
/usr/include/llvm/IR/DerivedTypes.h:64:23: note: resolves to this declaration
   64 |   static IntegerType *get(LLVMContext &C, unsigned NumBits);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:118:78: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  118 |                                  {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:122:17: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  122 |     auto *val = dyn_cast<AllocaInst>(ctx->getVal(getFirstName()));
      |                 ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:123:33: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
  123 |     const Type *allocatedType = val->getAllocatedType();
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1279:12: note: Calling 'QualifiedName::codeGen'
 1279 |     return name->codeGen(ctx);
      |            ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:19: note: Assuming 'parentFun' is null
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |                   ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:5: note: Taking false branch
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:9: note: Assuming the condition is false
   93 |     if (!ctx->getVal(getFirstName()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:5: note: Taking false branch
   93 |     if (!ctx->getVal(getFirstName()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:9: note: Assuming the condition is false
   99 |     if (name_parts->size() > 1)
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:5: note: Taking false branch
   99 |     if (name_parts->size() > 1)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:27: note: Assuming the object is not a 'CastReturnType'
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:20: note: 'inst' is null
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |                    ^~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:104:5: note: Taking false branch
  104 |     if (const auto inst = dyn_cast<AllocaInst>(ctx->getVal(getFirstName())))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:9: note: Assuming the object is not a 'PointerType'
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:109:5: note: Taking false branch
  109 |     if (llvm::isa<PointerType>(ctx->getVal(getFirstName())->getType()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:9: note: Assuming the object is a 'CastReturnType'
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:115:5: note: Taking false branch
  115 |     if (dyn_cast<AllocaInst>(ctx->getVal(getFirstName()))->getAllocatedType()->isArrayTy())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:122:17: note: Assuming the object is not a 'CastReturnType'
  122 |     auto *val = dyn_cast<AllocaInst>(ctx->getVal(getFirstName()));
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:122:5: note: 'val' initialized to a null pointer value
  122 |     auto *val = dyn_cast<AllocaInst>(ctx->getVal(getFirstName()));
      |     ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:123:33: note: Called C++ object pointer is null
  123 |     const Type *allocatedType = val->getAllocatedType();
      |                                 ^~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:124:9: warning: 'isa<llvm::StructType, const llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  124 |     if (llvm::isa<StructType>(allocatedType))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:126:16: warning: 'handleStructName' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  126 |         return handleStructName(this, ctx);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:76:8: note: resolves to this declaration
   76 | Value *handleStructName(const QualifiedName *name, inter_gen::InterGenContext *ctx);
      |        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:128:26: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     if (allocatedType == PointerType::get(IntegerType::get(LLVMCTX, 8), 0))
      |                          ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:128:43: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  128 |     if (allocatedType == PointerType::get(IntegerType::get(LLVMCTX, 8), 0))
      |                                           ^
/usr/include/llvm/IR/DerivedTypes.h:64:23: note: resolves to this declaration
   64 |   static IntegerType *get(LLVMContext &C, unsigned NumBits);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:128:69: warning: 8 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  128 |     if (allocatedType == PointerType::get(IntegerType::get(LLVMCTX, 8), 0))
      |                                                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:130:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  130 |         return BUILDER.CreateInBoundsGEP(PointerType::getInt8Ty(LLVMCTX), ctx->getVal(getFirstName()),
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1876:28: note: default parameter was declared here
 1876 |                            const Twine &Name = "") {
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:130:42: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  130 |         return BUILDER.CreateInBoundsGEP(PointerType::getInt8Ty(LLVMCTX), ctx->getVal(getFirstName()),
      |                                          ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:131:43: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  131 |                                          {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                           ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:131:43: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |                                          {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                           ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:131:60: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  131 |                                          {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                                            ^
/usr/include/llvm/IR/DerivedTypes.h:64:23: note: resolves to this declaration
   64 |   static IntegerType *get(LLVMContext &C, unsigned NumBits);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:131:86: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  131 |                                          {ConstantInt::get(IntegerType::get(LLVMCTX, 64), 0)});
      |                                                                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:137:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  137 | Value *handleStructName(const QualifiedName *name, inter_gen::InterGenContext *ctx)
      | ~~~~~~~^                                                                           
      | auto                                                                                -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:139:43: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  139 |     auto [value, metadata] = ctx->locals()[name->getFirstName()];
      |                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:9: warning: no header providing "gepMapping" is directly included [misc-include-cleaner]
  143 |     if (gepMapping->contains(value))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:145:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         structName = dyn_cast<StructType>(
      |                    ^
/usr/include/llvm/ADT/StringRef.h:50:26: note: resolves to this declaration
   50 |   class LLVM_GSL_POINTER StringRef {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:145:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
  145 |         structName = dyn_cast<StructType>(
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1279:12: note: Calling 'QualifiedName::codeGen'
 1279 |     return name->codeGen(ctx);
      |            ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:19: note: Assuming 'parentFun' is null
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |                   ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:5: note: Taking false branch
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:9: note: Assuming the condition is false
   93 |     if (!ctx->getVal(getFirstName()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:5: note: Taking false branch
   93 |     if (!ctx->getVal(getFirstName()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:9: note: Assuming the condition is true
   99 |     if (name_parts->size() > 1)
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:5: note: Taking true branch
   99 |     if (name_parts->size() > 1)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:101:16: note: Calling 'handleStructName'
  101 |         return handleStructName(this, ctx);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:9: note: Assuming the condition is true
  143 |     if (gepMapping->contains(value))
      |         ^
/home/napbad/tmp/dap/src/core/common/global.h:73:20: note: expanded from macro 'gepMapping'
   73 | #define gepMapping gepMapping_d
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:5: note: Taking true branch
  143 |     if (gepMapping->contains(value))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:146:17: note: Assuming the object is a 'CastReturnType'
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:145:22: note: Assuming the object is not a 'CastReturnType'
  145 |         structName = dyn_cast<StructType>(
      |                      ^~~~~~~~~~~~~~~~~~~~~
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:145:22: note: Called C++ object pointer is null
  145 |         structName = dyn_cast<StructType>(
      |                      ^~~~~~~~~~~~~~~~~~~~~
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:145:22: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  145 |         structName = dyn_cast<StructType>(
      |                      ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:146:17: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1279:12: note: Calling 'QualifiedName::codeGen'
 1279 |     return name->codeGen(ctx);
      |            ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:19: note: Assuming 'parentFun' is null
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |                   ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:5: note: Taking false branch
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:9: note: Assuming the condition is false
   93 |     if (!ctx->getVal(getFirstName()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:5: note: Taking false branch
   93 |     if (!ctx->getVal(getFirstName()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:9: note: Assuming the condition is true
   99 |     if (name_parts->size() > 1)
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:5: note: Taking true branch
   99 |     if (name_parts->size() > 1)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:101:16: note: Calling 'handleStructName'
  101 |         return handleStructName(this, ctx);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:9: note: Assuming the condition is true
  143 |     if (gepMapping->contains(value))
      |         ^
/home/napbad/tmp/dap/src/core/common/global.h:73:20: note: expanded from macro 'gepMapping'
   73 | #define gepMapping gepMapping_d
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:5: note: Taking true branch
  143 |     if (gepMapping->contains(value))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:146:17: note: Assuming the object is not a 'CastReturnType'
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:146:17: note: Called C++ object pointer is null
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:146:17: warning: 'dyn_cast<llvm::AllocaInst, llvm::AllocaInst>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  146 |                 dyn_cast<AllocaInst>(gepMapping->at(value))->getAllocatedType())
      |                 ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:151:40: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  151 |         const AllocaInst *allocaInst = dyn_cast<AllocaInst>(ctx->locals()[name->getFirstName()].first);
      |                                        ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:151:74: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  151 |         const AllocaInst *allocaInst = dyn_cast<AllocaInst>(ctx->locals()[name->getFirstName()].first);
      |                                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:152:14: warning: implicit conversion 'const AllocaInst *' -> 'bool' [readability-implicit-bool-conversion]
  152 |         if (!allocaInst)
      |             ~^         
      |                         == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:154:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  154 |             REPORT_ERROR("Unknown variable name " + name->getFirstName(), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:154:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             REPORT_ERROR("Unknown variable name " + name->getFirstName(), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:154:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             REPORT_ERROR("Unknown variable name " + name->getFirstName(), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:154:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             REPORT_ERROR("Unknown variable name " + name->getFirstName(), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:154:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  154 |             REPORT_ERROR("Unknown variable name " + name->getFirstName(), __FILE__, __LINE__);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:157:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())
      |                    ^
/usr/include/llvm/ADT/StringRef.h:50:26: note: resolves to this declaration
   50 |   class LLVM_GSL_POINTER StringRef {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:157:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
  157 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1279:12: note: Calling 'QualifiedName::codeGen'
 1279 |     return name->codeGen(ctx);
      |            ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:19: note: Assuming 'parentFun' is null
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |                   ^~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:82:5: note: Taking false branch
   82 |     if (Function *parentFun = ctx->currBlock()->getParent())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:9: note: Assuming the condition is false
   93 |     if (!ctx->getVal(getFirstName()))
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:93:5: note: Taking false branch
   93 |     if (!ctx->getVal(getFirstName()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:9: note: Assuming the condition is true
   99 |     if (name_parts->size() > 1)
      |         ^~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:99:5: note: Taking true branch
   99 |     if (name_parts->size() > 1)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:101:16: note: Calling 'handleStructName'
  101 |         return handleStructName(this, ctx);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:9: note: Assuming the condition is false
  143 |     if (gepMapping->contains(value))
      |         ^
/home/napbad/tmp/dap/src/core/common/global.h:73:20: note: expanded from macro 'gepMapping'
   73 | #define gepMapping gepMapping_d
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:143:5: note: Taking false branch
  143 |     if (gepMapping->contains(value))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:151:40: note: Assuming field 'first' is a 'CastReturnType'
  151 |         const AllocaInst *allocaInst = dyn_cast<AllocaInst>(ctx->locals()[name->getFirstName()].first);
      |                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:152:14: note: 'allocaInst' is non-null
  152 |         if (!allocaInst)
      |              ^~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:152:9: note: Taking false branch
  152 |         if (!allocaInst)
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:157:22: note: Assuming the object is not a 'CastReturnType'
  157 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:157:22: note: Called C++ object pointer is null
  157 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:157:22: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  157 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())
      |                      ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:162:61: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  162 |     const inter_gen::StructMetaData *metaData = ctx->structs[str];
      |                                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:165:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  165 |     for (int i = 1; i < name->name_parts->size(); ++i)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:172:13: warning: 'isa<llvm::StructType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  172 |             llvm::isa<StructType>(elementType))
      |             ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:175:60: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  175 |                                                  "struct_" + metaData->getName());
      |                                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:177:18: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  177 |         else if (llvm::isa<PointerType>(elementType))
      |                  ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:179:97: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  179 |             currentPtr = BUILDER.CreateStructGEP(elementType, currentPtr, fieldIndex, "struct_" + metaData->getName());
      |                                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:180:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  180 |             currentPtr = BUILDER.CreateBitCast(currentPtr, elementType);
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2111:24: note: default parameter was declared here
 2111 |                        const Twine &Name = "") {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:186:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  186 |                                             "struct_" + metaData->getName());
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:194:44: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  194 |             const auto *nestedStructType = dyn_cast<StructType>(metaData->getStructType()->getElementType(fieldIndex));
      |                                            ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:195:18: warning: implicit conversion 'llvm::StructType const *' -> 'bool' [readability-implicit-bool-conversion]
  195 |             if (!nestedStructType)
      |                 ~^               
      |                                   == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:200:36: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |             metaData = ctx->structs[nestedStructType->getStructName().str()];
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:201:18: warning: implicit conversion 'const inter_gen::StructMetaData *' -> 'bool' [readability-implicit-bool-conversion]
  201 |             if (!metaData)
      |                 ~^       
      |                           == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:203:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  203 |                 REPORT_ERROR("Unknown struct name " + str, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:203:17: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |                 REPORT_ERROR("Unknown struct name " + str, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:203:17: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |                 REPORT_ERROR("Unknown struct name " + str, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:203:17: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |                 REPORT_ERROR("Unknown struct name " + str, __FILE__, __LINE__);
      |                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:203:53: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  203 |                 REPORT_ERROR("Unknown struct name " + str, __FILE__, __LINE__);
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:209:17: warning: implicit conversion 'mapped_type' (aka 'dap::inter_gen::StructMetaData *') -> 'bool' [readability-implicit-bool-conversion]
  209 |             if (ctx->structs[name->getName(i)])
      |                 ^                             
      |                                                != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:209:29: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  209 |             if (ctx->structs[name->getName(i)])
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:213:58: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  213 |                                                "struct_" + metaData->getName());
      |                                                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:215:20: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  215 |             return BUILDER.CreateGEP(metaData->getFieldType(name->getName(i)), currentPtr,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:216:38: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  216 |                                      ConstantInt::get(Type::getInt32Ty(LLVMCTX), fieldIndex), name->getName(i));
      |                                      ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:216:38: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |                                      ConstantInt::get(Type::getInt32Ty(LLVMCTX), fieldIndex), name->getName(i));
      |                                      ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:216:55: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  216 |                                      ConstantInt::get(Type::getInt32Ty(LLVMCTX), fieldIndex), name->getName(i));
      |                                                       ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:220:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  220 |             REPORT_ERROR("Unknown variable name " + name->getName(i), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:220:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |             REPORT_ERROR("Unknown variable name " + name->getName(i), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:220:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |             REPORT_ERROR("Unknown variable name " + name->getName(i), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:220:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |             REPORT_ERROR("Unknown variable name " + name->getName(i), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:220:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  220 |             REPORT_ERROR("Unknown variable name " + name->getName(i), __FILE__, __LINE__);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:226:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 | Value *handleArgumentArrayExpr(const ArrayExpr *Expr, Value *arrVal, inter_gen::InterGenContext *ctx,
      | ~~~~~~~^
      | auto 
  227 |                                const Function *fun, Value *idxVal)
      |                                                                   
      |                                                                    -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:229:17: warning: 'dyn_cast<llvm::Argument, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  229 |     auto *arr = dyn_cast<Argument>(arrVal);
      |                 ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:232:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  232 |     if (llvm::isa<PointerType>(ptrType))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:236:9: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  236 |         for (const auto funMetaData : ctx->metaData->getFunctions())
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:236:14: warning: 'const auto funMetaData' can be declared as 'auto *const funMetaData' [llvm-qualified-auto,readability-qualified-auto]
  236 |         for (const auto funMetaData : ctx->metaData->getFunctions())
      |              ^~~~~~~~~~
      |              auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:236:37: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |         for (const auto funMetaData : ctx->metaData->getFunctions())
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:236:37: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |         for (const auto funMetaData : ctx->metaData->getFunctions())
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:236:37: warning: 'operator==<dap::inter_gen::FunctionMetaData **, std::vector<dap::inter_gen::FunctionMetaData *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  236 |         for (const auto funMetaData : ctx->metaData->getFunctions())
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:238:40: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  238 |             if (funMetaData->getName() == fun->getName() && funMetaData->getArg(Expr->name->getName()))
      |                                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:238:61: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  238 |             if (funMetaData->getName() == fun->getName() && funMetaData->getArg(Expr->name->getName()))
      |                                                             ^                                         
      |                                                             (                                          != nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:241:21: warning: return value from dyn_cast<> not used [llvm-prefer-isa-or-dyn-cast-in-conditionals]
  241 |                 if (dyn_cast<PointerType_d>(baseType))
      |                     ^~~~~~~~
      |                     isa
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:241:21: warning: 'dyn_cast<PointerType_d, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:241:21: warning: implicit conversion 'CastReturnType' (aka 'PointerType_d *') -> 'bool' [readability-implicit-bool-conversion]
  241 |                 if (dyn_cast<PointerType_d>(baseType))
      |                     ^                                
      |                                                       != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:243:48: warning: 'dyn_cast<PointerType_d, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  243 |                     const PointerType_d *ptr = dyn_cast<PointerType_d>(baseType);
      |                                                ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:248:14: warning: implicit conversion 'Type *' -> 'bool' [readability-implicit-bool-conversion]
  248 |         if (!baseType)
      |             ~^       
      |                       == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:250:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  250 |             REPORT_ERROR("Unknown base type", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:250:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  250 |             REPORT_ERROR("Unknown base type", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:250:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  250 |             REPORT_ERROR("Unknown base type", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:250:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  250 |             REPORT_ERROR("Unknown base type", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:255:37: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  255 |         const std::vector indices = {
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:258:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  258 |         Value *ptrAdd = BUILDER.CreatePtrAdd(arr, idxVal, "array_access_ptr");
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1978:23: note: default parameter was declared here
 1978 |                       bool IsInBounds = false) {
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:262:9: warning: 'isa<llvm::ArrayType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  262 |     if (llvm::isa<ArrayType>(ptrType))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:264:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  264 |         Value *arrayPtr = BUILDER.CreateLoad(ptrType->getPointerTo(), arr, "array_ptr");
      |                                              ^
/usr/include/llvm/IR/Type.h:491:29: note: default parameter was declared here
  491 |   PointerType *getPointerTo(unsigned AddrSpace = 0) const;
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:267:20: warning: no header providing "std::vector" is directly included [misc-include-cleaner]
   29 |         const std::vector<Value *> indices = {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:267:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  267 |         const std::vector<Value *> indices = {
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:268:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  268 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |             ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:268:13: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |             ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:268:30: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  268 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                              ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:271:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  271 |         Value *elementValue = BUILDER.CreateGEP(ptrType, arrayPtr, indices, "array_access");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:275:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  275 |     REPORT_ERROR("Variable must be of array type or pointerType", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:275:5: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  275 |     REPORT_ERROR("Variable must be of array type or pointerType", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:275:5: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  275 |     REPORT_ERROR("Variable must be of array type or pointerType", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:275:5: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  275 |     REPORT_ERROR("Variable must be of array type or pointerType", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:279:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  279 | Value *handleAllocaArrayExpr(Value *arrVal, inter_gen::InterGenContext *ctx,
      | ~~~~~~~^
      | auto 
  280 |                              Value *idxVal)
      |                                            
      |                                             -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:282:17: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  282 |     auto *arr = dyn_cast<AllocaInst>(arrVal);
      |                 ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:283:9: warning: 'isa<llvm::ArrayType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  283 |     if (llvm::isa<ArrayType>(arr->getAllocatedType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:286:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  286 |         Value *arrayPtr = BUILDER.CreateLoad(arrType->getPointerTo(), arr, "array_ptr");
      |                                              ^
/usr/include/llvm/IR/Type.h:491:29: note: default parameter was declared here
  491 |   PointerType *getPointerTo(unsigned AddrSpace = 0) const;
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:289:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  289 |         const std::vector<Value *> indices = {
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:290:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  290 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |             ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:290:13: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  290 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |             ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:290:30: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  290 |             ConstantInt::get(Type::getInt32Ty(LLVMCTX), 0),
      |                              ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:293:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  293 |         Value *elementValue = BUILDER.CreateGEP(arrType, arrayPtr, indices, "array_access");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:298:10: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  298 |     if (!llvm::isa<PointerType>(arrType))
      |          ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:300:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  300 |         REPORT_ERROR("Variable must be of array type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:300:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |         REPORT_ERROR("Variable must be of array type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:300:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |         REPORT_ERROR("Variable must be of array type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:300:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  300 |         REPORT_ERROR("Variable must be of array type", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:305:42: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  305 |     Value *arrayPtr = BUILDER.CreateLoad(arrType->getPointerTo(), arr, "array_ptr");
      |                                          ^
/usr/include/llvm/IR/Type.h:491:29: note: default parameter was declared here
  491 |   PointerType *getPointerTo(unsigned AddrSpace = 0) const;
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:308:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  308 |     const std::vector indices = {
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:312:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  312 |     Value *elementValue = BUILDER.CreateGEP(arrType, arrayPtr, indices, "array_access");
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:317:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  317 | Value *ArrayExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~           ^                                       
      | auto                                                       -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:321:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  321 |     if (!indexValue)
      |         ~^         
      |                     == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:323:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  323 |         REPORT_ERROR("Error in generating code for the index Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:323:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         REPORT_ERROR("Error in generating code for the index Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:323:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         REPORT_ERROR("Error in generating code for the index Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:323:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  323 |         REPORT_ERROR("Error in generating code for the index Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:326:10: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  326 |     if (!llvm::isa<IntegerType>(indexValue->getType()) && !llvm::isa<ConstantInt>(indexValue) &&
      |          ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:326:60: warning: 'isa<llvm::ConstantInt, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  326 |     if (!llvm::isa<IntegerType>(indexValue->getType()) && !llvm::isa<ConstantInt>(indexValue) &&
      |                                                            ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:327:10: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  327 |         !llvm::isa<IntegerType>(indexValue->getType()))
      |          ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:329:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  329 |         REPORT_ERROR("Index Expression must evaluate to an integer", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:329:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  329 |         REPORT_ERROR("Index Expression must evaluate to an integer", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:329:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  329 |         REPORT_ERROR("Index Expression must evaluate to an integer", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:329:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  329 |         REPORT_ERROR("Index Expression must evaluate to an integer", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:333:10: warning: 'isa<llvm::AllocaInst, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     if (!llvm::isa<AllocaInst>(arrVal) && !llvm::isa<Argument>(arrVal))
      |          ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:333:44: warning: 'isa<llvm::Argument, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  333 |     if (!llvm::isa<AllocaInst>(arrVal) && !llvm::isa<Argument>(arrVal))
      |                                            ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:335:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  335 |         REPORT_ERROR("Mapped value must be an alloca instruction or argument", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:335:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  335 |         REPORT_ERROR("Mapped value must be an alloca instruction or argument", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:335:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  335 |         REPORT_ERROR("Mapped value must be an alloca instruction or argument", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:335:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  335 |         REPORT_ERROR("Mapped value must be an alloca instruction or argument", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:339:9: warning: 'isa<llvm::Argument, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  339 |     if (llvm::isa<Argument>(arrVal))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:341:16: warning: 'handleArgumentArrayExpr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  341 |         return handleArgumentArrayExpr(this, arrVal, ctx, ctx->currBlock()->getParent(), indexValue);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:226:8: note: resolves to this declaration
  226 | Value *handleArgumentArrayExpr(const ArrayExpr *Expr, Value *arrVal, inter_gen::InterGenContext *ctx,
      |        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:343:9: warning: 'isa<llvm::AllocaInst, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  343 |     if (llvm::isa<AllocaInst>(arrVal))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:345:16: warning: 'handleAllocaArrayExpr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  345 |         return handleAllocaArrayExpr(arrVal, ctx, indexValue);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:279:8: note: resolves to this declaration
  279 | Value *handleAllocaArrayExpr(Value *arrVal, inter_gen::InterGenContext *ctx,
      |        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:348:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  348 |     REPORT_ERROR("Unknown variable type", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:348:5: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  348 |     REPORT_ERROR("Unknown variable type", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:348:5: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  348 |     REPORT_ERROR("Unknown variable type", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:348:5: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  348 |     REPORT_ERROR("Unknown variable type", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:353:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  353 | Value *PointerExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~             ^                                       
      | auto                                                         -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:358:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  358 |     if (!base_value)
      |         ~^         
      |                     == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:380:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  380 |     BUILDER.CreateStore(base_value, alloca);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:387:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  387 | Value *BinaryExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:387:20: warning: function 'codeGen' has cognitive complexity of 46 (threshold 25) [readability-function-cognitive-complexity]
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:394:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  394 |     if (!lhsVal || !rhsVal)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:394:17: note: +1
  394 |     if (!lhsVal || !rhsVal)
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:397:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  397 |     if (llvm::isa<PointerType>(lhsVal->getType()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:401:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  401 |     if (llvm::isa<PointerType>(rhsVal->getType()))
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:408:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  408 |     if (const auto rhsType = rhsVal->getType(); lhsType != rhsType)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:410:9: note: +2, including nesting penalty of 1, nesting level increased to 2
  410 |         if (llvm::isa<IntegerType>(lhsType) && llvm::isa<IntegerType>(rhsType))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:410:45: note: +1
  410 |         if (llvm::isa<IntegerType>(lhsType) && llvm::isa<IntegerType>(rhsType))
      |                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:412:13: note: +3, including nesting penalty of 2, nesting level increased to 3
  412 |             if (lhsType->getIntegerBitWidth() > rhsType->getIntegerBitWidth())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:416:18: note: +1, nesting level increased to 3
  416 |             else if (lhsType->getIntegerBitWidth() < rhsType->getIntegerBitWidth())
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:421:9: note: +1, nesting level increased to 2
  421 |         else
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:431:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  431 |     switch (op)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:436:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  436 |                    ? BUILDER.CreateFAdd(lhsVal, rhsVal, "addtmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:440:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  440 |                    ? BUILDER.CreateFSub(lhsVal, rhsVal, "subtmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:444:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  444 |                    ? BUILDER.CreateFMul(lhsVal, rhsVal, "multmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:448:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  448 |                    ? BUILDER.CreateFDiv(lhsVal, rhsVal, "divtmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:452:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  452 |                    ? BUILDER.CreateFRem(lhsVal, rhsVal, "modtmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:458:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  458 |                    ? BUILDER.CreateFCmpOLT(lhsVal, rhsVal, "ltcmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:462:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  462 |                    ? BUILDER.CreateFCmpOGT(lhsVal, rhsVal, "gtcmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:466:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  466 |                    ? BUILDER.CreateFCmpOLE(lhsVal, rhsVal, "lecmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:470:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  470 |                    ? BUILDER.CreateFCmpOGE(lhsVal, rhsVal, "gecmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:474:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  474 |                    ? BUILDER.CreateFCmpOEQ(lhsVal, rhsVal, "eqcmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:478:20: note: +2, including nesting penalty of 1, nesting level increased to 2
  478 |                    ? BUILDER.CreateFCmpONE(lhsVal, rhsVal, "necmp")
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:502:29: note: +2, including nesting penalty of 1, nesting level increased to 2
  502 |                             ? BUILDER.CreateFAdd(lhsVal, rhsVal, "addassigntmp")
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:508:29: note: +2, including nesting penalty of 1, nesting level increased to 2
  508 |                             ? BUILDER.CreateFSub(lhsVal, rhsVal, "subassigntmp")
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:514:29: note: +2, including nesting penalty of 1, nesting level increased to 2
  514 |                             ? BUILDER.CreateFMul(lhsVal, rhsVal, "mulassigntmp")
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:520:29: note: +2, including nesting penalty of 1, nesting level increased to 2
  520 |                             ? BUILDER.CreateFDiv(lhsVal, rhsVal, "divassigntmp")
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:526:29: note: +2, including nesting penalty of 1, nesting level increased to 2
  526 |                             ? BUILDER.CreateFRem(lhsVal, rhsVal, "modassigntmp")
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:394:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  394 |     if (!lhsVal || !rhsVal)
      |         ~^
      |         (       == nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:394:21: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  394 |     if (!lhsVal || !rhsVal)
      |                    ~^     
      |                    (       == nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:394:28: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  394 |     if (!lhsVal || !rhsVal)
      |                            ^
      |                             {
  395 |         return nullptr;
      |                        
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:397:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  397 |     if (llvm::isa<PointerType>(lhsVal->getType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:399:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  399 |         lhsVal = BUILDER.CreatePtrToInt(lhsVal, Type::getInt64Ty(LLVMCTX));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2101:25: note: default parameter was declared here
 2101 |                         const Twine &Name = "") {
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:399:49: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |         lhsVal = BUILDER.CreatePtrToInt(lhsVal, Type::getInt64Ty(LLVMCTX));
      |                                                 ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:401:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  401 |     if (llvm::isa<PointerType>(rhsVal->getType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:403:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  403 |         rhsVal = BUILDER.CreatePtrToInt(rhsVal, Type::getInt64Ty(LLVMCTX));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2101:25: note: default parameter was declared here
 2101 |                         const Twine &Name = "") {
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:403:49: warning: 'getInt64Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  403 |         rhsVal = BUILDER.CreatePtrToInt(rhsVal, Type::getInt64Ty(LLVMCTX));
      |                                                 ^
/usr/include/llvm/IR/Type.h:464:23: note: resolves to this declaration
  464 |   static IntegerType *getInt64Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:407:5: warning: 'const auto lhsType' can be declared as 'auto *const lhsType' [llvm-qualified-auto,readability-qualified-auto]
  407 |     const auto lhsType = lhsVal->getType();
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:408:9: warning: 'const auto rhsType' can be declared as 'auto *const rhsType' [llvm-qualified-auto,readability-qualified-auto]
  408 |     if (const auto rhsType = rhsVal->getType(); lhsType != rhsType)
      |         ^~~~~~~~~~
      |         auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:410:13: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  410 |         if (llvm::isa<IntegerType>(lhsType) && llvm::isa<IntegerType>(rhsType))
      |             ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:410:48: warning: 'isa<llvm::IntegerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  410 |         if (llvm::isa<IntegerType>(lhsType) && llvm::isa<IntegerType>(rhsType))
      |                                                ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:423:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  423 |             REPORT_ERROR("Type mismatch in binary Expression", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:423:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  423 |             REPORT_ERROR("Type mismatch in binary Expression", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:423:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  423 |             REPORT_ERROR("Type mismatch in binary Expression", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:423:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  423 |             REPORT_ERROR("Type mismatch in binary Expression", __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:436:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  436 |                    ? BUILDER.CreateFAdd(lhsVal, rhsVal, "addtmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1528:21: note: default parameter was declared here
 1528 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:437:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  437 |                    : BUILDER.CreateAdd(lhsVal, rhsVal, "addtmp");
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1322:20: note: default parameter was declared here
 1322 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:440:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  440 |                    ? BUILDER.CreateFSub(lhsVal, rhsVal, "subtmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1555:21: note: default parameter was declared here
 1555 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:441:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  441 |                    : BUILDER.CreateSub(lhsVal, rhsVal, "subtmp");
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1339:20: note: default parameter was declared here
 1339 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:444:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  444 |                    ? BUILDER.CreateFMul(lhsVal, rhsVal, "multmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1582:21: note: default parameter was declared here
 1582 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:445:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  445 |                    : BUILDER.CreateMul(lhsVal, rhsVal, "multmp");
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1356:20: note: default parameter was declared here
 1356 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:448:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  448 |                    ? BUILDER.CreateFDiv(lhsVal, rhsVal, "divtmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1609:21: note: default parameter was declared here
 1609 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:449:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  449 |                    : BUILDER.CreateSDiv(lhsVal, rhsVal, "divtmp");
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1386:21: note: default parameter was declared here
 1386 |                     bool isExact = false) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:452:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  452 |                    ? BUILDER.CreateFRem(lhsVal, rhsVal, "modtmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1636:21: note: default parameter was declared here
 1636 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:458:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  458 |                    ? BUILDER.CreateFCmpOLT(lhsVal, rhsVal, "ltcmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2280:24: note: default parameter was declared here
 2280 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:462:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  462 |                    ? BUILDER.CreateFCmpOGT(lhsVal, rhsVal, "gtcmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2270:24: note: default parameter was declared here
 2270 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:466:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  466 |                    ? BUILDER.CreateFCmpOLE(lhsVal, rhsVal, "lecmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2285:24: note: default parameter was declared here
 2285 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:470:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  470 |                    ? BUILDER.CreateFCmpOGE(lhsVal, rhsVal, "gecmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2275:24: note: default parameter was declared here
 2275 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:474:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  474 |                    ? BUILDER.CreateFCmpOEQ(lhsVal, rhsVal, "eqcmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2265:24: note: default parameter was declared here
 2265 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:478:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  478 |                    ? BUILDER.CreateFCmpONE(lhsVal, rhsVal, "necmp")
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2290:24: note: default parameter was declared here
 2290 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:491:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  491 |         return BUILDER.CreateShl(lhsVal, rhsVal, "lshifttmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1411:20: note: default parameter was declared here
 1411 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:493:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  493 |         return BUILDER.CreateAShr(lhsVal, rhsVal, "rshifttmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1451:21: note: default parameter was declared here
 1451 |                     bool isExact = false) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:495:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  495 |         return BUILDER.CreateLShr(lhsVal, rhsVal, "urshifttmp");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1432:21: note: default parameter was declared here
 1432 |                     bool isExact = false) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:499:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  499 |         return BUILDER.CreateStore(rhsVal, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:502:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  502 |                             ? BUILDER.CreateFAdd(lhsVal, rhsVal, "addassigntmp")
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1528:21: note: default parameter was declared here
 1528 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:503:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  503 |                             : BUILDER.CreateAdd(lhsVal, rhsVal, "addassigntmp");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1322:20: note: default parameter was declared here
 1322 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:504:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  504 |         return BUILDER.CreateStore(result, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:504:24: warning: 1st argument 'result' (passed to 'Val') looks like it might be swapped with the 2nd, 'lhsVal' (passed to 'Ptr') [readability-suspicious-call-argument]
  504 |         return BUILDER.CreateStore(result, lhsVal);
      |                        ^           ~~~~~~  ~~~~~~
/usr/include/llvm/IR/IRBuilder.h:1802:14: note: in the call to 'CreateStore', declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |              ^                  ~~~         ~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:508:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  508 |                             ? BUILDER.CreateFSub(lhsVal, rhsVal, "subassigntmp")
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1555:21: note: default parameter was declared here
 1555 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:509:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  509 |                             : BUILDER.CreateSub(lhsVal, rhsVal, "subassigntmp");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1339:20: note: default parameter was declared here
 1339 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:510:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  510 |         return BUILDER.CreateStore(result, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:510:24: warning: 1st argument 'result' (passed to 'Val') looks like it might be swapped with the 2nd, 'lhsVal' (passed to 'Ptr') [readability-suspicious-call-argument]
  510 |         return BUILDER.CreateStore(result, lhsVal);
      |                        ^           ~~~~~~  ~~~~~~
/usr/include/llvm/IR/IRBuilder.h:1802:14: note: in the call to 'CreateStore', declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |              ^                  ~~~         ~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:514:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  514 |                             ? BUILDER.CreateFMul(lhsVal, rhsVal, "mulassigntmp")
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1582:21: note: default parameter was declared here
 1582 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:515:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  515 |                             : BUILDER.CreateMul(lhsVal, rhsVal, "mulassigntmp");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1356:20: note: default parameter was declared here
 1356 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:516:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  516 |         return BUILDER.CreateStore(result, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:516:24: warning: 1st argument 'result' (passed to 'Val') looks like it might be swapped with the 2nd, 'lhsVal' (passed to 'Ptr') [readability-suspicious-call-argument]
  516 |         return BUILDER.CreateStore(result, lhsVal);
      |                        ^           ~~~~~~  ~~~~~~
/usr/include/llvm/IR/IRBuilder.h:1802:14: note: in the call to 'CreateStore', declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |              ^                  ~~~         ~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:520:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  520 |                             ? BUILDER.CreateFDiv(lhsVal, rhsVal, "divassigntmp")
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1609:21: note: default parameter was declared here
 1609 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:521:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  521 |                             : BUILDER.CreateSDiv(lhsVal, rhsVal, "divassigntmp");
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1386:21: note: default parameter was declared here
 1386 |                     bool isExact = false) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:522:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  522 |         return BUILDER.CreateStore(result, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:522:24: warning: 1st argument 'result' (passed to 'Val') looks like it might be swapped with the 2nd, 'lhsVal' (passed to 'Ptr') [readability-suspicious-call-argument]
  522 |         return BUILDER.CreateStore(result, lhsVal);
      |                        ^           ~~~~~~  ~~~~~~
/usr/include/llvm/IR/IRBuilder.h:1802:14: note: in the call to 'CreateStore', declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |              ^                  ~~~         ~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:526:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  526 |                             ? BUILDER.CreateFRem(lhsVal, rhsVal, "modassigntmp")
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1636:21: note: default parameter was declared here
 1636 |                     MDNode *FPMD = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:528:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  528 |         return BUILDER.CreateStore(result, lhsVal);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:528:24: warning: 1st argument 'result' (passed to 'Val') looks like it might be swapped with the 2nd, 'lhsVal' (passed to 'Ptr') [readability-suspicious-call-argument]
  528 |         return BUILDER.CreateStore(result, lhsVal);
      |                        ^           ~~~~~~  ~~~~~~
/usr/include/llvm/IR/IRBuilder.h:1802:14: note: in the call to 'CreateStore', declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |              ^                  ~~~         ~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:532:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  532 |         REPORT_ERROR("Unknown binary operator", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:532:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  532 |         REPORT_ERROR("Unknown binary operator", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:532:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  532 |         REPORT_ERROR("Unknown binary operator", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:532:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  532 |         REPORT_ERROR("Unknown binary operator", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:537:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  537 | Value *ListExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~          ^                                       
      | auto                                                      -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:539:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  539 |     if (elements->empty())
      |                           ^
      |                            {
  540 |         return nullptr;
      |                        
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:545:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  545 |     for (const auto &e : *elements)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:545:22: warning: variable name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  545 |     for (const auto &e : *elements)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:545:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  545 |     for (const auto &e : *elements)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:545:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  545 |     for (const auto &e : *elements)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:545:24: warning: 'operator==<dap::parser::Expr **, std::vector<dap::parser::Expr *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  545 |     for (const auto &e : *elements)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:550:24: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  550 |     ArrayType *array = ArrayType::get(firstVal->getType(), vals.size());
      |                        ^
/usr/include/llvm/IR/DerivedTypes.h:387:21: note: resolves to this declaration
  387 |   static ArrayType *get(Type *ElementType, uint64_t NumElements);
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:552:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  552 |     for (unsigned i = 0; i < vals.size(); i++)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:554:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  554 |         BUILDER.CreateStore(vals[i], BUILDER.CreateGEP(firstVal->getType(), array_val,
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:554:33: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  554 |         BUILDER.CreateStore(vals[i], BUILDER.CreateGEP(firstVal->getType(), array_val,
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:554:38: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  554 |         BUILDER.CreateStore(vals[i], BUILDER.CreateGEP(firstVal->getType(), array_val,
      |                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:555:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  555 |                                                        {ConstantInt::get(LLVMCTX, APInt(INT_BIT_WIDTH, i))},
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:555:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  555 |                                                        {ConstantInt::get(LLVMCTX, APInt(INT_BIT_WIDTH, i))},
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:556:69: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  556 |                                                        "list_elem_" + std::to_string(i)));
      |                                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:556:71: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  556 |                                                        "list_elem_" + std::to_string(i)));
      |                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4259:3: note: resolves to this declaration
 4259 |   to_string(unsigned __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:556:76: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  556 |                                                        "list_elem_" + std::to_string(i)));
      |                                                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:563:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  563 | Value *CallExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~          ^                                       
      | auto                                                      -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:570:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  570 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:570:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  570 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:570:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  570 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:570:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  570 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:570:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  570 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:577:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  577 |         REPORT_ERROR("Incorrect arguments passed", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:577:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |         REPORT_ERROR("Incorrect arguments passed", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:577:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |         REPORT_ERROR("Incorrect arguments passed", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:577:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |         REPORT_ERROR("Incorrect arguments passed", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:582:25: warning: 'handleSys' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  582 |     if (CallInst *res = handleSys(this, ctx, calleeFun))
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:231:11: note: resolves to this declaration
  231 | CallInst *handleSys(const parser::CallExpr *call, InterGenContext *ctx, Function *fun);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:590:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  590 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:590:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:590:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:590:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:590:54: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |         REPORT_ERROR("Unknown function referenced: " + callee->getName(), __FILE__, __LINE__);
      |                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:596:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  596 |     for (const auto &e : args)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:596:22: warning: variable name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  596 |     for (const auto &e : args)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:596:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |     for (const auto &e : args)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:596:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |     for (const auto &e : args)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:596:24: warning: 'operator==<dap::parser::Expr **, std::vector<dap::parser::Expr *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |     for (const auto &e : args)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:601:50: warning: 'dyn_cast<PointerType_d, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  601 |             const PointerType_d *pointerType_d = dyn_cast<PointerType_d>(argType);
      |                                                  ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:602:13: warning: no header providing "expectDerefType_d" is directly included [misc-include-cleaner]
   34 |             expectDerefType_d->push(pointerType_d->getBaseTy());
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:609:14: warning: implicit conversion 'value_type' (aka 'llvm::Value *') -> 'bool' [readability-implicit-bool-conversion]
  609 |         if (!args_v.back())
      |             ~^            
      |                            == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:13: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:13: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:13: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |             ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:47: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |                                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:49: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:615:54: warning: no header providing "std::to_string" is directly included [misc-include-cleaner]
  615 |             REPORT_ERROR("Error in argument " + std::to_string(argIdx - 1), __FILE__, __LINE__);
      |                                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:625:39: warning: 'getVoidTy' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  625 |     if (calleeFun->getReturnType() == Type::getVoidTy(LLVMCTX))
      |                                       ^
/usr/include/llvm/IR/Type.h:446:16: note: resolves to this declaration
  446 |   static Type *getVoidTy(LLVMContext &C);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:627:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  627 |         return BUILDER.CreateCall(calleeFun, args_v);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:24: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:629:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  629 |     return BUILDER.CreateCall(calleeFun, args_v, "calltmp");
      |            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2419:48: note: default parameter was declared here
 2419 |                        const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                                                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:633:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  633 | Function *ProtoDecl::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~~~~           ^                                       
      | auto                                                          -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  638 |     for (const auto &p : params)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:22: warning: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  638 |     for (const auto &p : params)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  638 |     for (const auto &p : params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  638 |     for (const auto &p : params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:24: warning: 'operator==<dap::parser::VarDecl **, std::vector<dap::parser::VarDecl *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  638 |     for (const auto &p : params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:638:33: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  638 |     for (const auto &p : params)
      |                                 ^
      |                                  {
  639 |         args_types.push_back(util::typeOf(*p->getType(), ctx));
      |                                                                
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:639:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  639 |         args_types.push_back(util::typeOf(*p->getType(), ctx));
      |                              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:639:30: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  639 |         args_types.push_back(util::typeOf(*p->getType(), ctx));
      |                              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:642:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  642 |     FunctionType *funTy = FunctionType::get(util::typeOf(*return_type, ctx), args_types, false);
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:642:45: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  642 |     FunctionType *funTy = FunctionType::get(util::typeOf(*return_type, ctx), args_types, false);
      |                                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:642:45: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  642 |     FunctionType *funTy = FunctionType::get(util::typeOf(*return_type, ctx), args_types, false);
      |                                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:645:21: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  645 |     Function *fun = Function::Create(funTy, Function::ExternalLinkage, name->getName(), MODULE);
      |                     ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:647:5: warning: 'const auto funMetaData' can be declared as 'auto *const funMetaData' [llvm-qualified-auto,readability-qualified-auto]
  647 |     const auto funMetaData = new inter_gen::FunctionMetaData(name->getName(), funTy);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:652:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  652 |     for (auto &arg : fun->args())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:654:35: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  654 |         funMetaData->addArg(params[idx]->getName(), &arg, util::typeOf_d(*params[idx]->type, ctx, nullptr),
      |                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:654:59: warning: 'typeOf_d' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  654 |         funMetaData->addArg(params[idx]->getName(), &arg, util::typeOf_d(*params[idx]->type, ctx, nullptr),
      |                                                           ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:17:7: note: resolves to this declaration
   17 | Type *typeOf_d(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:654:81: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  654 |         funMetaData->addArg(params[idx]->getName(), &arg, util::typeOf_d(*params[idx]->type, ctx, nullptr),
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:655:29: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  655 |                             new inter_gen::VariableMetaData(params[idx]->getName(),
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  656 |                                                             util::typeOf_d(*params[idx]->type, ctx, nullptr)));
      |                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:655:33: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  655 |                             new inter_gen::VariableMetaData(params[idx]->getName(),
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/metadata.h:271:52: note: default parameter was declared here
  271 |     VariableMetaData(std::string name, Type *type, bool isMutable = false, bool isNullable = false);
      |                                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:655:67: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  655 |                             new inter_gen::VariableMetaData(params[idx]->getName(),
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:656:61: warning: 'typeOf_d' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  656 |                                                             util::typeOf_d(*params[idx]->type, ctx, nullptr)));
      |                                                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:17:7: note: resolves to this declaration
   17 | Type *typeOf_d(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:656:83: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  656 |                                                             util::typeOf_d(*params[idx]->type, ctx, nullptr)));
      |                                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:657:27: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  657 |         arg.setName(params[idx++]->getName());
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:1128:7: note: resolves to this declaration
 1128 |       operator[](size_type __n) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:33: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:5: warning: 'dbg_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:5: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:126:6: note: resolves to this declaration
  126 | void dbg_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:5: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:52:51: note: expanded from macro 'LOG_DEBUG'
   52 |     util::dbg_print(std::cout, (SPACE_STR + (msg) + "\n"),     \
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:27: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:45: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:661:62: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |     LOG_DEBUG("Function " + name->getName() + " defined in " + ctx->module->getName().str());
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3696:5: note: resolves to this declaration
 3696 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:668:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  668 | Function *FuncDecl::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~~~~          ^                                       
      | auto                                                         -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:673:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  673 |     for (const auto &p : proto->params)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:673:22: warning: variable name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  673 |     for (const auto &p : proto->params)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:673:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |     for (const auto &p : proto->params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:673:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |     for (const auto &p : proto->params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:673:24: warning: 'operator==<dap::parser::VarDecl **, std::vector<dap::parser::VarDecl *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |     for (const auto &p : proto->params)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:675:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  675 |         argTy.push_back(util::typeOf(*p->getType(), ctx));
      |                         ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:675:25: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  675 |         argTy.push_back(util::typeOf(*p->getType(), ctx));
      |                         ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:679:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  679 |     FunctionType *funTy = FunctionType::get(util::typeOf(*proto->return_type, ctx), ArrayRef(argTy), false);
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:679:45: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  679 |     FunctionType *funTy = FunctionType::get(util::typeOf(*proto->return_type, ctx), ArrayRef(argTy), false);
      |                                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:679:45: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  679 |     FunctionType *funTy = FunctionType::get(util::typeOf(*proto->return_type, ctx), ArrayRef(argTy), false);
      |                                             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:680:21: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  680 |     Function *fun = Function::Create(funTy, Function::ExternalLinkage, proto->name->getName(), MODULE);
      |                     ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:683:5: warning: 'const auto funMetaData' can be declared as 'auto *const funMetaData' [llvm-qualified-auto,readability-qualified-auto]
  683 |     const auto funMetaData = new inter_gen::FunctionMetaData(proto->name->getName(), funTy);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:687:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  687 |     BasicBlock *bblock = BasicBlock::Create(LLVMCTX, "entry", fun, nullptr);
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:695:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
  695 |     for (const auto &param : proto->params)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:695:28: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  695 |     for (const auto &param : proto->params)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:695:28: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  695 |     for (const auto &param : proto->params)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:695:28: warning: 'operator==<dap::parser::VarDecl **, std::vector<dap::parser::VarDecl *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  695 |     for (const auto &param : proto->params)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:697:32: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  697 |         Value *argVal = argsVal++;
      |                                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:698:27: warning: 'typeOf_d' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  698 |         Type *typeOfArg = util::typeOf_d(*param->type, ctx, nullptr);
      |                           ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:17:7: note: resolves to this declaration
   17 | Type *typeOf_d(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:702:29: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  702 |                             new inter_gen::VariableMetaData(param->name->getName(), typeOfArg, param->is_mutable,
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  703 |                                                             param->is_nullable));
      |                                                             ~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:709:10: warning: no header providing "blockMappingRet_d" is directly included [misc-include-cleaner]
  709 |     if (!blockMappingRet_d->contains(bblock))
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:716:5: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  716 |     verifyFunction(*fun, &errs());
      |     ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:716:27: warning: 'errs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  716 |     verifyFunction(*fun, &errs());
      |                           ^
/usr/include/llvm/Support/raw_ostream.h:600:17: note: resolves to this declaration
  600 | raw_fd_ostream &errs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:716:27: warning: no header providing "llvm::errs" is directly included [misc-include-cleaner]
    7 |     verifyFunction(*fun, &errs());
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:721:24: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  721 |     if (fun->getName() == "main")
      |                        ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:723:67: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  723 |         if (ctx->fileName.ends_with("/main.dap") || ctx->fileName == "main.dap")
      |                                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:733:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  733 | Function *ExternDecl::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~~~~            ^                                       
      | auto                                                           -> Function *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:741:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  741 | Value *Program::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~         ^                                       
      | auto                                                     -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:745:5: warning: 'const auto packageStmt' can be declared as 'auto *const packageStmt' [llvm-qualified-auto,readability-qualified-auto]
  745 |     const auto packageStmt = dynamic_cast<PackageStmt *>(stmt);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:746:5: warning: 'create_package_dir' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  746 |     util::create_package_dir(util::getStrFromVec(*packageStmt->name->name_parts, "."));
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:185:6: note: resolves to this declaration
  185 | void create_package_dir(std::string pkg_dir_name);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:746:30: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  746 |     util::create_package_dir(util::getStrFromVec(*packageStmt->name->name_parts, "."));
      |                              ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:746:36: warning: no header providing "dap::util::getStrFromVec" is directly included [misc-include-cleaner]
   44 |     util::create_package_dir(util::getStrFromVec(*packageStmt->name->name_parts, "."));
      |                                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:746:82: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  746 |     util::create_package_dir(util::getStrFromVec(*packageStmt->name->name_parts, "."));
      |                                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:749:22: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  749 |     if (ctx->package == "dap.runtime.sys" && ctx->sourcePath.ends_with("/sysFun.dap"))
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:751:9: warning: 'genSysFun' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  751 |         genSysFun(ctx);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/funGen_sys.h:11:6: note: resolves to this declaration
   11 | void genSysFun(const InterGenContext *ctx);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:752:9: warning: 'genCharToInt' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  752 |         genCharToInt(ctx);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.h:34:11: note: resolves to this declaration
   34 | Function *genCharToInt(InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:753:9: warning: 'genIntToChar' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  753 |         genIntToChar(ctx);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.h:23:11: note: resolves to this declaration
   23 | Function *genIntToChar(InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:754:9: warning: 'genCharToStr' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  754 |         genCharToStr(ctx);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.h:53:11: note: resolves to this declaration
   53 | Function *genCharToStr(InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:755:9: warning: 'genInt32To8' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  755 |         genInt32To8(ctx);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/basicElementGen_d.h:42:11: note: resolves to this declaration
   42 | Function *genInt32To8(InterGenContext *ctx);
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:763:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  763 | Value *IfStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~        ^                                       
      | auto                                                    -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:767:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  767 |     if (!condVal)
      |         ~^      
      |                  == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:767:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  767 |     if (!condVal)
      |                  ^
      |                   {
  768 |         return nullptr;
      |                        
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:774:49: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  774 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantInt::get(condType, 0), "ifcond");
      |                                                 ^
/usr/include/llvm/IR/Constants.h:100:46: note: default parameter was declared here
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:774:49: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  774 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantInt::get(condType, 0), "ifcond");
      |                                                 ^
/usr/include/llvm/IR/Constants.h:100:20: note: resolves to this declaration
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:778:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  778 |         condVal = BUILDER.CreateFCmpONE(condVal, ConstantFP::get(condType, 0.0), "ifcond");
      |                   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2290:24: note: default parameter was declared here
 2290 |                        MDNode *FPMathTag = nullptr) {
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:778:50: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  778 |         condVal = BUILDER.CreateFCmpONE(condVal, ConstantFP::get(condType, 0.0), "ifcond");
      |                                                  ^
/usr/include/llvm/IR/Constants.h:276:20: note: resolves to this declaration
  276 |   static Constant *get(Type *Ty, double V);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:782:49: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  782 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantPointerNull::get(cast<PointerType>(condType)), "ifcond");
      |                                                 ^
/usr/include/llvm/IR/Constants.h:545:31: note: resolves to this declaration
  545 |   static ConstantPointerNull *get(PointerType *T);
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:782:49: warning: no header providing "llvm::ConstantPointerNull" is directly included [misc-include-cleaner]
  782 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantPointerNull::get(cast<PointerType>(condType)), "ifcond");
      |                                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:782:74: warning: 'cast<llvm::PointerType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  782 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantPointerNull::get(cast<PointerType>(condType)), "ifcond");
      |                                                                          ^
/usr/include/llvm/Support/Casting.h:577:37: note: resolves to this declaration
  577 | [[nodiscard]] inline decltype(auto) cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:782:74: warning: no header providing "llvm::cast" is directly included [misc-include-cleaner]
  782 |         condVal = BUILDER.CreateICmpNE(condVal, ConstantPointerNull::get(cast<PointerType>(condType)), "ifcond");
      |                                                                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:786:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  786 |         REPORT_ERROR("Unsupported type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:786:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  786 |         REPORT_ERROR("Unsupported type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:786:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  786 |         REPORT_ERROR("Unsupported type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:786:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  786 |         REPORT_ERROR("Unsupported type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:791:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  791 |     BasicBlock *thenBB = BasicBlock::Create(LLVMCTX, "then", ctx->getCurrFun());
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:208:29: note: default parameter was declared here
  208 |                             BasicBlock *InsertBefore = nullptr) {
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:791:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  791 |     BasicBlock *thenBB = BasicBlock::Create(LLVMCTX, "then", ctx->getCurrFun());
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:792:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  792 |     BasicBlock *elseBB = BasicBlock::Create(LLVMCTX, "else");
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:207:29: note: default parameter was declared here
  207 |                             Function *Parent = nullptr,
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:792:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  792 |     BasicBlock *elseBB = BasicBlock::Create(LLVMCTX, "else");
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:793:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  793 |     BasicBlock *mergeBB = BasicBlock::Create(LLVMCTX, "merge");
      |                           ^
/usr/include/llvm/IR/BasicBlock.h:207:29: note: default parameter was declared here
  207 |                             Function *Parent = nullptr,
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:793:27: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  793 |     BasicBlock *mergeBB = BasicBlock::Create(LLVMCTX, "merge");
      |                           ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:796:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  796 |     BUILDER.CreateCondBr(condVal, thenBB, elseBB);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1115:28: note: default parameter was declared here
 1115 |                            MDNode *BranchWeights = nullptr,
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:803:10: warning: decrementing and referencing a variable in a complex condition can cause unintended side-effects due to C++'s order of evaluation, consider moving the modification outside of the condition to avoid misunderstandings [bugprone-inc-dec-in-conditions]
  803 |     if ((--thenBBEndIter)->getOpcode() != Instruction::Br && thenBBEndIter->getOpcode() != Instruction::Ret)
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:803:62: note: variable is referenced here
  803 |     if ((--thenBBEndIter)->getOpcode() != Instruction::Br && thenBBEndIter->getOpcode() != Instruction::Ret)
      |                                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:803:10: warning: 'operator--' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  803 |     if ((--thenBBEndIter)->getOpcode() != Instruction::Br && thenBBEndIter->getOpcode() != Instruction::Ret)
      |          ^
/usr/include/llvm/ADT/ilist_iterator.h:310:26: note: resolves to this declaration
  310 |   ilist_iterator_w_bits &operator--() {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:803:26: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  803 |     if ((--thenBBEndIter)->getOpcode() != Instruction::Br && thenBBEndIter->getOpcode() != Instruction::Ret)
      |                          ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:803:75: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  803 |     if ((--thenBBEndIter)->getOpcode() != Instruction::Br && thenBBEndIter->getOpcode() != Instruction::Ret)
      |                                                                           ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:812:23: warning: implicit conversion 'BlockStmt *' -> 'bool' [readability-implicit-bool-conversion]
  812 |     Value *elseBody = else_body ? else_body->codeGen(ctx) : nullptr;
      |                       ^
      |                       (         != nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:814:10: warning: decrementing and referencing a variable in a complex condition can cause unintended side-effects due to C++'s order of evaluation, consider moving the modification outside of the condition to avoid misunderstandings [bugprone-inc-dec-in-conditions]
  814 |     if ((--elseBBEndIter)->getOpcode() != Instruction::Br && elseBBEndIter->getOpcode() != Instruction::Ret)
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:814:62: note: variable is referenced here
  814 |     if ((--elseBBEndIter)->getOpcode() != Instruction::Br && elseBBEndIter->getOpcode() != Instruction::Ret)
      |                                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:814:10: warning: 'operator--' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  814 |     if ((--elseBBEndIter)->getOpcode() != Instruction::Br && elseBBEndIter->getOpcode() != Instruction::Ret)
      |          ^
/usr/include/llvm/ADT/ilist_iterator.h:310:26: note: resolves to this declaration
  310 |   ilist_iterator_w_bits &operator--() {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:814:26: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  814 |     if ((--elseBBEndIter)->getOpcode() != Instruction::Br && elseBBEndIter->getOpcode() != Instruction::Ret)
      |                          ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:814:75: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  814 |     if ((--elseBBEndIter)->getOpcode() != Instruction::Br && elseBBEndIter->getOpcode() != Instruction::Ret)
      |                                                                           ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:823:14: warning: variable 'phi' is not initialized [cppcoreguidelines-init-variables]
  823 |     PHINode *phi;
      |              ^  
      |                  = nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:825:45: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  825 |     if (thenBody != nullptr && thenBBEndIter->getOpcode() != Instruction::Ret)
      |                                             ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:830:13: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
  830 |         if (elseBody)
      |             ^       
      |                      != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:830:22: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  830 |         if (elseBody)
      |                      ^
      |                       {
  831 |             phi->addIncoming(elseBody, elseBB);
  832 |         else
      |         } 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:832:13: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  832 |         else
      |             ^
      |              {
  833 |             phi->addIncoming(ConstantInt::get(thenBody->getType(), 0), elseBB);
      |                                                                                
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:833:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  833 |             phi->addIncoming(ConstantInt::get(thenBody->getType(), 0), elseBB);
      |                              ^
/usr/include/llvm/IR/Constants.h:100:46: note: default parameter was declared here
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:833:30: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  833 |             phi->addIncoming(ConstantInt::get(thenBody->getType(), 0), elseBB);
      |                              ^
/usr/include/llvm/IR/Constants.h:100:20: note: resolves to this declaration
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:835:50: warning: 'operator->' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  835 |     else if (elseBody != nullptr && elseBBEndIter->getOpcode() != Instruction::Ret)
      |                                                  ^
/usr/include/llvm/ADT/ilist_iterator.h:297:11: note: resolves to this declaration
  297 |   pointer operator->() const { return &operator*(); }
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:840:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  840 |         phi->addIncoming(ConstantInt::get(elseBody->getType(), 0), thenBB);
      |                          ^
/usr/include/llvm/IR/Constants.h:100:46: note: default parameter was declared here
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:840:26: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  840 |         phi->addIncoming(ConstantInt::get(elseBody->getType(), 0), thenBB);
      |                          ^
/usr/include/llvm/IR/Constants.h:100:20: note: resolves to this declaration
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:845:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  845 |         return ConstantInt::get(IntegerType::get(LLVMCTX, 0), 0); // Return 0 (no result)
      |                ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:845:16: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  845 |         return ConstantInt::get(IntegerType::get(LLVMCTX, 0), 0); // Return 0 (no result)
      |                ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:845:33: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  845 |         return ConstantInt::get(IntegerType::get(LLVMCTX, 0), 0); // Return 0 (no result)
      |                                 ^
/usr/include/llvm/IR/DerivedTypes.h:64:23: note: resolves to this declaration
   64 |   static IntegerType *get(LLVMContext &C, unsigned NumBits);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:853:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  853 | Value *ElifStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~          ^                                       
      | auto                                                      -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:853:54: warning: parameter 'ctx' is unused [misc-unused-parameters]
  853 | Value *ElifStmt::codeGen(inter_gen::InterGenContext *ctx)
      |                                                      ^~~
      |                                                       /*ctx*/
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:859:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  859 | Value *ForStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~         ^                                       
      | auto                                                     -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:866:12: warning: variable 'brCond' is not initialized [cppcoreguidelines-init-variables]
  866 |     Value *brCond;
      |            ^     
      |                   = nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:873:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  873 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2335:21: note: default parameter was declared here
 2335 |                     const Twine &Name = "") {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:873:37: warning: no header providing "llvm::CmpInst" is directly included [misc-include-cleaner]
    7 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:873:64: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  873 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:873:90: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  873 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                          ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:877:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  877 |         brCond = BUILDER.CreateFCmp(CmpInst::FCMP_ONE, condVal, ConstantFP::get(LLVMCTX, APFloat(0.0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2345:21: note: default parameter was declared here
 2345 |                     const Twine &Name = "", MDNode *FPMathTag = nullptr) {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:877:65: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  877 |         brCond = BUILDER.CreateFCmp(CmpInst::FCMP_ONE, condVal, ConstantFP::get(LLVMCTX, APFloat(0.0)));
      |                                                                 ^
/usr/include/llvm/IR/Constants.h:283:22: note: resolves to this declaration
  283 |   static ConstantFP *get(LLVMContext &Context, const APFloat &V);
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:880:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  880 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantPointerNull::get(PointerType::get(LLVMCTX, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:2335:21: note: default parameter was declared here
 2335 |                     const Twine &Name = "") {
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:880:64: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  880 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantPointerNull::get(PointerType::get(LLVMCTX, 0)));
      |                                                                ^
/usr/include/llvm/IR/Constants.h:545:31: note: resolves to this declaration
  545 |   static ConstantPointerNull *get(PointerType *T);
      |                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:880:89: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  880 |         brCond = BUILDER.CreateICmp(CmpInst::ICMP_NE, condVal, ConstantPointerNull::get(PointerType::get(LLVMCTX, 0)));
      |                                                                                         ^
/usr/include/llvm/IR/DerivedTypes.h:658:23: note: resolves to this declaration
  658 |   static PointerType *get(LLVMContext &C, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: warning: Potential leak of memory pointed to by 'initGen' [clang-analyzer-cplusplus.NewDeleteLeaks]
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:862:22: note: Calling 'VarDecl::codeGen'
  862 |     Value *initGen = init->codeGen(ctx);
      |                      ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:917:9: note: Left side of '&&' is true
  917 |     if (!ctx->hasBlock() && !ctx->isDefStruct())
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:917:29: note: Assuming the condition is true
  917 |     if (!ctx->hasBlock() && !ctx->isDefStruct())
      |                             ^~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:917:5: note: Taking true branch
  917 |     if (!ctx->hasBlock() && !ctx->isDefStruct())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:919:16: note: Assuming field 'init' is non-null
  919 |         assert(init && "No init in Variable Declaration!");
      |                ^
/usr/include/assert.h:100:27: note: expanded from macro 'assert'
  100 |      (static_cast <bool> (expr)                                         \
      |                           ^~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:919:16: note: Left side of '&&' is true
  919 |         assert(init && "No init in Variable Declaration!");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:919:9: note: '?' condition is true
  919 |         assert(init && "No init in Variable Declaration!");
      |         ^
/usr/include/assert.h:100:7: note: expanded from macro 'assert'
  100 |      (static_cast <bool> (expr)                                         \
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:920:26: note: Assuming the object is not a 'CastReturnType'
  920 |         auto *constant = dyn_cast<Constant>(init->codeGen(ctx));
      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:923:13: note: Assuming the condition is true
  923 |         if (util::typeOf(*type, ctx, size) != Type::getInt8Ty(LLVMCTX))
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:923:9: note: Taking true branch
  923 |         if (util::typeOf(*type, ctx, size) != Type::getInt8Ty(LLVMCTX))
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:20: note: Calling 'GlobalVariable::operator new'
  925 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  926 |                                       constant, name->getName());
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/llvm/IR/GlobalVariable.h:79:12: note: Memory is allocated
   79 |     return User::operator new(s, 1);
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:20: note: Returning from 'GlobalVariable::operator new'
  925 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  926 |                                       constant, name->getName());
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:862:22: note: Returned allocated memory
  862 |     Value *initGen = init->codeGen(ctx);
      |                      ^~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:870:5: note: Control jumps to the 'default' case at line 882
  870 |     switch (condVal->getType()->getTypeID())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: note: Potential leak of memory pointed to by 'initGen'
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:883:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  883 |         REPORT_ERROR("Unknown type for conditional Expression", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:889:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  889 |     BasicBlock *loopBB = BasicBlock::Create(LLVMCTX, "loop", fun);
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:208:29: note: default parameter was declared here
  208 |                             BasicBlock *InsertBefore = nullptr) {
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:889:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  889 |     BasicBlock *loopBB = BasicBlock::Create(LLVMCTX, "loop", fun);
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:890:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  890 |     BasicBlock *exitBB = BasicBlock::Create(LLVMCTX, "exit");
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:207:29: note: default parameter was declared here
  207 |                             Function *Parent = nullptr,
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:890:26: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  890 |     BasicBlock *exitBB = BasicBlock::Create(LLVMCTX, "exit");
      |                          ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:892:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  892 |     BUILDER.CreateCondBr(brCond, loopBB, exitBB);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1115:28: note: default parameter was declared here
 1115 |                            MDNode *BranchWeights = nullptr,
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:896:9: warning: implicit conversion 'llvm::Value *' -> 'bool' [readability-implicit-bool-conversion]
  896 |     if (body->codeGen(ctx))
      |         ^                 
      |                            != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:898:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  898 |         BUILDER.CreateStore(step->codeGen(ctx),
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:901:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  901 |         BUILDER.CreateCondBr(brCond, loopBB, exitBB);
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1115:28: note: default parameter was declared here
 1115 |                            MDNode *BranchWeights = nullptr,
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:914:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  914 | Value *VarDecl::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~         ^                                       
      | auto                                                     -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:919:9: warning: no header providing "assert" is directly included [misc-include-cleaner]
    6 |         assert(init && "No init in Variable Declaration!");
      |         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:920:26: warning: 'dyn_cast<llvm::Constant, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  920 |         auto *constant = dyn_cast<Constant>(init->codeGen(ctx));
      |                          ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:923:13: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  923 |         if (util::typeOf(*type, ctx, size) != Type::getInt8Ty(LLVMCTX))
      |             ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:923:47: warning: 'getInt8Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  923 |         if (util::typeOf(*type, ctx, size) != Type::getInt8Ty(LLVMCTX))
      |                                               ^
/usr/include/llvm/IR/Type.h:461:23: note: resolves to this declaration
  461 |   static IntegerType *getInt8Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:13: warning: returning a newly created resource of type 'Value *' or 'gsl::owner<>' from a function whose return type is not 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  925 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  926 |                                       constant, name->getName());
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:24: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  925 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |                        ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:24: warning: no header providing "llvm::GlobalVariable" is directly included [misc-include-cleaner]
    7 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:925:48: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  925 |             return new GlobalVariable(*MODULE, util::typeOf(*type, ctx, size), false, GlobalValue::InternalLinkage,
      |                                                ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:931:21: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  931 |     Type *valType = util::typeOf(*type, ctx, size);
      |                     ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:932:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  932 |     if (llvm::isa<PointerType>(valType))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:934:29: warning: 'getSubVector<std::basic_string<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  934 |         auto baseTypeName = util::getSubVector(*type->name_parts, 0, type->name_parts->size() - 1);
      |                             ^
/home/napbad/tmp/dap/src/core/utilities/data_struct_util.h:12:38: note: resolves to this declaration
   12 | template <typename T> std::vector<T> getSubVector(const std::vector<T> &vec, size_t start, size_t end)
      |                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:935:26: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  935 |         Type *baseType = util::typeOf(QualifiedName(&baseTypeName), ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:935:26: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  935 |         Type *baseType = util::typeOf(QualifiedName(&baseTypeName), ctx);
      |                          ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:939:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  939 |         Value *gep = BUILDER.CreateGEP(baseType, dyn_cast<Value>(allocaInst), ConstantInt::get(LLVMCTX, APInt(32, 0)));
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:939:50: warning: 'dyn_cast<llvm::Value, llvm::AllocaInst>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |         Value *gep = BUILDER.CreateGEP(baseType, dyn_cast<Value>(allocaInst), ConstantInt::get(LLVMCTX, APInt(32, 0)));
      |                                                  ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:939:79: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |         Value *gep = BUILDER.CreateGEP(baseType, dyn_cast<Value>(allocaInst), ConstantInt::get(LLVMCTX, APInt(32, 0)));
      |                                                                               ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:939:105: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  939 |         Value *gep = BUILDER.CreateGEP(baseType, dyn_cast<Value>(allocaInst), ConstantInt::get(LLVMCTX, APInt(32, 0)));
      |                                                                                                         ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:939:111: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  939 |         Value *gep = BUILDER.CreateGEP(baseType, dyn_cast<Value>(allocaInst), ConstantInt::get(LLVMCTX, APInt(32, 0)));
      |                                                                                                               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:940:22: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  940 |         ctx->locals()[name->getName()] = {
      |                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:940:40: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  940 |         ctx->locals()[name->getName()] = {
      |                                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_pair.h:602:7: note: resolves to this declaration
  602 |       operator=(pair&& __p)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:944:28: warning: 'make_pair<llvm::Value *&, llvm::AllocaInst *&>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  944 |         gepMapping->insert(std::make_pair(gep, allocaInst));
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_pair.h:1132:5: note: resolves to this declaration
 1132 |     make_pair(_T1&& __x, _T2&& __y)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:944:33: warning: no header providing "std::make_pair" is directly included [misc-include-cleaner]
   29 |         gepMapping->insert(std::make_pair(gep, allocaInst));
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:958:18: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  958 |     ctx->locals()[name->getName()] = {
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:958:36: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  958 |     ctx->locals()[name->getName()] = {
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_pair.h:602:7: note: resolves to this declaration
  602 |       operator=(pair&& __p)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:971:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  971 | Value *ReturnStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:982:29: warning: 'isNullable' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  982 |     const bool isNullable = inter_gen::isNullable(expr, ctx);
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.h:12:6: note: resolves to this declaration
   12 | bool isNullable(parser::Expr* valToCheck, InterGenContext* ctx);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:984:17: warning: initializing non-owner argument of type 'VariableMetaData *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
  984 |         retVal, new inter_gen::VariableMetaData("", retVal->getType(), true, isNullable));
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:984:49: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
  984 |         retVal, new inter_gen::VariableMetaData("", retVal->getType(), true, isNullable));
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:993:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  993 | Value *ExprStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~          ^                                       
      | auto                                                      -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:999:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  999 | Value *IncludeStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~             ^                                       
      | auto                                                         -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1001:32: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1001 |     const std::string target = util::getStrFromVec(*path->name_parts, ".");
      |                                ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1001:71: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1001 |     const std::string target = util::getStrFromVec(*path->name_parts, ".");
      |                                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1002:10: warning: no header providing "moduleMetadataMap_d" is directly included [misc-include-cleaner]
 1002 |     if (!moduleMetadataMap_d->contains(target))
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1004:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1004 |         REPORT_ERROR("Include statement failed: " + target, __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1004:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1004 |         REPORT_ERROR("Include statement failed: " + target, __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1004:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1004 |         REPORT_ERROR("Include statement failed: " + target, __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1004:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1004 |         REPORT_ERROR("Include statement failed: " + target, __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1004:51: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1004 |         REPORT_ERROR("Include statement failed: " + target, __FILE__, __LINE__);
      |                                                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1007:5: warning: 'const auto moduleMetaData' can be declared as 'auto *const moduleMetaData' [llvm-qualified-auto,readability-qualified-auto]
 1007 |     const auto moduleMetaData = moduleMetadataMap_d->at(target);
      |     ^~~~~~~~~~
      |     auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1008:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1008 |     for (const auto fun : moduleMetaData->getFunctions())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1008:10: warning: 'const auto fun' can be declared as 'auto *const fun' [llvm-qualified-auto,readability-qualified-auto]
 1008 |     for (const auto fun : moduleMetaData->getFunctions())
      |          ^~~~~~~~~~
      |          auto *const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1008:25: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1008 |     for (const auto fun : moduleMetaData->getFunctions())
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1008:25: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1008 |     for (const auto fun : moduleMetaData->getFunctions())
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1008:25: warning: 'operator==<dap::inter_gen::FunctionMetaData **, std::vector<dap::inter_gen::FunctionMetaData *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1008 |     for (const auto fun : moduleMetaData->getFunctions())
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1010:9: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1010 |         Function::Create(fun->getType(), Function::ExternalLinkage, fun->getName(), MODULE);
      |         ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1016:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1016 | Value *PackageStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~             ^                                       
      | auto                                                         -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1022:29: warning: 'getStrFromVec' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1022 |     const std::string pkg = util::getStrFromVec(*name->name_parts, ".");
      |                             ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:117:13: note: resolves to this declaration
  117 | std::string getStrFromVec(const std::vector<std::string> &vec, const std::string &delimiter);
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1022:68: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1022 |     const std::string pkg = util::getStrFromVec(*name->name_parts, ".");
      |                                                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1023:5: warning: 'create_package_dir' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1023 |     util::create_package_dir(pkg);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:185:6: note: resolves to this declaration
  185 | void create_package_dir(std::string pkg_dir_name);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1025:5: warning: assigning newly created 'gsl::owner<>' to non-owner 'Module *' [cppcoreguidelines-owning-memory]
 1025 |     ctx->module = new Module(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
 1026 |         pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1027 |         *inter_gen::llvmContext);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1026:13: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1026 |         pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')),
      |             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1026:19: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1026 |         pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')),
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3696:5: note: resolves to this declaration
 3696 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1026:45: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1026 |         pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')),
      |                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3018:32: note: default parameter was declared here
 3018 |       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
      |                                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1028:5: warning: assigning newly created 'gsl::owner<>' to non-owner 'ModuleMetaData *' [cppcoreguidelines-owning-memory]
 1028 |     ctx->metaData = new inter_gen::ModuleMetaData(ctx->module);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1029:38: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1029 |     moduleMetadataMap_d->insert({pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')), ctx->metaData});
      |                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3652:5: note: resolves to this declaration
 3652 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1029:44: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1029 |     moduleMetadataMap_d->insert({pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')), ctx->metaData});
      |                                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3696:5: note: resolves to this declaration
 3696 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1029:70: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1029 |     moduleMetadataMap_d->insert({pkg + "." + ctx->fileName.substr(0, ctx->fileName.find_last_of('.')), ctx->metaData});
      |                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3018:32: note: default parameter was declared here
 3018 |       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
      |                                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1031:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1031 |     ctx->package = pkg;
      |                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:817:7: note: resolves to this declaration
  817 |       operator=(const basic_string& __str)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1038:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1038 | Value *BlockStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~           ^                                       
      | auto                                                       -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1041:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1041 |     for (const auto &s : stmts)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1041:22: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
 1041 |     for (const auto &s : stmts)
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1041:24: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1041 |     for (const auto &s : stmts)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1041:24: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1041 |     for (const auto &s : stmts)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1041:24: warning: 'operator==<dap::parser::Stmt **, std::vector<dap::parser::Stmt *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1041 |     for (const auto &s : stmts)
      |                        ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1048:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1048 | Value *BreakStmt::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~           ^                                       
      | auto                                                       -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1051:9: warning: implicit conversion 'Expr *' -> 'bool' [readability-implicit-bool-conversion]
 1051 |     if (expr)
      |         ^   
      |              != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1060:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1060 | Value *handleStructAssign(const QualifiedName *var, Expr *val, inter_gen::InterGenContext *ctx);
      | ~~~~~~~^                                                                                       
      | auto                                                                                            -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1063:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1063 | Value *AssignExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1069:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1069 |         REPORT_ERROR("can not assign to a immutable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1069:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1069 |         REPORT_ERROR("can not assign to a immutable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1069:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1069 |         REPORT_ERROR("can not assign to a immutable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1069:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1069 |         REPORT_ERROR("can not assign to a immutable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1069:62: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1069 |         REPORT_ERROR("can not assign to a immutable value: " + lhs->getName(), __FILE__, __LINE__);
      |                                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1073:39: warning: 'isNullable' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1073 |     if (!valMetaData->isNullable() && isNullable(rhs, ctx))
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/check/variableCheck.h:12:6: note: resolves to this declaration
   12 | bool isNullable(parser::Expr* valToCheck, InterGenContext* ctx);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1075:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1075 |         REPORT_ERROR("can not assign to a non-nullable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1075:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1075 |         REPORT_ERROR("can not assign to a non-nullable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1075:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1075 |         REPORT_ERROR("can not assign to a non-nullable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1075:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1075 |         REPORT_ERROR("can not assign to a non-nullable value: " + lhs->getName(), __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1075:65: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1075 |         REPORT_ERROR("can not assign to a non-nullable value: " + lhs->getName(), __FILE__, __LINE__);
      |                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3719:5: note: resolves to this declaration
 3719 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1081:16: warning: 'handleStructAssign' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1081 |         return handleStructAssign(lhs, rhs, ctx);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1060:8: note: resolves to this declaration
 1060 | Value *handleStructAssign(const QualifiedName *var, Expr *val, inter_gen::InterGenContext *ctx);
      |        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1089:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1089 | Value *ArrayAssignExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~                 ^                                       
      | auto                                                             -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1092:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
 1092 |     if (!base)
      |         ~^   
      |               == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1094:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1094 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1094:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1094 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1094:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1094 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1094:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1094 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1099:10: warning: implicit conversion 'Value *' -> 'bool' [readability-implicit-bool-conversion]
 1099 |     if (!idxVal)
      |         ~^     
      |                 == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1101:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1101 |         REPORT_ERROR("Index value not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1101:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1101 |         REPORT_ERROR("Index value not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1101:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1101 |         REPORT_ERROR("Index value not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1101:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1101 |         REPORT_ERROR("Index value not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1104:9: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1104 |     if (llvm::isa<PointerType>(base->getType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1106:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1106 |         Value *ptrAdd = BUILDER.CreatePtrAdd(base, idxVal, "ptrAccess_");
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1978:23: note: default parameter was declared here
 1978 |                       bool IsInBounds = false) {
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1107:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1107 |         return BUILDER.CreateStore(rhs->codeGen(ctx), ptrAdd);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1109:9: warning: 'isa<llvm::ArrayType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1109 |     if (llvm::isa<ArrayType>(base->getType()))
      |         ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1111:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1111 |         const std::vector<Value *> idxList = {
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_vector.h:679:7: note: default parameter was declared here
  679 |              const allocator_type& __a = allocator_type())
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1112:13: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1112 |             ConstantInt::get(LLVMCTX, APInt(32, 0)),
      |             ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1112:39: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1112 |             ConstantInt::get(LLVMCTX, APInt(32, 0)),
      |                                       ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1115:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1115 |         Value *ptrAdd = BUILDER.CreateGEP(base->getType(), base, idxList, "ptrAccess_");
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1116:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1116 |         return BUILDER.CreateStore(rhs->codeGen(ctx), ptrAdd);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1122:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1122 | Value *handleStructAssign(const QualifiedName *var, Expr *val, inter_gen::InterGenContext *ctx)
      | ~~~~~~~^                                                                                       
      | auto                                                                                            -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1126:37: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1126 |     if (Value *local = ctx->locals()[var->getFirstName()].first)
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1129:13: warning: 'isa<llvm::StructType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1129 |         if (llvm::isa<StructType>(local->getType()))
      |             ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1133:18: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1133 |         else if (llvm::isa<PointerType>(local->getType()) && gepMapping->contains(local))
      |                  ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1140:39: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1140 |             currentPtr = ctx->locals()[var->getFirstName()].first;
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1145:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1145 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1145:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1145 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1145:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1145 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1145:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1145 |         REPORT_ERROR("Variable not found in local context", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1150:40: warning: 'dyn_cast<llvm::AllocaInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1150 |     if (const AllocaInst *allocaInst = dyn_cast<AllocaInst>(currentPtr))
      |                                        ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1152:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1152 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())->getStructName();
      |                    ^
/usr/include/llvm/ADT/StringRef.h:50:26: note: resolves to this declaration
   50 |   class LLVM_GSL_POINTER StringRef {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1152:22: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1152 |         structName = dyn_cast<StructType>(allocaInst->getAllocatedType())->getStructName();
      |                      ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1156:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1156 |         structName = dyn_cast<StructType>(currentPtr->getType())->getStructName();
      |                    ^
/usr/include/llvm/ADT/StringRef.h:50:26: note: resolves to this declaration
   50 |   class LLVM_GSL_POINTER StringRef {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1156:22: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1156 |         structName = dyn_cast<StructType>(currentPtr->getType())->getStructName();
      |                      ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1159:5: warning: variable 'str' of type 'string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
 1159 |     string str = structName.str();
      |     ^
      |            const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1159:12: warning: unused local variable 'str' of type 'string' (aka 'basic_string<char>') [bugprone-unused-local-non-trivial-variable]
 1159 |     string str = structName.str();
      |            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1160:61: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1160 |     const inter_gen::StructMetaData *metaData = ctx->structs[structName.str()];
      |                                                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1163:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1163 |     for (int i = 1; i < var->name_parts->size(); ++i)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1169:22: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1169 |         currentPtr = BUILDER.CreateStructGEP(metaData->getStructType(), currentPtr, fieldIndex);
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1973:26: note: default parameter was declared here
 1973 |                          const Twine &Name = "") {
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1180:44: warning: 'dyn_cast<llvm::StructType, llvm::Type>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1180 |             const auto *nestedStructType = dyn_cast<StructType>(fieldType);
      |                                            ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1181:18: warning: implicit conversion 'llvm::StructType const *' -> 'bool' [readability-implicit-bool-conversion]
 1181 |             if (!nestedStructType)
      |                 ~^               
      |                                   == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1186:36: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1186 |             metaData = ctx->structs[nestedStructType->getStructName().str()];
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1187:18: warning: implicit conversion 'const inter_gen::StructMetaData *' -> 'bool' [readability-implicit-bool-conversion]
 1187 |             if (!metaData)
      |                 ~^       
      |                           == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1199:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1199 | Value *UnaryExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~           ^                                       
      | auto                                                       -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1204:12: warning: variable 'res' is not initialized [cppcoreguidelines-init-variables]
 1204 |     Value *res;
      |            ^  
      |                = nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1205:12: warning: variable 'var' is not initialized [cppcoreguidelines-init-variables]
 1205 |     Value *var;
      |            ^  
      |                = nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1206:12: warning: variable 'varPtr' is not initialized [cppcoreguidelines-init-variables]
 1206 |     Value *varPtr;
      |            ^     
      |                   = nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1211:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1211 |         operVal = BUILDER.CreateSub(operVal, ConstantInt::get(LLVMCTX, APInt(1, 1)), "decrease"); // Decrement
      |                   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1339:20: note: default parameter was declared here
 1339 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1211:46: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1211 |         operVal = BUILDER.CreateSub(operVal, ConstantInt::get(LLVMCTX, APInt(1, 1)), "decrease"); // Decrement
      |                                              ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1211:72: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1211 |         operVal = BUILDER.CreateSub(operVal, ConstantInt::get(LLVMCTX, APInt(1, 1)), "decrease"); // Decrement
      |                                                                        ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1214:19: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1214 |         operVal = BUILDER.CreateAdd(operVal, ConstantInt::get(operVal->getType(), 1), "increase"); // Increment
      |                   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1322:20: note: default parameter was declared here
 1322 |                    bool HasNUW = false, bool HasNSW = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1214:46: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1214 |         operVal = BUILDER.CreateAdd(operVal, ConstantInt::get(operVal->getType(), 1), "increase"); // Increment
      |                                              ^
/usr/include/llvm/IR/Constants.h:100:46: note: default parameter was declared here
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1214:46: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1214 |         operVal = BUILDER.CreateAdd(operVal, ConstantInt::get(operVal->getType(), 1), "increase"); // Increment
      |                                              ^
/usr/include/llvm/IR/Constants.h:100:20: note: resolves to this declaration
  100 |   static Constant *get(Type *Ty, uint64_t V, bool IsSigned = false);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1217:13: warning: 'isa<llvm::PointerType, llvm::Type *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1217 |         if (llvm::isa<PointerType>(operVal->getType()))
      |             ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1222:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1222 |         REPORT_ERROR("Invalid pointer dereference", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1222:9: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1222 |         REPORT_ERROR("Invalid pointer dereference", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1222:9: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1222 |         REPORT_ERROR("Invalid pointer dereference", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1222:9: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1222 |         REPORT_ERROR("Invalid pointer dereference", __FILE__, __LINE__);
      |         ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1224:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1224 |         return BUILDER.CreateNeg(operVal, "negate");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1715:54: note: default parameter was declared here
 1715 |   Value *CreateNeg(Value *V, const Twine &Name = "", bool HasNUW = false,
      |                                                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1228:17: warning: 'isa<llvm::LoadInst, llvm::Value *>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1228 |             if (llvm::isa<LoadInst>(operVal))
      |                 ^
/usr/include/llvm/Support/Casting.h:548:27: note: resolves to this declaration
  548 | [[nodiscard]] inline bool isa(const From &Val) {
      |                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1230:36: warning: 'dyn_cast<llvm::LoadInst, llvm::Value>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1230 |                 auto *castReturn = dyn_cast<LoadInst>(operVal);
      |                                    ^
/usr/include/llvm/Support/Casting.h:661:37: note: resolves to this declaration
  661 | [[nodiscard]] inline decltype(auto) dyn_cast(From *Val) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1233:28: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1233 |             Value *value = BUILDER.CreateGEP(
      |                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1234:17: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1234 |                 PointerType::get(operVal->getType()->getArrayElementType(), 0), operVal,
      |                 ^
/usr/include/llvm/IR/DerivedTypes.h:655:23: note: resolves to this declaration
  655 |   static PointerType *get(Type *ElementType, unsigned AddressSpace);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:18: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                  ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:44: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                                            ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:50: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:59: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                                                           ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:85: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                                                                                     ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1235:91: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1235 |                 {ConstantInt::get(LLVMCTX, APInt(32, 0)), ConstantInt::get(LLVMCTX, APInt(32, 0))}, "arrAddress");
      |                                                                                           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1238:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1238 |         return BUILDER.CreateGEP(operVal->getType(), operVal, ConstantInt::get(LLVMCTX, APInt(1, 0)), "address");
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:44: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1238:63: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1238 |         return BUILDER.CreateGEP(operVal->getType(), operVal, ConstantInt::get(LLVMCTX, APInt(1, 0)), "address");
      |                                                               ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1238:89: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1238 |         return BUILDER.CreateGEP(operVal->getType(), operVal, ConstantInt::get(LLVMCTX, APInt(1, 0)), "address");
      |                                                                                         ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1240:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1240 |         res = BUILDER.CreateSDiv(operand->codeGen(ctx), operVal);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1385:45: note: default parameter was declared here
 1385 |   Value *CreateSDiv(Value *LHS, Value *RHS, const Twine &Name = "",
      |                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1242:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1242 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1242:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1242 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1242:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1242 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1243:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1243 |         return BUILDER.CreateStore(res, varPtr);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1245:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1245 |         res = BUILDER.CreateAdd(operand->codeGen(ctx), operVal);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1321:44: note: default parameter was declared here
 1321 |   Value *CreateAdd(Value *LHS, Value *RHS, const Twine &Name = "",
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1247:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1247 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1247:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1247 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1247:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1247 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1248:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1248 |         return BUILDER.CreateStore(res, varPtr);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1251:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1251 |         res = BUILDER.CreateSub(operand->codeGen(ctx), operVal);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1338:44: note: default parameter was declared here
 1338 |   Value *CreateSub(Value *LHS, Value *RHS, const Twine &Name = "",
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1253:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1253 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1253:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1253 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1253:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1253 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1254:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1254 |         return BUILDER.CreateStore(res, varPtr);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1257:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1257 |         res = BUILDER.CreateMul(operand->codeGen(ctx), operVal);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1355:44: note: default parameter was declared here
 1355 |   Value *CreateMul(Value *LHS, Value *RHS, const Twine &Name = "",
      |                                            ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1259:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1259 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1259:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1259 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1259:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1259 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1260:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1260 |         return BUILDER.CreateStore(res, varPtr);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1263:15: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1263 |         res = BUILDER.CreateSRem(operand->codeGen(ctx), operVal);
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1404:45: note: default parameter was declared here
 1404 |   Value *CreateSRem(Value *LHS, Value *RHS, const Twine &Name = "") {
      |                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1265:18: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1265 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1866:20: note: default parameter was declared here
 1866 |                    const Twine &Name = "", bool IsInBounds = false) {
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1265:57: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1265 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                         ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1265:83: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1265 |         varPtr = BUILDER.CreateGEP(var->getType(), var, ConstantInt::get(LLVMCTX, APInt(1, 0)));
      |                                                                                   ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1267:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1267 |         return BUILDER.CreateStore(res, varPtr);
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:24:17: note: expanded from macro 'BUILDER'
   24 | #define BUILDER ctx->builder
      |                 ^
/usr/include/llvm/IR/IRBuilder.h:1802:50: note: default parameter was declared here
 1802 |   StoreInst *CreateStore(Value *Val, Value *Ptr, bool isVolatile = false) {
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1276:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1276 | Value *VarExpr::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~         ^                                       
      | auto                                                     -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1282:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1282 | Value *StructDecl::codeGen(inter_gen::InterGenContext *ctx)
      | ~~~~~~~            ^                                       
      | auto                                                        -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1287:17: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1287 |     ctx->structs[name->getName()] = smd;
      |                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:524:7: note: resolves to this declaration
  524 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1291:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1291 |     for (const auto &field : fields)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1291:28: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1291 |     for (const auto &field : fields)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1291:28: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1291 |     for (const auto &field : fields)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1291:28: warning: 'operator==<dap::parser::VarDecl **, std::vector<dap::parser::VarDecl *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1291 |     for (const auto &field : fields)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1293:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1293 |         fieldTypes.push_back(util::typeOf(*field->getType(), ctx));
      |                              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:88: note: default parameter was declared here
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |                                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1293:30: warning: 'typeOf' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1293 |         fieldTypes.push_back(util::typeOf(*field->getType(), ctx));
      |                              ^
/home/napbad/tmp/dap/src/core/utilities/llvm_util.h:14:7: note: resolves to this declaration
   14 | Type *typeOf(const parser::QualifiedName &type, const inter_gen::InterGenContext *ctx, parser::Expr *size = nullptr);
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1297:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1297 |     StructType *dStruct = StructType::create(LLVMCTX, fieldTypes, name->getName());
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:247:45: note: default parameter was declared here
  247 |                             StringRef Name, bool isPacked = false);
      |                                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1297:27: warning: 'create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1297 |     StructType *dStruct = StructType::create(LLVMCTX, fieldTypes, name->getName());
      |                           ^
/usr/include/llvm/IR/DerivedTypes.h:246:22: note: resolves to this declaration
  246 |   static StructType *create(LLVMContext &Context, ArrayRef<Type *> Elements,
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1301:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1301 |     auto *globalStruct = new GlobalVariable(*MODULE, // Module in which to insert the global variable
      |                              ^
/usr/include/llvm/IR/GlobalVariable.h:66:18: note: default parameter was declared here
   66 |                  GlobalVariable *InsertBefore = nullptr,
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1305:45: warning: 'getNullValue' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1305 |                                             Constant::getNullValue(dStruct), // Initializer (null-initialized)
      |                                             ^
/usr/include/llvm/IR/Constant.h:184:20: note: resolves to this declaration
  184 |   static Constant *getNullValue(Type* Ty);
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1317:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1317 | FunctionMetaData *InterGenContext::getFunMetaData(const std::string &name) const
      | ~~~~~~~~~~~~~~~~~~                 ^                                            
      | auto                                                                             -> FunctionMetaData *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1319:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1319 |     for (const auto &fun : metaData->getFunctions())
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1319:26: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1319 |     for (const auto &fun : metaData->getFunctions())
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1319:26: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1319 |     for (const auto &fun : metaData->getFunctions())
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1319:26: warning: 'operator==<dap::inter_gen::FunctionMetaData **, std::vector<dap::inter_gen::FunctionMetaData *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1319 |     for (const auto &fun : metaData->getFunctions())
      |                          ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1321:28: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1321 |         if (fun->getName() == name)
      |                            ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3755:5: note: resolves to this declaration
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:5: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:33: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                 ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:18:19: note: expanded from macro 'SPACE_STR'
   18 | #define SPACE_STR std::string("")
      |                   ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:5: warning: 'err_print' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:5: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:142:6: note: resolves to this declaration
  142 | void err_print(std::ostream &stream, const std::string &message, FileColor color);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:5: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:102: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                                      ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:5: warning: 'to_string' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |     ^
/home/napbad/tmp/dap/src/core/utilities/file_util.h:27:81: note: expanded from macro 'REPORT_ERROR'
   27 |     util::err_print(std::cout, (SPACE_STR + (msg) + " \nat file: " file + ":" + std::to_string(line) + "\n"),     \
      |                                                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:4240:3: note: resolves to this declaration
 4240 |   to_string(int __val)
      |   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:30: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3616:5: note: resolves to this declaration
 3616 |     operator+(const _CharT* __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1326:37: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1326 |     REPORT_ERROR("Function " + name + " not found", __FILE__, __LINE__);
      |                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1335:10: warning: implicit conversion 'Function *' -> 'bool' [readability-implicit-bool-conversion]
 1335 |     if (!mainFunction && (sourcePath.ends_with("/main.dap") || sourcePath == "main.dap"))
      |         ~^
      |         (             == nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1335:75: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1335 |     if (!mainFunction && (sourcePath.ends_with("/main.dap") || sourcePath == "main.dap"))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1338:31: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1338 |         FunctionType *ftype = FunctionType::get(Type::getInt32Ty(module->getContext()), ArrayRef(argTypes), false);
      |                               ^
/usr/include/llvm/IR/DerivedTypes.h:111:24: note: resolves to this declaration
  111 |   static FunctionType *get(Type *Result,
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1338:49: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1338 |         FunctionType *ftype = FunctionType::get(Type::getInt32Ty(module->getContext()), ArrayRef(argTypes), false);
      |                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1339:24: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1339 |         mainFunction = Function::Create(ftype, GlobalValue::ExternalLinkage, "main", module);
      |                        ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1340:30: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1340 |         BasicBlock *bblock = BasicBlock::Create(module->getContext(), "entry", mainFunction, nullptr);
      |                              ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1345:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1345 |         builder.CreateRet(ConstantInt::get(module->getContext(), APInt(32, 0)));
      |                           ^
/usr/include/llvm/IR/Constants.h:124:23: note: resolves to this declaration
  124 |   static ConstantInt *get(LLVMContext &Context, const APInt &V);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1345:66: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1345 |         builder.CreateRet(ConstantInt::get(module->getContext(), APInt(32, 0)));
      |                                                                  ^
/usr/include/llvm/ADT/APInt.h:109:41: note: default parameter was declared here
  109 |   APInt(unsigned numBits, uint64_t val, bool isSigned = false)
      |                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1345:72: warning: 32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
 1345 |         builder.CreateRet(ConstantInt::get(module->getContext(), APInt(32, 0)));
      |                                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1350:10: warning: no header providing "std::error_code" is directly included [misc-include-cleaner]
    7 |     std::error_code EC;
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1350:21: warning: variable name 'EC' is too short, expected at least 3 characters [readability-identifier-length]
 1350 |     std::error_code EC;
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1351:5: warning: 'replaceAll' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1351 |     util::replaceAll(package, ".", "/");
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:150:6: note: resolves to this declaration
  150 | void replaceAll(std::string &str, const std::string &from, const std::string &to);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1351:11: warning: no header providing "dap::util::replaceAll" is directly included [misc-include-cleaner]
 1351 |     util::replaceAll(package, ".", "/");
      |           ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1351:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1351 |     util::replaceAll(package, ".", "/");
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1351:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1351 |     util::replaceAll(package, ".", "/");
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:5: warning: variable 'outputPath' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |     ^
      |                 const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:30: warning: no header providing "buildDir" is directly included [misc-include-cleaner]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |                              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:39: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3598:5: note: resolves to this declaration
 3598 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1352:66: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1352 |     std::string outputPath = buildDir + package + "/" + fileName + ".ll";
      |                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1353:10: warning: no header providing "std::fstream" is directly included [misc-include-cleaner]
    6 |     std::fstream outputFile(outputPath, std::ios::out);
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1355:5: warning: no header providing "llvm::raw_fd_ostream" is directly included [misc-include-cleaner]
 1355 |     raw_fd_ostream outfile(outputPath, EC, sys::fs::OF_Text);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1359:9: warning: 'errs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1359 |         errs() << "Error opening output file: " << EC.message() << "\n";
      |         ^
/usr/include/llvm/Support/raw_ostream.h:600:17: note: resolves to this declaration
  600 | raw_fd_ostream &errs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1359:16: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1359 |         errs() << "Error opening output file: " << EC.message() << "\n";
      |                ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1359:49: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1359 |         errs() << "Error opening output file: " << EC.message() << "\n";
      |                                                 ^
/usr/include/llvm/Support/raw_ostream.h:247:16: note: resolves to this declaration
  247 |   raw_ostream &operator<<(const std::string &Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1359:65: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1359 |         errs() << "Error opening output file: " << EC.message() << "\n";
      |                                                                 ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1362:25: warning: variable name 'pm' is too short, expected at least 3 characters [readability-identifier-length]
 1362 |     legacy::PassManager pm;
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1363:12: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1363 |     pm.add(createPrintModulePass(outfile));
      |            ^
/usr/include/llvm/IR/IRPrintingPasses.h:30:35: note: default parameter was declared here
   30 |                                   const std::string &Banner = "",
      |                                   ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1363:12: warning: 'createPrintModulePass' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1363 |     pm.add(createPrintModulePass(outfile));
      |            ^
/usr/include/llvm/IR/IRPrintingPasses.h:29:13: note: resolves to this declaration
   29 | ModulePass *createPrintModulePass(raw_ostream &OS,
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1373:5: warning: 'InitializeAllTargetInfos' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1373 |     InitializeAllTargetInfos();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:56:15: note: resolves to this declaration
   56 |   inline void InitializeAllTargetInfos() {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1374:5: warning: 'InitializeAllTargets' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1374 |     InitializeAllTargets();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:66:15: note: resolves to this declaration
   66 |   inline void InitializeAllTargets() {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1375:5: warning: 'InitializeAllTargetMCs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1375 |     InitializeAllTargetMCs();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:79:15: note: resolves to this declaration
   79 |   inline void InitializeAllTargetMCs() {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1376:5: warning: 'InitializeAllAsmParsers' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1376 |     InitializeAllAsmParsers();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:99:15: note: resolves to this declaration
   99 |   inline void InitializeAllAsmParsers() {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1377:5: warning: 'InitializeAllAsmPrinters' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1377 |     InitializeAllAsmPrinters();
      |     ^
/usr/include/llvm/Support/TargetSelect.h:89:15: note: resolves to this declaration
   89 |   inline void InitializeAllAsmPrinters() {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1381:10: warning: implicit conversion 'Function *' -> 'bool' [readability-implicit-bool-conversion]
 1381 |     if (!mainFunction && (sourcePath.ends_with("/main.dap") || sourcePath == "main.dap"))
      |         ~^
      |         (             == nullptr)
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1381:75: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1381 |     if (!mainFunction && (sourcePath.ends_with("/main.dap") || sourcePath == "main.dap"))
      |                                                                           ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3772:5: note: resolves to this declaration
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1384:31: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1384 |         FunctionType *ftype = FunctionType::get(Type::getInt32Ty(module->getContext()), false);
      |                               ^
/usr/include/llvm/IR/DerivedTypes.h:115:24: note: resolves to this declaration
  115 |   static FunctionType *get(Type *Result, bool isVarArg);
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1384:49: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1384 |         FunctionType *ftype = FunctionType::get(Type::getInt32Ty(module->getContext()), false);
      |                                                 ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1385:24: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1385 |         mainFunction = Function::Create(ftype, GlobalValue::ExternalLinkage, "main", module);
      |                        ^
/usr/include/llvm/IR/Function.h:169:20: note: resolves to this declaration
  169 |   static Function *Create(FunctionType *Ty, LinkageTypes Linkage,
      |                    ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1388:30: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1388 |         BasicBlock *bblock = BasicBlock::Create(module->getContext(), "entry", mainFunction);
      |                              ^
/usr/include/llvm/IR/BasicBlock.h:208:29: note: default parameter was declared here
  208 |                             BasicBlock *InsertBefore = nullptr) {
      |                             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1388:30: warning: 'Create' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1388 |         BasicBlock *bblock = BasicBlock::Create(module->getContext(), "entry", mainFunction);
      |                              ^
/usr/include/llvm/IR/BasicBlock.h:206:22: note: resolves to this declaration
  206 |   static BasicBlock *Create(LLVMContext &Context, const Twine &Name = "",
      |                      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1393:27: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1393 |         builder.CreateRet(ConstantInt::get(Type::getInt32Ty(module->getContext()), 0));
      |                           ^
/usr/include/llvm/IR/Constants.h:108:56: note: default parameter was declared here
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1393:27: warning: 'get' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1393 |         builder.CreateRet(ConstantInt::get(Type::getInt32Ty(module->getContext()), 0));
      |                           ^
/usr/include/llvm/IR/Constants.h:108:23: note: resolves to this declaration
  108 |   static ConstantInt *get(IntegerType *Ty, uint64_t V, bool IsSigned = false);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1393:44: warning: 'getInt32Ty' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1393 |         builder.CreateRet(ConstantInt::get(Type::getInt32Ty(module->getContext()), 0));
      |                                            ^
/usr/include/llvm/IR/Type.h:463:23: note: resolves to this declaration
  463 |   static IntegerType *getInt32Ty(LLVMContext &C);
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1396:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1396 |         verifyFunction(*mainFunction);
      |         ^
/usr/include/llvm/IR/Verifier.h:88:40: note: default parameter was declared here
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |                                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1396:9: warning: 'verifyFunction' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1396 |         verifyFunction(*mainFunction);
      |         ^
/usr/include/llvm/IR/Verifier.h:88:6: note: resolves to this declaration
   88 | bool verifyFunction(const Function &F, raw_ostream *OS = nullptr);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1401:38: warning: 'getDefaultTargetTriple' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1401 |     const std::string targetTriple = sys::getDefaultTargetTriple();
      |                                      ^
/usr/include/llvm/TargetParser/Host.h:33:15: note: resolves to this declaration
   33 |   std::string getDefaultTargetTriple();
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1405:28: warning: 'lookupTarget' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1405 |     const Target *target = TargetRegistry::lookupTarget(targetTriple, error);
      |                            ^
/usr/include/llvm/MC/TargetRegistry.h:811:24: note: resolves to this declaration
  811 |   static const Target *lookupTarget(StringRef Triple, std::string &Error);
      |                        ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1407:10: warning: implicit conversion 'const Target *' -> 'bool' [readability-implicit-bool-conversion]
 1407 |     if (!target)
      |         ~^     
      |                 == nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1409:9: warning: 'errs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1409 |         errs() << "Error: " << error;
      |         ^
/usr/include/llvm/Support/raw_ostream.h:600:17: note: resolves to this declaration
  600 | raw_fd_ostream &errs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1409:16: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1409 |         errs() << "Error: " << error;
      |                ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1409:29: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1409 |         errs() << "Error: " << error;
      |                             ^
/usr/include/llvm/Support/raw_ostream.h:247:16: note: resolves to this declaration
  247 |   raw_ostream &operator<<(const std::string &Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1414:29: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1414 |     const std::string cpu = "generic";
      |                             ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1418:26: warning: no header providing "llvm::Reloc::Model" is directly included [misc-include-cleaner]
    7 |     std::optional<Reloc::Model>();
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1419:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1419 |     TargetMachine *targetMachine = target->createTargetMachine(targetTriple, cpu, features, opt, Reloc::PIC_);
      |                                    ^
/usr/include/llvm/MC/TargetRegistry.h:494:7: note: default parameter was declared here
  494 |       std::optional<CodeModel::Model> CM = std::nullopt,
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1419:105: warning: no header providing "llvm::Reloc::PIC_" is directly included [misc-include-cleaner]
 1419 |     TargetMachine *targetMachine = target->createTargetMachine(targetTriple, cpu, features, opt, Reloc::PIC_);
      |                                                                                                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1424:5: warning: variable 'modulePtr' of type 'std::unique_ptr<Module>' can be declared 'const' [misc-const-correctness]
 1424 |     std::unique_ptr<Module> modulePtr(module);
      |     ^
      |                             const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1424:10: warning: no header providing "std::unique_ptr" is directly included [misc-include-cleaner]
    7 |     std::unique_ptr<Module> modulePtr(module);
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1425:5: warning: variable 'mem_mgr' of type 'std::unique_ptr<SectionMemoryManager>' can be declared 'const' [misc-const-correctness]
 1425 |     std::unique_ptr<SectionMemoryManager> mem_mgr = std::make_unique<SectionMemoryManager>();
      |     ^
      |                                           const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1425:53: warning: 'make_unique<llvm::SectionMemoryManager>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1425 |     std::unique_ptr<SectionMemoryManager> mem_mgr = std::make_unique<SectionMemoryManager>();
      |                                                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unique_ptr.h:1075:5: note: resolves to this declaration
 1075 |     make_unique(_Args&&... __args)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1425:58: warning: no header providing "std::make_unique" is directly included [misc-include-cleaner]
 1425 |     std::unique_ptr<SectionMemoryManager> mem_mgr = std::make_unique<SectionMemoryManager>();
      |                                                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1428:21: warning: variable name 'EC' is too short, expected at least 3 characters [readability-identifier-length]
 1428 |     std::error_code EC;
      |                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1429:5: warning: 'replaceAll' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1429 |     util::replaceAll(package, ".", "/");
      |     ^
/home/napbad/tmp/dap/src/core/utilities/string_util.h:150:6: note: resolves to this declaration
  150 | void replaceAll(std::string &str, const std::string &from, const std::string &to);
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1429:31: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1429 |     util::replaceAll(package, ".", "/");
      |                               ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1429:36: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1429 |     util::replaceAll(package, ".", "/");
      |                                    ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:646:39: note: default parameter was declared here
  646 |       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      |                                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1430:5: warning: variable 'outputPath' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
 1430 |     std::string outputPath = buildDir + package + "/" + fileName + ".o";
      |     ^
      |                 const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1430:39: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |     std::string outputPath = buildDir + package + "/" + fileName + ".o";
      |                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3598:5: note: resolves to this declaration
 3598 |     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1430:49: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |     std::string outputPath = buildDir + package + "/" + fileName + ".o";
      |                                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1430:55: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |     std::string outputPath = buildDir + package + "/" + fileName + ".o";
      |                                                       ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3682:5: note: resolves to this declaration
 3682 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1430:66: warning: 'operator+<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |     std::string outputPath = buildDir + package + "/" + fileName + ".o";
      |                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/basic_string.h:3733:5: note: resolves to this declaration
 3733 |     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1433:5: warning: no header providing "filesToCompile" is directly included [misc-include-cleaner]
 1433 |     filesToCompile->push_back(outputPath);
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1438:9: warning: 'errs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1438 |         errs() << "Could not open file for writing: " << EC.message() << "\n";
      |         ^
/usr/include/llvm/Support/raw_ostream.h:600:17: note: resolves to this declaration
  600 | raw_fd_ostream &errs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1438:16: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1438 |         errs() << "Could not open file for writing: " << EC.message() << "\n";
      |                ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1438:55: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1438 |         errs() << "Could not open file for writing: " << EC.message() << "\n";
      |                                                       ^
/usr/include/llvm/Support/raw_ostream.h:247:16: note: resolves to this declaration
  247 |   raw_ostream &operator<<(const std::string &Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1438:71: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1438 |         errs() << "Could not open file for writing: " << EC.message() << "\n";
      |                                                                       ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1443:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1443 |     if (targetMachine->addPassesToEmitFile(pass, dest, nullptr, CodeGenFileType::ObjectFile))
      |         ^
/usr/include/llvm/Target/TargetMachine.h:385:23: note: default parameter was declared here
  385 |                       bool /*DisableVerify*/ = true,
      |                       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1443:65: warning: no header providing "llvm::CodeGenFileType" is directly included [misc-include-cleaner]
 1443 |     if (targetMachine->addPassesToEmitFile(pass, dest, nullptr, CodeGenFileType::ObjectFile))
      |                                                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1445:9: warning: 'errs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1445 |         errs() << "TargetMachine can't emit a file of this type\n";
      |         ^
/usr/include/llvm/Support/raw_ostream.h:600:17: note: resolves to this declaration
  600 | raw_fd_ostream &errs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1445:16: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1445 |         errs() << "TargetMachine can't emit a file of this type\n";
      |                ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1452:5: warning: 'outs' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1452 |     outs() << "Object file emitted to " << outputPath << "\n";
      |     ^
/usr/include/llvm/Support/raw_ostream.h:593:17: note: resolves to this declaration
  593 | raw_fd_ostream &outs();
      |                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1452:5: warning: no header providing "llvm::outs" is directly included [misc-include-cleaner]
 1452 |     outs() << "Object file emitted to " << outputPath << "\n";
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1452:12: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1452 |     outs() << "Object file emitted to " << outputPath << "\n";
      |            ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1452:41: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1452 |     outs() << "Object file emitted to " << outputPath << "\n";
      |                                         ^
/usr/include/llvm/Support/raw_ostream.h:247:16: note: resolves to this declaration
  247 |   raw_ostream &operator<<(const std::string &Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1452:55: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1452 |     outs() << "Object file emitted to " << outputPath << "\n";
      |                                                       ^
/usr/include/llvm/Support/raw_ostream.h:240:16: note: resolves to this declaration
  240 |   raw_ostream &operator<<(const char *Str) {
      |                ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1455:26: warning: no header providing "std::set" is directly included [misc-include-cleaner]
    7 | void interGen(const std::set<IncludeGraphNode *> &map)
      |                          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1457:10: warning: no header providing "std::unordered_map" is directly included [misc-include-cleaner]
    7 |     std::unordered_map<IncludeGraphNode *, bool> visited{};
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1461:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1461 |     for (auto &node : map)
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1461:10: warning: 'auto &node' can be declared as 'const auto &node' [readability-qualified-auto]
 1461 |     for (auto &node : map)
      |          ^
      |          const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1461:21: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:354:7: note: resolves to this declaration
  354 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1461:21: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:362:7: note: resolves to this declaration
  362 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1461:21: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |     for (auto &node : map)
      |                     ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_tree.h:392:7: note: resolves to this declaration
  392 |       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1468:14: warning: 'auto &node' can be declared as 'const auto &node' [readability-qualified-auto]
 1468 |         for (auto &node : level)
      |              ^
      |              const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1468:25: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1468 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:446:7: note: resolves to this declaration
  446 |       operator*() const noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1468:25: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1468 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:454:7: note: resolves to this declaration
  454 |       operator++() noexcept
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1468:25: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1468 |         for (auto &node : level)
      |                         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/hashtable_policy.h:407:7: note: resolves to this declaration
  407 |       operator==(const _Node_iterator_base& __x, const _Node_iterator_base& __y)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1470:13: warning: variable 'basic_string' of type 'std::string' (aka 'basic_string<char>') can be declared 'const' [misc-const-correctness]
 1470 |             std::string basic_string = node->getName();
      |             ^
      |                         const 
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1470:25: warning: unused local variable 'basic_string' of type 'std::string' (aka 'basic_string<char>') [bugprone-unused-local-non-trivial-variable]
 1470 |             std::string basic_string = node->getName();
      |                         ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1475:13: warning: no header providing "programMap_d" is directly included [misc-include-cleaner]
 1475 |             programMap_d->at(node->getProgram())->genIR(node->getProgram());
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1477:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1477 |             for (auto includeBy : node->getIncludedBy())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1477:18: warning: 'auto includeBy' can be declared as 'auto *includeBy' [llvm-qualified-auto,readability-qualified-auto]
 1477 |             for (auto includeBy : node->getIncludedBy())
      |                  ^~~~
      |                  auto *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1477:33: warning: 'operator*' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1477 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1090:7: note: resolves to this declaration
 1090 |       operator*() const _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1477:33: warning: 'operator++' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1477 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1100:7: note: resolves to this declaration
 1100 |       operator++() _GLIBCXX_NOEXCEPT
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1477:33: warning: 'operator==<dap::inter_gen::IncludeGraphNode **, std::vector<dap::inter_gen::IncludeGraphNode *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1477 |             for (auto includeBy : node->getIncludedBy())
      |                                 ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_iterator.h:1188:5: note: resolves to this declaration
 1188 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1483:9: warning: 'swap<dap::inter_gen::IncludeGraphNode *, std::hash<dap::inter_gen::IncludeGraphNode *>, std::equal_to<dap::inter_gen::IncludeGraphNode *>, std::allocator<dap::inter_gen::IncludeGraphNode *>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1483 |         std::swap(level, nextLevel);
      |         ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_set.h:1799:5: note: resolves to this declaration
 1799 |     swap(unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,
      |     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1483:14: warning: no header providing "std::swap" is directly included [misc-include-cleaner]
 1483 |         std::swap(level, nextLevel);
      |              ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1488:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1488 | Value *InterGenContext::getVal(const std::string &name)
      | ~~~~~~~                 ^                              
      | auto                                                    -> Value *
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1490:10: warning: no header providing "std::stack" is directly included [misc-include-cleaner]
    7 |     std::stack<InterGenBlock *> tmp;
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1495:46: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1495 |             Value *res = blocks.top()->locals[name].first;
      |                                              ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1497:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1497 |             while (!tmp.empty())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1506:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1506 |             for (auto &arg : fun->args())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1508:35: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1508 |                 if (arg.getName() == name)
      |                                   ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1518:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1518 |     if (module->getGlobalVariable(name))
      |         ^
/usr/include/llvm/IR/Module.h:442:37: note: default parameter was declared here
  442 |                                     bool AllowInternal = false) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1518:9: warning: implicit conversion 'GlobalVariable *' -> 'bool' [readability-implicit-bool-conversion]
 1518 |     if (module->getGlobalVariable(name))
      |         ^                              
      |                                         != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1520:16: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1520 |         return module->getGlobalVariable(name);
      |                ^
/usr/include/llvm/IR/Module.h:442:37: note: default parameter was declared here
  442 |                                     bool AllowInternal = false) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1527:6: warning: no header providing "std::pair" is directly included [misc-include-cleaner]
 1527 | std::pair<Value *, VariableMetaData *> InterGenContext::getValWithMetadata(const std::string &name)
      |      ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1527:57: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1527 | std::pair<Value *, VariableMetaData *> InterGenContext::getValWithMetadata(const std::string &name)
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^                                          
      | auto                                                                                                -> std::pair<Value *, VariableMetaData *>
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1534:18: warning: no header providing "std::map" is directly included [misc-include-cleaner]
    7 |             std::map<std::string, std::pair<Value *, VariableMetaData *>>::mapped_type res = blocks.top()->locals[name];
      |                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1534:114: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1534 |             std::map<std::string, std::pair<Value *, VariableMetaData *>>::mapped_type res = blocks.top()->locals[name];
      |                                                                                                                  ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/stl_map.h:504:7: note: resolves to this declaration
  504 |       operator[](const key_type& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1535:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1535 |             while (!tmp.empty())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1544:48: warning: 'operator[]' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1544 |             const auto &funMetadata = functions[fun->getName().str()];
      |                                                ^
/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/14.2.1/../../../../include/c++/14.2.1/bits/unordered_map.h:991:7: note: resolves to this declaration
  991 |       operator[](key_type&& __k)
      |       ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1545:13: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
 1545 |             for (auto &arg : fun->args())
      |             ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1547:35: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1547 |                 if (arg.getName() == name)
      |                                   ^
/usr/include/llvm/ADT/StringRef.h:877:15: note: resolves to this declaration
  877 |   inline bool operator==(StringRef LHS, StringRef RHS) {
      |               ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1557:9: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1557 |     if (module->getGlobalVariable(name))
      |         ^
/usr/include/llvm/IR/Module.h:442:37: note: default parameter was declared here
  442 |                                     bool AllowInternal = false) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1557:9: warning: implicit conversion 'GlobalVariable *' -> 'bool' [readability-implicit-bool-conversion]
 1557 |     if (module->getGlobalVariable(name))
      |         ^                              
      |                                         != nullptr
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1559:17: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
 1559 |         return {module->getGlobalVariable(name), getModuleMetaData(name)->getGlobalValMetaData(name)};
      |                 ^
/usr/include/llvm/IR/Module.h:442:37: note: default parameter was declared here
  442 |                                     bool AllowInternal = false) {
      |                                     ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1559:50: warning: 'getModuleMetaData' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1559 |         return {module->getGlobalVariable(name), getModuleMetaData(name)->getGlobalValMetaData(name)};
      |                                                  ^
/home/napbad/tmp/dap/src/core/common/global.h:70:33: note: resolves to this declaration
   70 | dap::inter_gen::ModuleMetaData *getModuleMetaData(const std::string &name);
      |                                 ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1559:50: warning: no header providing "getModuleMetaData" is directly included [misc-include-cleaner]
 1559 |         return {module->getGlobalVariable(name), getModuleMetaData(name)->getGlobalValMetaData(name)};
      |                                                  ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:1565:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
 1565 | FunctionMetaData *InterGenContext::getCurrFunMetaData() const
      | ~~~~~~~~~~~~~~~~~~                 ^                         
      | auto                                                          -> FunctionMetaData *
/home/napbad/tmp/dap/src/core/parser/node.h:15:10: warning: circular header file dependency detected while including 'codegen_inter.h', please check the include path [misc-header-include-cycle]
   15 | #include "src/core/inter_gen/codegen_inter.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.h:18:10: note: 'node.h' included from here
   18 | #include "src/core/parser/node.h"
      |          ^
/home/napbad/tmp/dap/src/core/inter_gen/codegen_inter.cpp:30:10: note: 'codegen_inter.h' included from here
   30 | #include "codegen_inter.h"
      |          ^
[21/21] Linking CXX executable dap_main
