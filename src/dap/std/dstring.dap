package dap.std;

fun strlen(imt byte* s) int {
    var int res? = 0;
    if s == 0 {
      return 0;
    }
    for int i = 0; (i < 99999999) && (s[i] != 0); ++i {
      res = i;
    }
    return res + 1;
}

fun reverse(imt byte* s) {
    if (s == 0) {
      return;
    }
    imt int len = strlen(s);
    for int i = 0; i < len / 2; ++i {
        imt byte tmp = s[i];
        s[i] = s[(len - i) - 1];
        s[(len - i) - 1] = tmp;
    }
}

fun strcpy(var byte* dest, imt byte* src) {
    for int i = 0; src[i] != 0; ++i {
        dest[i] = src[i];
    }
}

fun fillStr(var byte* s, imt byte c, imt int len) {
    for int i = 0; i < len; ++i {
        s[i] = c;
    }
}

